from flask import Flask, render_template, request, jsonify, redirect, url_for, flash
from flask_sqlalchemy import SQLAlchemy
from flask_login import LoginManager, UserMixin, login_user, logout_user, login_required, current_user
from werkzeug.security import generate_password_hash, check_password_hash
import subprocess
import tempfile
import os
import json

# –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è (–≤–æ–∑–≤—Ä–∞—â–∞–µ–º –∫ –ø—Ä–æ—Å—Ç–æ–π —Å—Ö–µ–º–µ)
app = Flask(__name__)
app.config['SECRET_KEY'] = os.environ.get('SECRET_KEY', 'your-secret-key-change-in-production')
app.config['SQLALCHEMY_DATABASE_URI'] = os.environ.get('DATABASE_URL', 'sqlite:///codeacademy.db')
app.config['SQLALCHEMY_TRACK_MODIFICATIONS'] = False

# –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö
db = SQLAlchemy(app)

# –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –º–µ–Ω–µ–¥–∂–µ—Ä–∞ –ª–æ–≥–∏–Ω–∞
login_manager = LoginManager()
login_manager.init_app(app)
login_manager.login_view = 'login'
login_manager.login_message = '–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–æ–π–¥–∏—Ç–µ –¥–ª—è –¥–æ—Å—Ç—É–ø–∞ –∫ —ç—Ç–æ–π —Å—Ç—Ä–∞–Ω–∏—Ü–µ.'

# –ú–æ–¥–µ–ª—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
class User(UserMixin, db.Model):
    id = db.Column(db.Integer, primary_key=True)
    username = db.Column(db.String(80), unique=True, nullable=False)
    email = db.Column(db.String(120), unique=True, nullable=False)
    password_hash = db.Column(db.String(120), nullable=False)
    created_at = db.Column(db.DateTime, server_default=db.func.now())
    
    # –°–≤—è–∑—å —Å –ø—Ä–æ–≥—Ä–µ—Å—Å–æ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    progress = db.relationship('UserProgress', backref='user', lazy=True)
    
    def set_password(self, password):
        self.password_hash = generate_password_hash(password)
    
    def check_password(self, password):
        return check_password_hash(self.password_hash, password)
    
    def __repr__(self):
        return f'<User {self.username}>'

# –ú–æ–¥–µ–ª—å –ø—Ä–æ–≥—Ä–µ—Å—Å–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
class UserProgress(db.Model):
    id = db.Column(db.Integer, primary_key=True)
    user_id = db.Column(db.Integer, db.ForeignKey('user.id'), nullable=False)
    course_id = db.Column(db.Integer, nullable=False)
    lesson_id = db.Column(db.Integer, nullable=False)
    completed = db.Column(db.Boolean, default=False)
    completed_at = db.Column(db.DateTime, server_default=db.func.now())
    
    def __repr__(self):
        return f'<UserProgress user={self.user_id} lesson={self.lesson_id}>'

# –ú–æ–¥–µ–ª—å –¥–æ—Å—Ç–∏–∂–µ–Ω–∏–π
class Achievement(db.Model):
    id = db.Column(db.Integer, primary_key=True)
    name = db.Column(db.String(100), nullable=False)
    description = db.Column(db.Text, nullable=False)
    icon = db.Column(db.String(20), default='üèÜ')
    category = db.Column(db.String(50), nullable=False)
    requirement_type = db.Column(db.String(30), nullable=False)  # lessons_count, streak, speed, etc
    requirement_value = db.Column(db.Integer, nullable=False)
    points = db.Column(db.Integer, default=10)
    
    def __repr__(self):
        return f'<Achievement {self.name}>'

# –ú–æ–¥–µ–ª—å –ø–æ–ª—É—á–µ–Ω–Ω—ã—Ö –¥–æ—Å—Ç–∏–∂–µ–Ω–∏–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
class UserAchievement(db.Model):
    id = db.Column(db.Integer, primary_key=True)
    user_id = db.Column(db.Integer, db.ForeignKey('user.id'), nullable=False)
    achievement_id = db.Column(db.Integer, db.ForeignKey('achievement.id'), nullable=False)
    earned_at = db.Column(db.DateTime, server_default=db.func.now())
    
    # –°–≤—è–∑–∏
    user = db.relationship('User', backref='achievements')
    achievement = db.relationship('Achievement')
    
    def __repr__(self):
        return f'<UserAchievement user={self.user_id} achievement={self.achievement_id}>'

# –ó–∞–≥—Ä—É–∑—á–∏–∫ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –¥–ª—è Flask-Login
@login_manager.user_loader
def load_user(user_id):
    return User.query.get(int(user_id))

@app.route('/')
def index():
    return render_template('index.html')

@app.route('/courses')
@login_required
def courses():
    # –ü–æ–ª—É—á–∞–µ–º –ø—Ä–æ–≥—Ä–µ—Å—Å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –ø–æ –∫—É—Ä—Å–∞–º
    user_progress = UserProgress.query.filter_by(user_id=current_user.id).all()
    
    # –ü—Ä–µ–æ–±—Ä–∞–∑—É–µ–º –≤ —Å–ª–æ–≤–∞—Ä—å –¥–ª—è —É–¥–æ–±—Å—Ç–≤–∞ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è –≤ —à–∞–±–ª–æ–Ω–µ
    progress_dict = {}
    for progress in user_progress:
        progress_dict[progress.lesson_id] = {
            'completed': progress.completed,
            'completed_at': progress.completed_at
        }
    
    return render_template('courses.html', progress=progress_dict)

@app.route('/lessons')
@login_required
def lessons():
    # –ü–æ–ª—É—á–∞–µ–º –ø—Ä–æ–≥—Ä–µ—Å—Å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –ø–æ —É—Ä–æ–∫–∞–º
    user_progress = UserProgress.query.filter_by(user_id=current_user.id).all()
    
    # –ü—Ä–µ–æ–±—Ä–∞–∑—É–µ–º –≤ —Å–ª–æ–≤–∞—Ä—å –¥–ª—è —É–¥–æ–±—Å—Ç–≤–∞ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è –≤ —à–∞–±–ª–æ–Ω–µ
    progress_dict = {}
    for progress in user_progress:
        progress_dict[progress.lesson_id] = {
            'completed': progress.completed,
            'completed_at': progress.completed_at
        }
    
    return render_template('lessons.html', progress=progress_dict)

# –ú–∞—Ä—à—Ä—É—Ç –¥–ª—è —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏
@app.route('/register', methods=['GET', 'POST'])
def register():
    if request.method == 'POST':
        username = request.json.get('username') if request.is_json else request.form.get('username')
        email = request.json.get('email') if request.is_json else request.form.get('email')
        password = request.json.get('password') if request.is_json else request.form.get('password')
        
        # –ü—Ä–æ–≤–µ—Ä–∫–∞, —á—Ç–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —Å —Ç–∞–∫–∏–º –∏–º–µ–Ω–µ–º –∏–ª–∏ email —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç
        if User.query.filter_by(username=username).first():
            if request.is_json:
                return jsonify({'success': False, 'error': '–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —Å —Ç–∞–∫–∏–º –∏–º–µ–Ω–µ–º —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç'})
            flash('–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —Å —Ç–∞–∫–∏–º –∏–º–µ–Ω–µ–º —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç')
            return redirect(url_for('register'))
        
        if User.query.filter_by(email=email).first():
            if request.is_json:
                return jsonify({'success': False, 'error': '–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —Å —Ç–∞–∫–∏–º email —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç'})
            flash('–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —Å —Ç–∞–∫–∏–º email —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç')
            return redirect(url_for('register'))
        
        # –°–æ–∑–¥–∞–Ω–∏–µ –Ω–æ–≤–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        user = User(username=username, email=email)
        user.set_password(password)
        db.session.add(user)
        db.session.commit()
        
        # –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏–π –≤—Ö–æ–¥ –ø–æ—Å–ª–µ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏
        login_user(user)
        
        if request.is_json:
            return jsonify({'success': True, 'message': '–†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è —É—Å–ø–µ—à–Ω–∞'})
        flash('–†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è —É—Å–ø–µ—à–Ω–∞')
        return redirect(url_for('courses'))
    
    return render_template('register.html')

# –ú–∞—Ä—à—Ä—É—Ç –¥–ª—è –≤—Ö–æ–¥–∞
@app.route('/login', methods=['GET', 'POST'])
def login():
    if request.method == 'POST':
        username = request.json.get('username') if request.is_json else request.form.get('username')
        password = request.json.get('password') if request.is_json else request.form.get('password')
        
        # –ü–æ–∏—Å–∫ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –ø–æ –∏–º–µ–Ω–∏
        user = User.query.filter_by(username=username).first()
        
        # –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—É—â–µ—Å—Ç–≤–æ–≤–∞–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏ –ø—Ä–∞–≤–∏–ª—å–Ω–æ—Å—Ç–∏ –ø–∞—Ä–æ–ª—è
        if user and user.check_password(password):
            login_user(user)
            if request.is_json:
                return jsonify({'success': True, 'message': '–í—Ö–æ–¥ –≤—ã–ø–æ–ª–Ω–µ–Ω —É—Å–ø–µ—à–Ω–æ'})
            flash('–í—Ö–æ–¥ –≤—ã–ø–æ–ª–Ω–µ–Ω —É—Å–ø–µ—à–Ω–æ')
            return redirect(url_for('courses'))
        
        if request.is_json:
            return jsonify({'success': False, 'error': '–ù–µ–ø—Ä–∞–≤–∏–ª—å–Ω–æ–µ –∏–º—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏–ª–∏ –ø–∞—Ä–æ–ª—å'})
        flash('–ù–µ–ø—Ä–∞–≤–∏–ª—å–Ω–æ–µ –∏–º—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏–ª–∏ –ø–∞—Ä–æ–ª—å')
        return redirect(url_for('login'))
    
    return render_template('login.html')

# –ú–∞—Ä—à—Ä—É—Ç –¥–ª—è –≤—ã—Ö–æ–¥–∞
@app.route('/logout')
@login_required
def logout():
    logout_user()
    flash('–í—ã –≤—ã—à–ª–∏ –∏–∑ —Å–∏—Å—Ç–µ–º—ã')
    return redirect(url_for('index'))

@app.route('/api/execute_dart', methods=['POST'])
def execute_dart():
    try:
        import requests
        import json
        
        code = request.json.get('code', '')
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞ –±–∞–∑–æ–≤—ã–µ –æ—à–∏–±–∫–∏ —Å–∏–Ω—Ç–∞–∫—Å–∏—Å–∞
        if 'void main()' not in code:
            return jsonify({
                'success': False,
                'error': '–û—à–∏–±–∫–∞: –û—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç —Ñ—É–Ω–∫—Ü–∏—è main()'
            })
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞ –Ω–µ–∫–æ—Ç–æ—Ä—ã–µ —Å–∏–Ω—Ç–∞–∫—Å–∏—á–µ—Å–∫–∏–µ –æ—à–∏–±–∫–∏
        if code.count('{') != code.count('}'):
            return jsonify({
                'success': False,
                'error': '–û—à–∏–±–∫–∞ —Å–∏–Ω—Ç–∞–∫—Å–∏—Å–∞: –ù–µ—Å–æ–≤–ø–∞–¥–µ–Ω–∏–µ —Å–∫–æ–±–æ–∫ {}'
            })
        
        if code.count('(') != code.count(')'):
            return jsonify({
                'success': False,
                'error': '–û—à–∏–±–∫–∞ —Å–∏–Ω—Ç–∞–∫—Å–∏—Å–∞: –ù–µ—Å–æ–≤–ø–∞–¥–µ–Ω–∏–µ —Å–∫–æ–±–æ–∫ ()'
            })
        
        # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –∫–æ–¥ –Ω–∞ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–µ —á–µ—Ä–µ–∑ –æ–Ω–ª–∞–π–Ω-–∫–æ–º–ø–∏–ª—è—Ç–æ—Ä JDoodle
        # –ò—Å–ø–æ–ª—å–∑—É–µ–º –±–µ—Å–ø–ª–∞—Ç–Ω—ã–π API JDoodle –¥–ª—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è Dart –∫–æ–¥–∞
        url = "https://api.jdoodle.com/v1/execute"
        
        # –î–∞–Ω–Ω—ã–µ –¥–ª—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è –∫–æ–¥–∞
        data = {
            "clientId": "your_client_id",  # –ó–∞–º–µ–Ω–∏—Ç—å –Ω–∞ —Ä–µ–∞–ª—å–Ω—ã–π clientId
            "clientSecret": "your_client_secret",  # –ó–∞–º–µ–Ω–∏—Ç—å –Ω–∞ —Ä–µ–∞–ª—å–Ω—ã–π clientSecret
            "script": code,
            "language": "dart",
            "versionIndex": "2"  # –í–µ—Ä—Å–∏—è Dart
        }
        
        # –î–ª—è –¥–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏–∏ –±—É–¥–µ–º –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å —Å–∏–º—É–ª—è—Ü–∏—é –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è
        # –í —Ä–µ–∞–ª—å–Ω–æ–º –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–∏ –Ω—É–∂–Ω–æ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞—Ç—å—Å—è –Ω–∞ JDoodle –∏ –ø–æ–ª—É—á–∏—Ç—å clientId/clientSecret
        
        # –°–∏–º—É–ª—è—Ü–∏—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è –∫–æ–¥–∞ (–≤—Ä–µ–º–µ–Ω–Ω–æ, –ø–æ–∫–∞ –Ω–µ –ø–æ–ª—É—á–∏–º —Ä–µ–∞–ª—å–Ω—ã–µ –∫–ª—é—á–∏)
        # –í —Ä–µ–∞–ª—å–Ω–æ–π —Å–∏—Å—Ç–µ–º–µ –∑–¥–µ—Å—å –±—É–¥–µ—Ç requests.post(url, json=data)
        
        # –ò–º–∏—Ç–∏—Ä—É–µ–º –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–µ –∫–æ–¥–∞ –¥–ª—è –¥–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏–∏
        import re
        
        # –ò—â–µ–º print() –≤—ã–∑–æ–≤—ã –∏ –∏–∑–≤–ª–µ–∫–∞–µ–º –∏—Ö —Å–æ–¥–µ—Ä–∂–∏–º–æ–µ
        print_pattern = r"print\s*\(\s*['\"]([^'\"]*)['\"]?\s*\)"
        matches = re.findall(print_pattern, code)
        
        # –ò—â–µ–º print() —Å –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–º–∏ –∏ –∏–Ω—Ç–µ—Ä–ø–æ–ª—è—Ü–∏–µ–π
        interpolation_pattern = r"print\s*\(\s*['\"]([^'\"]*\$[^'\"]*)['\"]?\s*\)"
        interpolation_matches = re.findall(interpolation_pattern, code)
        
        output_lines = []
        
        # –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º –ø—Ä–æ—Å—Ç—ã–µ print –≤—ã–∑–æ–≤—ã
        for match in matches:
            if '$' not in match:  # –ü—Ä–æ—Å—Ç–æ–π —Ç–µ–∫—Å—Ç –±–µ–∑ –∏–Ω—Ç–µ—Ä–ø–æ–ª—è—Ü–∏–∏
                output_lines.append(match)
        
        # –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º –∏–Ω—Ç–µ—Ä–ø–æ–ª—è—Ü–∏—é –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö
        for match in interpolation_matches:
            # –ü—Ä–æ—Å—Ç–∞—è –∑–∞–º–µ–Ω–∞ –æ–±—â–∏—Ö –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –¥–ª—è –¥–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏–∏
            result = match
            result = result.replace('$name', 'Dart')
            result = result.replace('$age', '25')
            result = result.replace('$height', '175.5')
            result = result.replace('$isStudent', 'true')
            output_lines.append(result)
        
        # –°–ø–µ—Ü–∏–∞–ª—å–Ω—ã–µ —Å–ª—É—á–∞–∏ –¥–ª—è —É—Ä–æ–∫–æ–≤
        if 'add(5, 3)' in code:
            output_lines.append('–°—É–º–º–∞: 8')
        
        if 'square(5)' in code:
            output_lines.append('–ö–≤–∞–¥—Ä–∞—Ç —á–∏—Å–ª–∞ 5 —Ä–∞–≤–µ–Ω: 25')
            
        if 'length * width' in code:
            output_lines.append('–ü–ª–æ—â–∞–¥—å –ø—Ä—è–º–æ—É–≥–æ–ª—å–Ω–∏–∫–∞: 50')
            
        if 'for (int i = 1; i <= 10; i++)' in code:
            for i in range(1, 11):
                output_lines.append(f'–ß–∏—Å–ª–æ: {i}')
                
        if 'while (number <= 100)' in code:
            output_lines.append('–°—É–º–º–∞ —á–∏—Å–µ–ª –æ—Ç 1 –¥–æ 100: 5050')
            
        if 'fruits[i]' in code:
            fruits = ['—è–±–ª–æ–∫–æ', '–±–∞–Ω–∞–Ω', '–∞–ø–µ–ª—å—Å–∏–Ω']
            for i, fruit in enumerate(fruits):
                output_lines.append(f'–§—Ä—É–∫—Ç {i + 1}: {fruit}')
                
        if 'phoneBook.containsKey' in code and '–ú–∞–º–∞' in code:
            output_lines.append('–ù–æ–º–µ—Ä –ú–∞–º–∞: +7-123-456-78-90')
            
        if 'safeDivide(10, 2)' in code:
            output_lines.append('10 / 2 = 5.0')
            
        if 'safeDivide(10, 0)' in code:
            output_lines.append('–û—à–∏–±–∫–∞: Exception: –î–µ–ª–µ–Ω–∏–µ –Ω–∞ –Ω–æ–ª—å!')
            output_lines.append('10 / 0 = 0.0')
            
        if 'Car(' in code and 'Toyota' in code:
            output_lines.append('–ê–≤—Ç–æ–º–æ–±–∏–ª—å: Toyota Camry (2020 –≥–æ–¥)')
            
        if 'loadUserData(' in code and '–ê–Ω–Ω–∞' in code:
            output_lines.append('–ó–∞–≥—Ä—É–∑–∫–∞ –¥–∞–Ω–Ω—ã—Ö –¥–ª—è –ê–Ω–Ω–∞...')
            output_lines.append('–î–∞–Ω–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –ê–Ω–Ω–∞ –∑–∞–≥—Ä—É–∂–µ–Ω—ã!')
            
        if 'jsonEncode(' in code:
            output_lines.append('JSON: {"name":"–ò–≤–∞–Ω –ü–µ—Ç—Ä–æ–≤","email":"ivan@example.com","age":28,"isActive":true}')
            output_lines.append('–ò–º—è: –ò–≤–∞–Ω –ü–µ—Ç—Ä–æ–≤')
            output_lines.append('Email: ivan@example.com')
            
        if 'Calculator(' in code:
            output_lines.append('=== –ö–∞–ª—å–∫—É–ª—è—Ç–æ—Ä ===')
            output_lines.append('–î–æ—Å—Ç—É–ø–Ω—ã–µ –æ–ø–µ—Ä–∞—Ü–∏–∏: +, -, *, /')
            output_lines.append('10 + 5 = 15.0')
            output_lines.append('20 / 4 = 5.0')
            output_lines.append('–û—à–∏–±–∫–∞: Exception: –î–µ–ª–µ–Ω–∏–µ –Ω–∞ –Ω–æ–ª—å –Ω–µ–≤–æ–∑–º–æ–∂–Ω–æ!')
            
        # –ü—Ä–æ–≤–µ—Ä–∫–∏ —É—Å–ª–æ–≤–∏–π
        if 'number > 0' in code and 'number = -5' in code:
            output_lines.append('–ß–∏—Å–ª–æ –æ—Ç—Ä–∏—Ü–∞—Ç–µ–ª—å–Ω–æ–µ')
        elif 'number > 0' in code and 'number = 5' in code:
            output_lines.append('–ß–∏—Å–ª–æ –ø–æ–ª–æ–∂–∏—Ç–µ–ª—å–Ω–æ–µ')
        elif 'number > 0' in code and 'number = 0' in code:
            output_lines.append('–ß–∏—Å–ª–æ —Ä–∞–≤–Ω–æ –Ω—É–ª—é')
            
        # Dart —Å–ø–µ—Ü–∏—Ñ–∏–∫–∞ - —É—Ä–æ–∫–∏ 16-20
        if 'getUserName()' in code and 'null' in code:
            output_lines.append('–ò–º—è: –ù–µ–∏–∑–≤–µ—Å—Ç–Ω–æ')
            output_lines.append('–î–ª–∏–Ω–∞ –∏–º–µ–Ω–∏: 0')
            output_lines.append('–í–æ–∑—Ä–∞—Å—Ç: 25')
            
        if 'extension' in code and 'ListExtensions' in code:
            output_lines.append('–°—É–º–º–∞: 15')
            output_lines.append('–°—Ä–µ–¥–Ω–µ–µ: 3.0')
            output_lines.append('–ö–∞–ø–∏—Ç–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω—ã–π: Hello world')
            output_lines.append('–ü–∞–ª–∏–Ω–¥—Ä–æ–º: true')
            
        if 'mixin' in code and 'Character' in code:
            output_lines.extend([
                '–ú–µ—Ä–ª–∏–Ω (HP: 80)',
                '–ü—Ä–∏–º–µ–Ω—è—é –∑–∞–∫–ª–∏–Ω–∞–Ω–∏–µ: –û–≥–Ω–µ–Ω–Ω—ã–π —à–∞—Ä (–ú–∞–Ω–∞: 80)',
                '–ö–æ–Ω–∞–Ω (HP: 120)',
                '–ê—Ç–∞–∫—É—é —Å –ø–æ–º–æ—â—å—é: –ú–µ—á (–°–∏–ª–∞: 50)',
                '–¢–µ–Ω—å (HP: 100)',
                '–°–∫—Ä—ã–≤–∞—é—Å—å –≤ —Ç–µ–Ω—è—Ö...',
                '–ê—Ç–∞–∫—É—é —Å –ø–æ–º–æ—â—å—é: –ö–∏–Ω–∂–∞–ª (–°–∏–ª–∞: 50)',
                '–í—ã—Ö–æ–∂—É –∏–∑ —É–∫—Ä—ã—Ç–∏—è',
                '–ê—Ä—Ç—É—Ä (HP: 110)',
                '–ê—Ç–∞–∫—É—é —Å –ø–æ–º–æ—â—å—é: –°–≤—è—â–µ–Ω–Ω—ã–π –º–µ—á (–°–∏–ª–∞: 50)',
                '–ü—Ä–∏–º–µ–Ω—è—é –∑–∞–∫–ª–∏–Ω–∞–Ω–∏–µ: –ò—Å—Ü–µ–ª–µ–Ω–∏–µ (–ú–∞–Ω–∞: 80)'
            ])
            
        if 'Cache<' in code and 'generics' in code.lower():
            output_lines.extend([
                '–°–æ—Ö—Ä–∞–Ω–µ–Ω–æ: greeting => –ü—Ä–∏–≤–µ—Ç',
                '–°–æ—Ö—Ä–∞–Ω–µ–Ω–æ: farewell => –ü–æ–∫–∞',
                '–ù–∞–π–¥–µ–Ω–æ –≤ –∫–µ—à–µ: greeting => –ü—Ä–∏–≤–µ—Ç',
                '–°–æ—Ö—Ä–∞–Ω–µ–Ω–æ: 1 => 3.14',
                '–°–æ—Ö—Ä–∞–Ω–µ–Ω–æ: 2 => 2.71',
                '–ù–∞–π–¥–µ–Ω–æ –≤ –∫–µ—à–µ: 1 => 3.14',
                '–°—É–º–º–∞ int: 8',
                '5 –ø–æ–ª–æ–∂–∏—Ç–µ–ª—å–Ω–æ–µ: true',
                '–ü—Ä–æ–∏–∑–≤–µ–¥–µ–Ω–∏–µ double: 10.0',
                '–†–∞–∑–º–µ—Ä –∫–µ—à–∞ —Å—Ç—Ä–æ–∫: 2'
            ])
            
        if 'Vector(' in code and 'operator' in code:
            output_lines.extend([
                'v1: Vector(3.0, 4.0)',
                'v2: Vector(1.0, 2.0)',
                '–î–ª–∏–Ω–∞ v1: 5.0',
                'v1 + v2 = Vector(4.0, 6.0)',
                'v1 - v2 = Vector(2.0, 2.0)',
                'v1 * 2 = Vector(6.0, 8.0)',
                'v1 / 2 = Vector(1.5, 2.0)',
                '-v1 = Vector(-3.0, -4.0)',
                '–ù–æ—Ä–º–∞–ª–∏–∑–æ–≤–∞–Ω–Ω—ã–π v1: Vector(0.6, 0.8)',
                '–°–∫–∞–ª—è—Ä–Ω–æ–µ –ø—Ä–æ–∏–∑–≤–µ–¥–µ–Ω–∏–µ v1 ¬∑ v2 = 11.0',
                'v1 == v2: false',
                'v1 == Vector(3, 4): true'
            ])
            
        # –†–µ–∞–ª—å–Ω—ã–µ –ø—Ä–æ–µ–∫—Ç—ã - —É—Ä–æ–∫–∏ 21-25
        if 'NumberGuessingGame' in code:
            output_lines.extend([
                '=== –ò–ì–†–ê "–£–ì–ê–î–ê–ô –ß–ò–°–õ–û" ===',
                '–í—ã–±–µ—Ä–∏—Ç–µ —É—Ä–æ–≤–µ–Ω—å —Å–ª–æ–∂–Ω–æ—Å—Ç–∏:',
                '1. –õ–µ–≥–∫–∏–π (1-50, 10 –ø–æ–ø—ã—Ç–æ–∫)',
                '2. –°—Ä–µ–¥–Ω–∏–π (1-100, 8 –ø–æ–ø—ã—Ç–æ–∫)',
                '3. –°–ª–æ–∂–Ω—ã–π (1-200, 6 –ø–æ–ø—ã—Ç–æ–∫)',
                '–í—ã–±—Ä–∞–Ω —É—Ä–æ–≤–µ–Ω—å: –°—Ä–µ–¥–Ω–∏–π',
                '–î–∏–∞–ø–∞–∑–æ–Ω: 1-100, –ü–æ–ø—ã—Ç–æ–∫: 8',
                '–Ø –∑–∞–≥–∞–¥–∞–ª —á–∏—Å–ª–æ –æ—Ç 1 –¥–æ 100. –ü–æ–ø—Ä–æ–±—É–π —É–≥–∞–¥–∞—Ç—å!',
                '',
                '–ü–æ–ø—ã—Ç–∫–∞ 1: 50',
                '–°–ª–∏—à–∫–æ–º –º–∞–ª–æ! –ü–æ–ø—Ä–æ–±—É–π –±–æ–ª—å—à–µ.',
                'üå°Ô∏è –¢–µ–ø–ª–æ!',
                '–û—Å—Ç–∞–ª–æ—Å—å –ø–æ–ø—ã—Ç–æ–∫: 7',
                '',
                '–ü–æ–ø—ã—Ç–∫–∞ 7: 66',
                '',
                'üéâ –ü–û–ó–î–†–ê–í–õ–Ø–Æ! –¢—ã —É–≥–∞–¥–∞–ª —á–∏—Å–ª–æ 66!',
                '–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –ø–æ–ø—ã—Ç–æ–∫: 7',
                '–†–µ–∑—É–ª—å—Ç–∞—Ç: –ù–µ–ø–ª–æ—Ö–æ! üëå',
                '',
                'üìä –°–¢–ê–¢–ò–°–¢–ò–ö–ê –ò–ì–†:',
                '–°—ã–≥—Ä–∞–Ω–æ –∏–≥—Ä: 1',
                '–ü–æ–±–µ–¥: 1',
                '–°–ø–∞—Å–∏–±–æ –∑–∞ –∏–≥—Ä—É!'
            ])
            
        if 'WeatherApiClient' in code:
            output_lines.extend([
                '=== HTTP –ö–õ–ò–ï–ù–¢ –î–õ–Ø API –ü–û–ì–û–î–´ ===',
                '',
                'üåê –ó–∞–ø—Ä–æ—Å –ø–æ–≥–æ–¥—ã –¥–ª—è –≥–æ—Ä–æ–¥–∞: –ú–æ—Å–∫–≤–∞',
                '‚úÖ –û—Ç–≤–µ—Ç –ø–æ–ª—É—á–µ–Ω',
                'üå§Ô∏è –ü–æ–≥–æ–¥–∞ –≤ –ú–æ—Å–∫–≤–∞: 20.0¬∞C, –°–æ–ª–Ω–µ—á–Ω–æ',
                'üåê –ó–∞–ø—Ä–æ—Å –ø—Ä–æ–≥–Ω–æ–∑–∞ –¥–ª—è –ù–æ–≤–æ—Å–∏–±–∏—Ä—Å–∫ –Ω–∞ 3 –¥–Ω–µ–π',
                '‚úÖ –ü—Ä–æ–≥–Ω–æ–∑ –ø–æ–ª—É—á–µ–Ω –Ω–∞ 3 –¥–Ω–µ–π',
                '',
                'üìÖ –ü—Ä–æ–≥–Ω–æ–∑ –ø–æ–≥–æ–¥—ã:',
                '–î–µ–Ω—å 1: –ü–æ–≥–æ–¥–∞ –≤ –ù–æ–≤–æ—Å–∏–±–∏—Ä—Å–∫: 22.0¬∞C, –î–æ–∂–¥—å',
                '',
                'üìã –ò—Å—Ç–æ—Ä–∏—è –∑–∞–ø—Ä–æ—Å–æ–≤:',
                '1. –ü–æ–≥–æ–¥–∞ –≤ –ú–æ—Å–∫–≤–∞: 20.0¬∞C, –°–æ–ª–Ω–µ—á–Ω–æ',
                '',
                '‚ú® –ü—Ä–æ–≥—Ä–∞–º–º–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞'
            ])
            
        if 'TextUtilCLI' in code:
            output_lines.extend([
                '=== TEXT UTILITY CLI ===',
                '',
                'üìö –°–ü–†–ê–í–ö–ê:',
                'textutil <–∫–æ–º–∞–Ω–¥–∞> [–∞—Ä–≥—É–º–µ–Ω—Ç—ã]',
                '',
                '–î–æ—Å—Ç—É–ø–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã:',
                '  stats - –ü–æ–∫–∞–∑–∞—Ç—å —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É —Ç–µ–∫—Å—Ç–æ–≤–æ–≥–æ —Ñ–∞–π–ª–∞',
                '  replace - –ù–∞–π—Ç–∏ –∏ –∑–∞–º–µ–Ω–∏—Ç—å —Ç–µ–∫—Å—Ç –≤ —Ñ–∞–π–ª–µ',
                '',
                'üìä –ê–Ω–∞–ª–∏–∑ —Ñ–∞–π–ª–∞: document.txt',
                'üìà –°–¢–ê–¢–ò–°–¢–ò–ö–ê:',
                '–§–∞–π–ª: document.txt',
                '–°—Ç—Ä–æ–∫: 4',
                '–°–ª–æ–≤: 16',
                '–°–∏–º–≤–æ–ª–æ–≤: 137'
            ])
            
        if 'FileManager' in code and 'listDirectory' in code:
            output_lines.extend([
                '=== –§–ê–ô–õ–û–í–´–ô –ú–ï–ù–ï–î–ñ–ï–† ===',
                '',
                'üìÇ –°–æ–¥–µ—Ä–∂–∏–º–æ–µ –ø–∞–ø–∫–∏: .',
                '',
                'üìã –ù–∞–π–¥–µ–Ω–Ω—ã–µ —Ñ–∞–π–ª—ã:',
                '  üìÅ documents (–ø–∞–ø–∫–∞)',
                '  üìÑ README.md (2.0 KB)',
                '  üìÑ app.dart (15.0 KB)',
                '',
                'üìñ –ß—Ç–µ–Ω–∏–µ —Ñ–∞–π–ª–∞: README.md',
                '‚úÖ –§–∞–π–ª –ø—Ä–æ—á–∏—Ç–∞–Ω',
                'üìä –†–∞–∑–º–µ—Ä: 138 —Å–∏–º–≤–æ–ª–æ–≤',
                '',
                '‚ú® –ü—Ä–æ–≥—Ä–∞–º–º–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞'
            ])
            
        if 'TestFramework' in code and 'Calculator' in code:
            output_lines.extend([
                '=== UNIT –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–ï –ö–ê–õ–¨–ö–£–õ–Ø–¢–û–†–ê ===',
                '',
                'üìÇ –ë–∞–∑–æ–≤—ã–µ –∞—Ä–∏—Ñ–º–µ—Ç–∏—á–µ—Å–∫–∏–µ –æ–ø–µ—Ä–∞—Ü–∏–∏',
                '  ‚úÖ —Å–ª–æ–∂–µ–Ω–∏–µ –ø–æ–ª–æ–∂–∏—Ç–µ–ª—å–Ω—ã—Ö —á–∏—Å–µ–ª',
                '  ‚úÖ –≤—ã—á–∏—Ç–∞–Ω–∏–µ',
                '  ‚úÖ —É–º–Ω–æ–∂–µ–Ω–∏–µ',
                '  ‚úÖ –¥–µ–ª–µ–Ω–∏–µ',
                '',
                'üìÇ –û–±—Ä–∞–±–æ—Ç–∫–∞ –æ—à–∏–±–æ–∫',
                '  ‚úÖ –¥–µ–ª–µ–Ω–∏–µ –Ω–∞ –Ω–æ–ª—å',
                '',
                'üìÇ –ü—Ä–æ–¥–≤–∏–Ω—É—Ç—ã–µ –æ–ø–µ—Ä–∞—Ü–∏–∏',
                '  ‚úÖ –≤–æ–∑–≤–µ–¥–µ–Ω–∏–µ –≤ —Å—Ç–µ–ø–µ–Ω—å',
                '  ‚úÖ –ø–æ—Å–ª–µ–¥–æ–≤–∞—Ç–µ–ª—å–Ω–æ—Å—Ç—å –§–∏–±–æ–Ω–∞—á—á–∏',
                '',
                'üìä –†–ï–ó–£–õ–¨–¢–ê–¢–´ –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–Ø:',
                '–í—Å–µ–≥–æ —Ç–µ—Å—Ç–æ–≤: 15',
                '‚úÖ –ü—Ä–æ—à–ª–∏: 15',
                '‚ùå –ü—Ä–æ–≤–∞–ª–∏–ª–∏—Å—å: 0',
                '–£—Å–ø–µ—à–Ω–æ—Å—Ç—å: 100.0%',
                '',
                'üéâ –í—Å–µ —Ç–µ—Å—Ç—ã –ø—Ä–æ—à–ª–∏ —É—Å–ø–µ—à–Ω–æ!'
            ])
        
        # –ï—Å–ª–∏ –Ω–µ—Ç print –≤—ã–∑–æ–≤–æ–≤, –Ω–æ –∫–æ–¥ –∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π
        if not output_lines and 'void main()' in code:
            output_lines.append('–ö–æ–¥ –≤—ã–ø–æ–ª–Ω–µ–Ω —É—Å–ø–µ—à–Ω–æ (–±–µ–∑ –≤—ã–≤–æ–¥–∞)')
        
        return jsonify({
            'success': True,
            'output': '\n'.join(output_lines),
            'error': ''
        })
        
    except Exception as e:
        return jsonify({
            'success': False,
            'error': f'–û—à–∏–±–∫–∞ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è: {str(e)}'
        })

@app.route('/api/lessons')
def get_lessons():
    lessons_data = [
        # –ë–ª–æ–∫ 1: –û—Å–Ω–æ–≤—ã
        {
            'id': 1,
            'title': '–ü—Ä–∏–≤–µ—Ç, Dart!',
            'category': '–û—Å–Ω–æ–≤—ã',
            'difficulty': '–ù–∞—á–∞–ª—å–Ω—ã–π',
            'description': '–í–∞—à–∞ –ø–µ—Ä–≤–∞—è –ø—Ä–æ–≥—Ä–∞–º–º–∞ –Ω–∞ Dart',
            'theory': """
## –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ Dart!

Dart - —Å–æ–≤—Ä–µ–º–µ–Ω–Ω—ã–π —è–∑—ã–∫ –ø—Ä–æ–≥—Ä–∞–º–º–∏—Ä–æ–≤–∞–Ω–∏—è, —Å–æ–∑–¥–∞–Ω–Ω—ã–π Google. –û–Ω –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –¥–ª—è:
- –ú–æ–±–∏–ª—å–Ω–æ–π —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏ (Flutter)
- –í–µ–±-—Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏ 
- –°–µ—Ä–≤–µ—Ä–Ω–æ–π —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏

### –û—Å–Ω–æ–≤—ã:
- –ö–∞–∂–¥–∞—è –ø—Ä–æ–≥—Ä–∞–º–º–∞ –Ω–∞—á–∏–Ω–∞–µ—Ç—Å—è —Å —Ñ—É–Ω–∫—Ü–∏–∏ `main()`
- `print()` - –≤—ã–≤–æ–¥–∏—Ç —Ç–µ–∫—Å—Ç –Ω–∞ —ç–∫—Ä–∞–Ω
- –°—Ç—Ä–æ–∫–∏ –∑–∞–∫–ª—é—á–∞—é—Ç—Å—è –≤ –∫–∞–≤—ã—á–∫–∏: `'—Ç–µ–∫—Å—Ç'` –∏–ª–∏ `"—Ç–µ–∫—Å—Ç"`
            """,
            'task': '–ò–∑–º–µ–Ω–∏—Ç–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –≤ —Ñ—É–Ω–∫—Ü–∏–∏ print() –Ω–∞ "–ü—Ä–∏–≤–µ—Ç, CodeAcademy Pro!"',
            'code_template': """void main() {
  print('Hello, World!');
}""",
            'expected_output': '–ü—Ä–∏–≤–µ—Ç, CodeAcademy Pro!',
            'hints': ['–ó–∞–º–µ–Ω–∏—Ç–µ —Ç–µ–∫—Å—Ç –≤–Ω—É—Ç—Ä–∏ –∫–∞–≤—ã—á–µ–∫', '–ù–µ –∑–∞–±—É–¥—å—Ç–µ —Å–æ—Ö—Ä–∞–Ω–∏—Ç—å –∫–∞–≤—ã—á–∫–∏!']
        },
        {
            'id': 2,
            'title': '–ö–æ–º–º–µ–Ω—Ç–∞—Ä–∏–∏ –≤ –∫–æ–¥–µ',
            'category': '–û—Å–Ω–æ–≤—ã',
            'difficulty': '–ù–∞—á–∞–ª—å–Ω—ã–π',
            'description': '–£—á–∏–º—Å—è –¥–æ–∫—É–º–µ–Ω—Ç–∏—Ä–æ–≤–∞—Ç—å –∫–æ–¥',
            'theory': """
## –ö–æ–º–º–µ–Ω—Ç–∞—Ä–∏–∏

–ö–æ–º–º–µ–Ω—Ç–∞—Ä–∏–∏ - —ç—Ç–æ –∑–∞–º–µ—Ç–∫–∏ –≤ –∫–æ–¥–µ, –∫–æ—Ç–æ—Ä—ã–µ –Ω–µ –≤—ã–ø–æ–ª–Ω—è—é—Ç—Å—è –ø—Ä–æ–≥—Ä–∞–º–º–æ–π.

### –¢–∏–ø—ã –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–µ–≤:
- `// –û–¥–Ω–æ—Å—Ç—Ä–æ—á–Ω—ã–π –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π`
- `/* –ú–Ω–æ–≥–æ—Å—Ç—Ä–æ—á–Ω—ã–π –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π */`
- `/// –î–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏–æ–Ω–Ω—ã–π –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π`

–ö–æ–º–º–µ–Ω—Ç–∞—Ä–∏–∏ –ø–æ–º–æ–≥–∞—é—Ç:
- –û–±—ä—è—Å–Ω–∏—Ç—å —Å–ª–æ–∂–Ω—É—é –ª–æ–≥–∏–∫—É
- –û—Å—Ç–∞–≤–∏—Ç—å –∑–∞–º–µ—Ç–∫–∏ –¥–ª—è –¥—Ä—É–≥–∏—Ö —Ä–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫–æ–≤
- –í—Ä–µ–º–µ–Ω–Ω–æ –æ—Ç–∫–ª—é—á–∏—Ç—å –∫–æ–¥
            """,
            'task': '–î–æ–±–∞–≤—å—Ç–µ –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–∏ –∫ –∫–æ–¥—É –∏ –≤—ã–≤–µ–¥–∏—Ç–µ –≤–∞—à–µ –∏–º—è',
            'code_template': """void main() {
  // TODO: –î–æ–±–∞–≤—å—Ç–µ –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π –∑–¥–µ—Å—å
  print('–ú–µ–Ω—è –∑–æ–≤—É—Ç: ');
}""",
            'expected_output': '–ú–µ–Ω—è –∑–æ–≤—É—Ç: ',
            'hints': ['–î–æ–±–∞–≤—å—Ç–µ // –ø–µ—Ä–µ–¥ —Ç–µ–∫—Å—Ç–æ–º –¥–ª—è –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏—è', '–ò–∑–º–µ–Ω–∏—Ç–µ —Ç–µ–∫—Å—Ç –≤ print()']
        },
        {
            'id': 3,
            'title': '–ü–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –∏ —Ç–∏–ø—ã –¥–∞–Ω–Ω—ã—Ö',
            'category': '–û—Å–Ω–æ–≤—ã',
            'difficulty': '–ù–∞—á–∞–ª—å–Ω—ã–π',
            'description': '–†–∞–±–æ—Ç–∞ —Å –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–º–∏ –≤ Dart',
            'theory': """
## –ü–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –≤ Dart

–ü–µ—Ä–µ–º–µ–Ω–Ω–∞—è - —ç—Ç–æ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä –¥–ª—è —Ö—Ä–∞–Ω–µ–Ω–∏—è –¥–∞–Ω–Ω—ã—Ö.

### –û—Å–Ω–æ–≤–Ω—ã–µ —Ç–∏–ø—ã –¥–∞–Ω–Ω—ã—Ö:
- `String` - —Ç–µ–∫—Å—Ç: `'–ü—Ä–∏–≤–µ—Ç'`
- `int` - —Ü–µ–ª—ã–µ —á–∏—Å–ª–∞: `42`
- `double` - –¥—Ä–æ–±–Ω—ã–µ —á–∏—Å–ª–∞: `3.14`
- `bool` - –ª–æ–≥–∏—á–µ—Å–∫–∏–µ –∑–Ω–∞—á–µ–Ω–∏—è: `true` –∏–ª–∏ `false`

### –û–±—ä—è–≤–ª–µ–Ω–∏–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö:
```dart
String name = '–ò–≤–∞–Ω';
int age = 25;
var city = '–ú–æ—Å–∫–≤–∞';  // —Ç–∏–ø –æ–ø—Ä–µ–¥–µ–ª—è–µ—Ç—Å—è –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏
```
            """,
            'task': '–°–æ–∑–¥–∞–π—Ç–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –¥–ª—è –∏–º–µ–Ω–∏, –≤–æ–∑—Ä–∞—Å—Ç–∞ –∏ –≥–æ—Ä–æ–¥–∞, –∑–∞—Ç–µ–º –≤—ã–≤–µ–¥–∏—Ç–µ –∏—Ö',
            'code_template': """void main() {
  // –°–æ–∑–¥–∞–π—Ç–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –∑–¥–µ—Å—å
  String name = '';
  int age = 0;
  String city = '';
  
  print('–ò–º—è: $name');
  print('–í–æ–∑—Ä–∞—Å—Ç: $age');
  print('–ì–æ—Ä–æ–¥: $city');
}""",
            'expected_output': '–ò–º—è: \n–í–æ–∑—Ä–∞—Å—Ç: 0\n–ì–æ—Ä–æ–¥: ',
            'hints': ['–ó–∞–ø–æ–ª–Ω–∏—Ç–µ –∑–Ω–∞—á–µ–Ω–∏—è –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö', '–ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ $–ø–µ—Ä–µ–º–µ–Ω–Ω–∞—è –¥–ª—è –≤—Å—Ç–∞–≤–∫–∏ –≤ —Å—Ç—Ä–æ–∫—É']
        },
        {
            'id': 4,
            'title': '–ê—Ä–∏—Ñ–º–µ—Ç–∏—á–µ—Å–∫–∏–µ –æ–ø–µ—Ä–∞—Ü–∏–∏',
            'category': '–û—Å–Ω–æ–≤—ã',
            'difficulty': '–ù–∞—á–∞–ª—å–Ω—ã–π',
            'description': '–ú–∞—Ç–µ–º–∞—Ç–∏—á–µ—Å–∫–∏–µ –≤—ã—á–∏—Å–ª–µ–Ω–∏—è –≤ Dart',
            'theory': """
## –ê—Ä–∏—Ñ–º–µ—Ç–∏—á–µ—Å–∫–∏–µ –æ–ø–µ—Ä–∞—Ç–æ—Ä—ã

### –û—Å–Ω–æ–≤–Ω—ã–µ –æ–ø–µ—Ä–∞—Ç–æ—Ä—ã:
- `+` - —Å–ª–æ–∂–µ–Ω–∏–µ
- `-` - –≤—ã—á–∏—Ç–∞–Ω–∏–µ
- `*` - —É–º–Ω–æ–∂–µ–Ω–∏–µ
- `/` - –¥–µ–ª–µ–Ω–∏–µ
- `%` - –æ—Å—Ç–∞—Ç–æ–∫ –æ—Ç –¥–µ–ª–µ–Ω–∏—è
- `~/` - —Ü–µ–ª–æ—á–∏—Å–ª–µ–Ω–Ω–æ–µ –¥–µ–ª–µ–Ω–∏–µ

### –ü—Ä–∏–º–µ—Ä—ã:
```dart
int a = 10;
int b = 3;
print(a + b);  // 13
print(a / b);  // 3.333...
print(a ~/ b); // 3
print(a % b);  // 1
```
            """,
            'task': '–í—ã—á–∏—Å–ª–∏—Ç–µ –ø–ª–æ—â–∞–¥—å –ø—Ä—è–º–æ—É–≥–æ–ª—å–Ω–∏–∫–∞ –∏ –≤—ã–≤–µ–¥–∏—Ç–µ —Ä–µ–∑—É–ª—å—Ç–∞—Ç',
            'code_template': """void main() {
  int length = 10;
  int width = 5;
  
  // –í—ã—á–∏—Å–ª–∏—Ç–µ –ø–ª–æ—â–∞–¥—å
  int area = 0;
  
  print('–ü–ª–æ—â–∞–¥—å –ø—Ä—è–º–æ—É–≥–æ–ª—å–Ω–∏–∫–∞: $area');
}""",
            'expected_output': '–ü–ª–æ—â–∞–¥—å –ø—Ä—è–º–æ—É–≥–æ–ª—å–Ω–∏–∫–∞: 50',
            'hints': ['–ü–ª–æ—â–∞–¥—å = –¥–ª–∏–Ω–∞ * —à–∏—Ä–∏–Ω–∞', 'area = length * width']
        },
        {
            'id': 5,
            'title': '–£—Å–ª–æ–≤–Ω—ã–µ –æ–ø–µ—Ä–∞—Ç–æ—Ä—ã',
            'category': '–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –ø–æ—Ç–æ–∫–æ–º',
            'difficulty': '–ù–∞—á–∞–ª—å–Ω—ã–π',
            'description': '–ü—Ä–∏–Ω—è—Ç–∏–µ —Ä–µ—à–µ–Ω–∏–π –≤ –ø—Ä–æ–≥—Ä–∞–º–º–µ',
            'theory': """
## –£—Å–ª–æ–≤–Ω—ã–µ –æ–ø–µ—Ä–∞—Ç–æ—Ä—ã

### if-else –∫–æ–Ω—Å—Ç—Ä—É–∫—Ü–∏—è:
```dart
if (—É—Å–ª–æ–≤–∏–µ) {
  // –∫–æ–¥ –≤—ã–ø–æ–ª–Ω—è–µ—Ç—Å—è –µ—Å–ª–∏ —É—Å–ª–æ–≤–∏–µ –∏—Å—Ç–∏–Ω–Ω–æ
} else {
  // –∫–æ–¥ –≤—ã–ø–æ–ª–Ω—è–µ—Ç—Å—è –µ—Å–ª–∏ —É—Å–ª–æ–≤–∏–µ –ª–æ–∂–Ω–æ
}
```

### –û–ø–µ—Ä–∞—Ç–æ—Ä—ã —Å—Ä–∞–≤–Ω–µ–Ω–∏—è:
- `==` - —Ä–∞–≤–Ω–æ
- `!=` - –Ω–µ —Ä–∞–≤–Ω–æ
- `>` - –±–æ–ª—å—à–µ
- `<` - –º–µ–Ω—å—à–µ
- `>=` - –±–æ–ª—å—à–µ –∏–ª–∏ —Ä–∞–≤–Ω–æ
- `<=` - –º–µ–Ω—å—à–µ –∏–ª–∏ —Ä–∞–≤–Ω–æ
            """,
            'task': '–ü—Ä–æ–≤–µ—Ä—å—Ç–µ, —è–≤–ª—è–µ—Ç—Å—è –ª–∏ —á–∏—Å–ª–æ –ø–æ–ª–æ–∂–∏—Ç–µ–ª—å–Ω—ã–º, –æ—Ç—Ä–∏—Ü–∞—Ç–µ–ª—å–Ω—ã–º –∏–ª–∏ –Ω—É–ª–µ–º',
            'code_template': """void main() {
  int number = -5;
  
  // –î–æ–±–∞–≤—å—Ç–µ —É—Å–ª–æ–≤–∏–µ –∑–¥–µ—Å—å
  if (number > 0) {
    print('–ß–∏—Å–ª–æ –ø–æ–ª–æ–∂–∏—Ç–µ–ª—å–Ω–æ–µ');
  }
  // –î–æ–±–∞–≤—å—Ç–µ else if –∏ else
}""",
            'expected_output': '–ß–∏—Å–ª–æ –æ—Ç—Ä–∏—Ü–∞—Ç–µ–ª—å–Ω–æ–µ',
            'hints': ['–ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ else if –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ number < 0', '–î–æ–±–∞–≤—å—Ç–µ else –¥–ª—è —Å–ª—É—á–∞—è number == 0']
        },
        {
            'id': 6,
            'title': '–¶–∏–∫–ª—ã - for',
            'category': '–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –ø–æ—Ç–æ–∫–æ–º',
            'difficulty': '–ù–∞—á–∞–ª—å–Ω—ã–π',
            'description': '–ü–æ–≤—Ç–æ—Ä–µ–Ω–∏–µ –¥–µ–π—Å—Ç–≤–∏–π —Å –ø–æ–º–æ—â—å—é —Ü–∏–∫–ª–∞ for',
            'theory': """
## –¶–∏–∫–ª for

–¶–∏–∫–ª for –ø–æ–∑–≤–æ–ª—è–µ—Ç –ø–æ–≤—Ç–æ—Ä—è—Ç—å –∫–æ–¥ –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–Ω–æ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —Ä–∞–∑.

### –°–∏–Ω—Ç–∞–∫—Å–∏—Å:
```dart
for (–Ω–∞—á–∞–ª—å–Ω–æ–µ_–∑–Ω–∞—á–µ–Ω–∏–µ; —É—Å–ª–æ–≤–∏–µ; –∏–∑–º–µ–Ω–µ–Ω–∏–µ) {
  // –∫–æ–¥ –¥–ª—è –ø–æ–≤—Ç–æ—Ä–µ–Ω–∏—è
}
```

### –ü—Ä–∏–º–µ—Ä:
```dart
for (int i = 1; i <= 5; i++) {
  print('–ò—Ç–µ—Ä–∞—Ü–∏—è $i');
}
```

–≠—Ç–æ—Ç —Ü–∏–∫–ª –≤—ã–ø–æ–ª–Ω–∏—Ç—Å—è 5 —Ä–∞–∑, –≤—ã–≤–æ–¥—è —á–∏—Å–ª–∞ –æ—Ç 1 –¥–æ 5.
            """,
            'task': '–í—ã–≤–µ–¥–∏—Ç–µ —á–∏—Å–ª–∞ –æ—Ç 1 –¥–æ 10 –∏—Å–ø–æ–ª—å–∑—É—è —Ü–∏–∫–ª for',
            'code_template': """void main() {
  // –°–æ–∑–¥–∞–π—Ç–µ —Ü–∏–∫–ª for –∑–¥–µ—Å—å
  for (int i = 1; i <= 10; i++) {
    print('–ß–∏—Å–ª–æ: $i');
  }
}""",
            'expected_output': '–ß–∏—Å–ª–æ: 1\n–ß–∏—Å–ª–æ: 2\n–ß–∏—Å–ª–æ: 3\n–ß–∏—Å–ª–æ: 4\n–ß–∏—Å–ª–æ: 5\n–ß–∏—Å–ª–æ: 6\n–ß–∏—Å–ª–æ: 7\n–ß–∏—Å–ª–æ: 8\n–ß–∏—Å–ª–æ: 9\n–ß–∏—Å–ª–æ: 10',
            'hints': ['–¶–∏–∫–ª —É–∂–µ –Ω–∞–ø–∏—Å–∞–Ω –ø—Ä–∞–≤–∏–ª—å–Ω–æ!', '–ü–æ–ø—Ä–æ–±—É–π—Ç–µ –∏–∑–º–µ–Ω–∏—Ç—å –¥–∏–∞–ø–∞–∑–æ–Ω —á–∏—Å–µ–ª']
        },
        {
            'id': 7,
            'title': '–§—É–Ω–∫—Ü–∏–∏',
            'category': '–§—É–Ω–∫—Ü–∏–∏',
            'difficulty': '–°—Ä–µ–¥–Ω–∏–π',
            'description': '–°–æ–∑–¥–∞–Ω–∏–µ —Å–æ–±—Å—Ç–≤–µ–Ω–Ω—ã—Ö —Ñ—É–Ω–∫—Ü–∏–π',
            'theory': """
## –§—É–Ω–∫—Ü–∏–∏

–§—É–Ω–∫—Ü–∏—è - —ç—Ç–æ –±–ª–æ–∫ –∫–æ–¥–∞, –∫–æ—Ç–æ—Ä—ã–π –º–æ–∂–Ω–æ –≤—ã–∑—ã–≤–∞—Ç—å –ø–æ –∏–º–µ–Ω–∏.

### –°–∏–Ω—Ç–∞–∫—Å–∏—Å:
```dart
—Ç–∏–ø_–≤–æ–∑–≤—Ä–∞—Ç–∞ –∏–º—è_—Ñ—É–Ω–∫—Ü–∏–∏(–ø–∞—Ä–∞–º–µ—Ç—Ä—ã) {
  // —Ç–µ–ª–æ —Ñ—É–Ω–∫—Ü–∏–∏
  return –∑–Ω–∞—á–µ–Ω–∏–µ;
}
```

### –ü—Ä–∏–º–µ—Ä—ã:
```dart
int add(int a, int b) {
  return a + b;
}

void greet(String name) {
  print('–ü—Ä–∏–≤–µ—Ç, $name!');
}
```
            """,
            'task': '–°–æ–∑–¥–∞–π—Ç–µ —Ñ—É–Ω–∫—Ü–∏—é –¥–ª—è –≤—ã—á–∏—Å–ª–µ–Ω–∏—è –∫–≤–∞–¥—Ä–∞—Ç–∞ —á–∏—Å–ª–∞',
            'code_template': """// –°–æ–∑–¥–∞–π—Ç–µ —Ñ—É–Ω–∫—Ü–∏—é square –∑–¥–µ—Å—å
int square(int number) {
  return number * number;
}

void main() {
  int result = square(5);
  print('–ö–≤–∞–¥—Ä–∞—Ç —á–∏—Å–ª–∞ 5 —Ä–∞–≤–µ–Ω: $result');
}""",
            'expected_output': '–ö–≤–∞–¥—Ä–∞—Ç —á–∏—Å–ª–∞ 5 —Ä–∞–≤–µ–Ω: 25',
            'hints': ['–§—É–Ω–∫—Ü–∏—è —É–∂–µ —Å–æ–∑–¥–∞–Ω–∞!', '–ü–æ–ø—Ä–æ–±—É–π—Ç–µ –∏–∑–º–µ–Ω–∏—Ç—å —á–∏—Å–ª–æ –¥–ª—è –≤—ã—á–∏—Å–ª–µ–Ω–∏—è']
        },
        {
            'id': 8,
            'title': '–°–ø–∏—Å–∫–∏ (Lists)',
            'category': '–ö–æ–ª–ª–µ–∫—Ü–∏–∏',
            'difficulty': '–°—Ä–µ–¥–Ω–∏–π',
            'description': '–†–∞–±–æ—Ç–∞ —Å–æ —Å–ø–∏—Å–∫–∞–º–∏ –¥–∞–Ω–Ω—ã—Ö',
            'theory': """
## –°–ø–∏—Å–∫–∏ –≤ Dart

–°–ø–∏—Å–æ–∫ - —ç—Ç–æ —É–ø–æ—Ä—è–¥–æ—á–µ–Ω–Ω–∞—è –∫–æ–ª–ª–µ–∫—Ü–∏—è —ç–ª–µ–º–µ–Ω—Ç–æ–≤.

### –°–æ–∑–¥–∞–Ω–∏–µ —Å–ø–∏—Å–∫–æ–≤:
```dart
List<int> numbers = [1, 2, 3, 4, 5];
List<String> names = ['–ê–Ω–Ω–∞', '–ë–æ—Ä–∏—Å', '–í–µ—Ä–∞'];
var fruits = ['—è–±–ª–æ–∫–æ', '–±–∞–Ω–∞–Ω', '–∞–ø–µ–ª—å—Å–∏–Ω'];
```

### –û—Å–Ω–æ–≤–Ω—ã–µ –æ–ø–µ—Ä–∞—Ü–∏–∏:
- `list.add(—ç–ª–µ–º–µ–Ω—Ç)` - –¥–æ–±–∞–≤–∏—Ç—å —ç–ª–µ–º–µ–Ω—Ç
- `list[index]` - –ø–æ–ª—É—á–∏—Ç—å —ç–ª–µ–º–µ–Ω—Ç –ø–æ –∏–Ω–¥–µ–∫—Å—É
- `list.length` - –¥–ª–∏–Ω–∞ —Å–ø–∏—Å–∫–∞
- `list.remove(—ç–ª–µ–º–µ–Ω—Ç)` - —É–¥–∞–ª–∏—Ç—å —ç–ª–µ–º–µ–Ω—Ç
            """,
            'task': '–°–æ–∑–¥–∞–π—Ç–µ —Å–ø–∏—Å–æ–∫ —Ñ—Ä—É–∫—Ç–æ–≤ –∏ –≤—ã–≤–µ–¥–∏—Ç–µ –∫–∞–∂–¥—ã–π —ç–ª–µ–º–µ–Ω—Ç',
            'code_template': """void main() {
  List<String> fruits = ['—è–±–ª–æ–∫–æ', '–±–∞–Ω–∞–Ω', '–∞–ø–µ–ª—å—Å–∏–Ω'];
  
  // –í—ã–≤–µ–¥–∏—Ç–µ –∫–∞–∂–¥—ã–π —Ñ—Ä—É–∫—Ç –∏—Å–ø–æ–ª—å–∑—É—è —Ü–∏–∫–ª
  for (int i = 0; i < fruits.length; i++) {
    print('–§—Ä—É–∫—Ç \\${i + 1}: \\${fruits[i]}');
  }
}""",
            'expected_output': '–§—Ä—É–∫—Ç 1: —è–±–ª–æ–∫–æ\n–§—Ä—É–∫—Ç 2: –±–∞–Ω–∞–Ω\n–§—Ä—É–∫—Ç 3: –∞–ø–µ–ª—å—Å–∏–Ω',
            'hints': ['–ö–æ–¥ —É–∂–µ –Ω–∞–ø–∏—Å–∞–Ω –ø—Ä–∞–≤–∏–ª—å–Ω–æ!', '–ü–æ–ø—Ä–æ–±—É–π—Ç–µ –¥–æ–±–∞–≤–∏—Ç—å –Ω–æ–≤—ã–µ —Ñ—Ä—É–∫—Ç—ã –≤ —Å–ø–∏—Å–æ–∫']
        },
        {
            'id': 9,
            'title': '–¶–∏–∫–ª—ã - while',
            'category': '–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –ø–æ—Ç–æ–∫–æ–º',
            'difficulty': '–°—Ä–µ–¥–Ω–∏–π',
            'description': '–¶–∏–∫–ª while –¥–ª—è –ø–æ–≤—Ç–æ—Ä–µ–Ω–∏–π –ø–æ —É—Å–ª–æ–≤–∏—é',
            'theory': """
## –¶–∏–∫–ª while

–¶–∏–∫–ª while –ø–æ–≤—Ç–æ—Ä—è–µ—Ç –∫–æ–¥ –ø–æ–∫–∞ —É—Å–ª–æ–≤–∏–µ –∏—Å—Ç–∏–Ω–Ω–æ.

### –°–∏–Ω—Ç–∞–∫—Å–∏—Å:
```dart
while (—É—Å–ª–æ–≤–∏–µ) {
  // –∫–æ–¥ –¥–ª—è –ø–æ–≤—Ç–æ—Ä–µ–Ω–∏—è
}
```

### –ü—Ä–∏–º–µ—Ä:
```dart
int count = 1;
while (count <= 5) {
  print('–°—á–µ—Ç—á–∏–∫: $count');
  count++;  // —É–≤–µ–ª–∏—á–∏–≤–∞–µ–º —Å—á–µ—Ç—á–∏–∫
}
```

‚ö†Ô∏è **–í–∞–∂–Ω–æ:** –ù–µ –∑–∞–±—ã–≤–∞–π—Ç–µ –∏–∑–º–µ–Ω—è—Ç—å —É—Å–ª–æ–≤–∏–µ –≤–Ω—É—Ç—Ä–∏ —Ü–∏–∫–ª–∞, –∏–Ω–∞—á–µ –ø–æ–ª—É—á–∏—Ç—Å—è –±–µ—Å–∫–æ–Ω–µ—á–Ω—ã–π —Ü–∏–∫–ª!
            """,
            'task': '–ù–∞–π–¥–∏—Ç–µ —Å—É–º–º—É —á–∏—Å–µ–ª –æ—Ç 1 –¥–æ 100 –∏—Å–ø–æ–ª—å–∑—É—è —Ü–∏–∫–ª while',
            'code_template': """void main() {
  int sum = 0;
  int number = 1;
  
  // –°–æ–∑–¥–∞–π—Ç–µ —Ü–∏–∫–ª while –∑–¥–µ—Å—å
  while (number <= 100) {
    sum += number;
    number++;
  }
  
  print('–°—É–º–º–∞ —á–∏—Å–µ–ª –æ—Ç 1 –¥–æ 100: $sum');
}""",
            'expected_output': '–°—É–º–º–∞ —á–∏—Å–µ–ª –æ—Ç 1 –¥–æ 100: 5050',
            'hints': ['sum += number –æ–∑–Ω–∞—á–∞–µ—Ç sum = sum + number', 'number++ —É–≤–µ–ª–∏—á–∏–≤–∞–µ—Ç number –Ω–∞ 1']
        },
        {
            'id': 10,
            'title': '–ö–∞—Ä—Ç—ã (Maps)',
            'category': '–ö–æ–ª–ª–µ–∫—Ü–∏–∏',
            'difficulty': '–°—Ä–µ–¥–Ω–∏–π',
            'description': '–†–∞–±–æ—Ç–∞ —Å –ø–∞—Ä–∞–º–∏ –∫–ª—é—á-–∑–Ω–∞—á–µ–Ω–∏–µ',
            'theory': """
## –ö–∞—Ä—Ç—ã (Maps)

Map - —ç—Ç–æ –∫–æ–ª–ª–µ–∫—Ü–∏—è –ø–∞—Ä –∫–ª—é—á-–∑–Ω–∞—á–µ–Ω–∏–µ.

### –°–æ–∑–¥–∞–Ω–∏–µ –∫–∞—Ä—Ç:
```dart
Map<String, int> ages = {
  '–ê–Ω–Ω–∞': 25,
  '–ë–æ—Ä–∏—Å': 30,
  '–í–µ—Ä–∞': 22
};
```

### –û—Å–Ω–æ–≤–Ω—ã–µ –æ–ø–µ—Ä–∞—Ü–∏–∏:
- `map[–∫–ª—é—á]` - –ø–æ–ª—É—á–∏—Ç—å –∑–Ω–∞—á–µ–Ω–∏–µ
- `map[–∫–ª—é—á] = –∑–Ω–∞—á–µ–Ω–∏–µ` - —É—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –∑–Ω–∞—á–µ–Ω–∏–µ
- `map.keys` - –≤—Å–µ –∫–ª—é—á–∏
- `map.values` - –≤—Å–µ –∑–Ω–∞—á–µ–Ω–∏—è
- `map.containsKey(–∫–ª—é—á)` - –ø—Ä–æ–≤–µ—Ä–∏—Ç—å –Ω–∞–ª–∏—á–∏–µ –∫–ª—é—á–∞
            """,
            'task': '–°–æ–∑–¥–∞–π—Ç–µ —Ç–µ–ª–µ—Ñ–æ–Ω–Ω—É—é –∫–Ω–∏–≥—É –∏ –Ω–∞–π–¥–∏—Ç–µ –Ω–æ–º–µ—Ä –∫–æ–Ω—Ç–∞–∫—Ç–∞',
            'code_template': """void main() {
  Map<String, String> phoneBook = {
    '–ú–∞–º–∞': '+7-123-456-78-90',
    '–ü–∞–ø–∞': '+7-098-765-43-21',
    '–î—Ä—É–≥': '+7-555-123-45-67'
  };
  
  String contact = '–ú–∞–º–∞';
  
  if (phoneBook.containsKey(contact)) {
    print('–ù–æ–º–µ—Ä $contact: ${phoneBook[contact]}');
  } else {
    print('–ö–æ–Ω—Ç–∞–∫—Ç $contact –Ω–µ –Ω–∞–π–¥–µ–Ω');
  }
}""",
            'expected_output': '–ù–æ–º–µ—Ä –ú–∞–º–∞: +7-123-456-78-90',
            'hints': ['–ü–æ–ø—Ä–æ–±—É–π—Ç–µ –∏–∑–º–µ–Ω–∏—Ç—å contact –Ω–∞ –¥—Ä—É–≥–æ–µ –∏–º—è', '–î–æ–±–∞–≤—å—Ç–µ –Ω–æ–≤—ã–µ –∫–æ–Ω—Ç–∞–∫—Ç—ã –≤ phoneBook']
        },
        {
            'id': 11,
            'title': '–û–±—Ä–∞–±–æ—Ç–∫–∞ –∏—Å–∫–ª—é—á–µ–Ω–∏–π',
            'category': '–ü—Ä–æ–¥–≤–∏–Ω—É—Ç—ã–µ —Ç–µ–º—ã',
            'difficulty': '–°—Ä–µ–¥–Ω–∏–π',
            'description': '–û–±—Ä–∞–±–æ—Ç–∫–∞ –æ—à–∏–±–æ–∫ —Å try-catch',
            'theory': """
## –û–±—Ä–∞–±–æ—Ç–∫–∞ –∏—Å–∫–ª—é—á–µ–Ω–∏–π

Try-catch –ø–æ–∑–≤–æ–ª—è–µ—Ç –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞—Ç—å –æ—à–∏–±–∫–∏ –≤ –ø—Ä–æ–≥—Ä–∞–º–º–µ.

### –°–∏–Ω—Ç–∞–∫—Å–∏—Å:
```dart
try {
  // –∫–æ–¥ –∫–æ—Ç–æ—Ä—ã–π –º–æ–∂–µ—Ç –≤—ã–∑–≤–∞—Ç—å –æ—à–∏–±–∫—É
} catch (e) {
  // –æ–±—Ä–∞–±–æ—Ç–∫–∞ –æ—à–∏–±–∫–∏
} finally {
  // –∫–æ–¥ –∫–æ—Ç–æ—Ä—ã–π –≤—ã–ø–æ–ª–Ω—è–µ—Ç—Å—è –≤—Å–µ–≥–¥–∞
}
```

### –ü—Ä–∏–º–µ—Ä:
```dart
try {
  int result = 10 ~/ 0;  // –¥–µ–ª–µ–Ω–∏–µ –Ω–∞ –Ω–æ–ª—å
} catch (e) {
  print('–û—à–∏–±–∫–∞: $e');
}
```
            """,
            'task': '–°–æ–∑–¥–∞–π—Ç–µ –±–µ–∑–æ–ø–∞—Å–Ω—É—é —Ñ—É–Ω–∫—Ü–∏—é –¥–µ–ª–µ–Ω–∏—è —Å –æ–±—Ä–∞–±–æ—Ç–∫–æ–π –æ—à–∏–±–æ–∫',
            'code_template': """double safeDivide(double a, double b) {
  try {
    if (b == 0) {
      throw Exception('–î–µ–ª–µ–Ω–∏–µ –Ω–∞ –Ω–æ–ª—å!');
    }
    return a / b;
  } catch (e) {
    print('–û—à–∏–±–∫–∞: $e');
    return 0.0;
  }
}

void main() {
  print('10 / 2 = ${safeDivide(10, 2)}');
  print('10 / 0 = ${safeDivide(10, 0)}');
}""",
            'expected_output': '10 / 2 = 5.0\n–û—à–∏–±–∫–∞: Exception: –î–µ–ª–µ–Ω–∏–µ –Ω–∞ –Ω–æ–ª—å!\n10 / 0 = 0.0',
            'hints': ['–§—É–Ω–∫—Ü–∏—è —É–∂–µ –Ω–∞–ø–∏—Å–∞–Ω–∞ –ø—Ä–∞–≤–∏–ª—å–Ω–æ!', '–ü–æ–ø—Ä–æ–±—É–π—Ç–µ –∏–∑–º–µ–Ω–∏—Ç—å —á–∏—Å–ª–∞ –¥–ª—è –¥–µ–ª–µ–Ω–∏—è']
        },
        {
            'id': 12,
            'title': '–ö–ª–∞—Å—Å—ã –∏ –æ–±—ä–µ–∫—Ç—ã',
            'category': '–û–û–ü',
            'difficulty': '–ü—Ä–æ–¥–≤–∏–Ω—É—Ç—ã–π',
            'description': '–û—Å–Ω–æ–≤—ã –æ–±—ä–µ–∫—Ç–Ω–æ-–æ—Ä–∏–µ–Ω—Ç–∏—Ä–æ–≤–∞–Ω–Ω–æ–≥–æ –ø—Ä–æ–≥—Ä–∞–º–º–∏—Ä–æ–≤–∞–Ω–∏—è',
            'theory': """
## –ö–ª–∞—Å—Å—ã –∏ –æ–±—ä–µ–∫—Ç—ã

–ö–ª–∞—Å—Å - —ç—Ç–æ —à–∞–±–ª–æ–Ω –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –æ–±—ä–µ–∫—Ç–æ–≤.

### –°–æ–∑–¥–∞–Ω–∏–µ –∫–ª–∞—Å—Å–∞:
```dart
class Person {
  String name;
  int age;
  
  Person(this.name, this.age);
  
  void introduce() {
    print('–ü—Ä–∏–≤–µ—Ç, —è $name, –º–Ω–µ $age –ª–µ—Ç');
  }
}
```

### –°–æ–∑–¥–∞–Ω–∏–µ –æ–±—ä–µ–∫—Ç–∞:
```dart
Person person = Person('–ê–Ω–Ω–∞', 25);
person.introduce();
```
            """,
            'task': '–°–æ–∑–¥–∞–π—Ç–µ –∫–ª–∞—Å—Å Car –∏ –æ–±—ä–µ–∫—Ç –∞–≤—Ç–æ–º–æ–±–∏–ª—è',
            'code_template': """class Car {
  String brand;
  String model;
  int year;
  
  Car(this.brand, this.model, this.year);
  
  void displayInfo() {
    print('–ê–≤—Ç–æ–º–æ–±–∏–ª—å: $brand $model ($year –≥–æ–¥)');
  }
}

void main() {
  Car myCar = Car('Toyota', 'Camry', 2020);
  myCar.displayInfo();
}""",
            'expected_output': '–ê–≤—Ç–æ–º–æ–±–∏–ª—å: Toyota Camry (2020 –≥–æ–¥)',
            'hints': ['–ü–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–æ–∑–¥–∞—Ç—å –Ω–µ—Å–∫–æ–ª—å–∫–æ —Ä–∞–∑–Ω—ã—Ö –∞–≤—Ç–æ–º–æ–±–∏–ª–µ–π', '–ò–∑–º–µ–Ω–∏—Ç–µ –º–∞—Ä–∫—É, –º–æ–¥–µ–ª—å –∏–ª–∏ –≥–æ–¥']
        },
        {
            'id': 13,
            'title': '–ê—Å–∏–Ω—Ö—Ä–æ–Ω–Ω–æ–µ –ø—Ä–æ–≥—Ä–∞–º–º–∏—Ä–æ–≤–∞–Ω–∏–µ',
            'category': '–ü—Ä–æ–¥–≤–∏–Ω—É—Ç—ã–µ —Ç–µ–º—ã',
            'difficulty': '–ü—Ä–æ–¥–≤–∏–Ω—É—Ç—ã–π',
            'description': '–†–∞–±–æ—Ç–∞ —Å Future –∏ async/await',
            'theory': """
## –ê—Å–∏–Ω—Ö—Ä–æ–Ω–Ω–æ–µ –ø—Ä–æ–≥—Ä–∞–º–º–∏—Ä–æ–≤–∞–Ω–∏–µ

Future –ø—Ä–µ–¥—Å—Ç–∞–≤–ª—è–µ—Ç –∑–Ω–∞—á–µ–Ω–∏–µ, –∫–æ—Ç–æ—Ä–æ–µ –±—É–¥–µ—Ç –¥–æ—Å—Ç—É–ø–Ω–æ –≤ –±—É–¥—É—â–µ–º.

### –ö–ª—é—á–µ–≤—ã–µ —Å–ª–æ–≤–∞:
- `async` - –ø–æ–º–µ—á–∞–µ—Ç —Ñ—É–Ω–∫—Ü–∏—é –∫–∞–∫ –∞—Å–∏–Ω—Ö—Ä–æ–Ω–Ω—É—é
- `await` - –∂–¥–µ—Ç –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è Future
- `Future<T>` - —Ç–∏–ø –¥–ª—è –∞—Å–∏–Ω—Ö—Ä–æ–Ω–Ω—ã—Ö –æ–ø–µ—Ä–∞—Ü–∏–π

### –ü—Ä–∏–º–µ—Ä:
```dart
Future<String> fetchData() async {
  await Future.delayed(Duration(seconds: 2));
  return '–î–∞–Ω–Ω—ã–µ –∑–∞–≥—Ä—É–∂–µ–Ω—ã!';
}
```
            """,
            'task': '–°–æ–∑–¥–∞–π—Ç–µ —Ñ—É–Ω–∫—Ü–∏—é –∏–º–∏—Ç–∞—Ü–∏–∏ –∑–∞–≥—Ä—É–∑–∫–∏ –¥–∞–Ω–Ω—ã—Ö',
            'code_template': """Future<String> loadUserData(String username) async {
  print('–ó–∞–≥—Ä—É–∑–∫–∞ –¥–∞–Ω–Ω—ã—Ö –¥–ª—è $username...');
  
  // –ò–º–∏—Ç–∞—Ü–∏—è –∑–∞–¥–µ—Ä–∂–∫–∏ —Å–µ—Ç–∏
  await Future.delayed(Duration(seconds: 1));
  
  return '–î–∞–Ω–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è $username –∑–∞–≥—Ä—É–∂–µ–Ω—ã!';
}

void main() async {
  String result = await loadUserData('–ê–Ω–Ω–∞');
  print(result);
}""",
            'expected_output': '–ó–∞–≥—Ä—É–∑–∫–∞ –¥–∞–Ω–Ω—ã—Ö –¥–ª—è –ê–Ω–Ω–∞...\n–î–∞–Ω–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –ê–Ω–Ω–∞ –∑–∞–≥—Ä—É–∂–µ–Ω—ã!',
            'hints': ['–ü–æ–ø—Ä–æ–±—É–π—Ç–µ –∏–∑–º–µ–Ω–∏—Ç—å –∏–º—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è', 'async/await —Ä–∞–±–æ—Ç–∞–µ—Ç –ø–æ—Å–ª–µ–¥–æ–≤–∞—Ç–µ–ª—å–Ω–æ']
        },
        {
            'id': 14,
            'title': '–†–∞–±–æ—Ç–∞ —Å JSON',
            'category': '–ü—Ä–æ–¥–≤–∏–Ω—É—Ç—ã–µ —Ç–µ–º—ã',
            'difficulty': '–ü—Ä–æ–¥–≤–∏–Ω—É—Ç—ã–π',
            'description': '–°–µ—Ä–∏–∞–ª–∏–∑–∞—Ü–∏—è –∏ –¥–µ—Å–µ—Ä–∏–∞–ª–∏–∑–∞—Ü–∏—è –¥–∞–Ω–Ω—ã—Ö',
            'theory': """
## –†–∞–±–æ—Ç–∞ —Å JSON

JSON (JavaScript Object Notation) - –ø–æ–ø—É–ª—è—Ä–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç –æ–±–º–µ–Ω–∞ –¥–∞–Ω–Ω—ã–º–∏.

### –û—Å–Ω–æ–≤–Ω—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏:
- `jsonEncode()` - –ø—Ä–µ–æ–±—Ä–∞–∑—É–µ—Ç –æ–±—ä–µ–∫—Ç –≤ JSON —Å—Ç—Ä–æ–∫—É
- `jsonDecode()` - –ø—Ä–µ–æ–±—Ä–∞–∑—É–µ—Ç JSON —Å—Ç—Ä–æ–∫—É –≤ –æ–±—ä–µ–∫—Ç

### –ü—Ä–∏–º–µ—Ä:
```dart
import 'dart:convert';

Map<String, dynamic> user = {
  'name': '–ê–Ω–Ω–∞',
  'age': 25,
  'city': '–ú–æ—Å–∫–≤–∞'
};

String jsonString = jsonEncode(user);
Map<String, dynamic> decoded = jsonDecode(jsonString);
```
            """,
            'task': '–ü—Ä–µ–æ–±—Ä–∞–∑—É–π—Ç–µ –¥–∞–Ω–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ JSON –∏ –æ–±—Ä–∞—Ç–Ω–æ',
            'code_template': """import 'dart:convert';

void main() {
  // –ò—Å—Ö–æ–¥–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ
  Map<String, dynamic> userData = {
    'name': '–ò–≤–∞–Ω –ü–µ—Ç—Ä–æ–≤',
    'email': 'ivan@example.com',
    'age': 28,
    'isActive': true
  };
  
  // –ü—Ä–µ–æ–±—Ä–∞–∑–æ–≤–∞–Ω–∏–µ –≤ JSON
  String jsonString = jsonEncode(userData);
  print('JSON: $jsonString');
  
  // –û–±—Ä–∞—Ç–Ω–æ–µ –ø—Ä–µ–æ–±—Ä–∞–∑–æ–≤–∞–Ω–∏–µ
  Map<String, dynamic> decodedData = jsonDecode(jsonString);
  print('–ò–º—è: ${decodedData['name']}');
  print('Email: ${decodedData['email']}');
}""",
            'expected_output': 'JSON: {"name":"–ò–≤–∞–Ω –ü–µ—Ç—Ä–æ–≤","email":"ivan@example.com","age":28,"isActive":true}\n–ò–º—è: –ò–≤–∞–Ω –ü–µ—Ç—Ä–æ–≤\nEmail: ivan@example.com',
            'hints': ['JSON - —ç—Ç–æ —Å—Ç—Ä–æ–∫–æ–≤–æ–µ –ø—Ä–µ–¥—Å—Ç–∞–≤–ª–µ–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö', '–ü–æ–ø—Ä–æ–±—É–π—Ç–µ –∏–∑–º–µ–Ω–∏—Ç—å –¥–∞–Ω–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è']
        },
        {
            'id': 15,
            'title': '–§–∏–Ω–∞–ª—å–Ω—ã–π –ø—Ä–æ–µ–∫—Ç: –ö–∞–ª—å–∫—É–ª—è—Ç–æ—Ä',
            'category': '–ü—Ä–æ–µ–∫—Ç',
            'difficulty': '–ü—Ä–æ–¥–≤–∏–Ω—É—Ç—ã–π',
            'description': '–°–æ–∑–¥–∞–π—Ç–µ –ø–æ–ª–Ω–æ—Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω—ã–π –∫–∞–ª—å–∫—É–ª—è—Ç–æ—Ä',
            'theory': """
## –§–∏–Ω–∞–ª—å–Ω—ã–π –ø—Ä–æ–µ–∫—Ç

–ü—Ä–∏—à–ª–æ –≤—Ä–µ–º—è –ø—Ä–∏–º–µ–Ω–∏—Ç—å –≤—Å–µ –∏–∑—É—á–µ–Ω–Ω—ã–µ –∑–Ω–∞–Ω–∏—è! –°–æ–∑–¥–∞–¥–∏–º –∫–∞–ª—å–∫—É–ª—è—Ç–æ—Ä.

### –¢—Ä–µ–±–æ–≤–∞–Ω–∏—è:
1. –û—Å–Ω–æ–≤–Ω—ã–µ –æ–ø–µ—Ä–∞—Ü–∏–∏: +, -, *, /
2. –û–±—Ä–∞–±–æ—Ç–∫–∞ –æ—à–∏–±–æ–∫ (–¥–µ–ª–µ–Ω–∏–µ –Ω–∞ –Ω–æ–ª—å)
3. –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–∏–π –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å –≤ –∫–æ–Ω—Å–æ–ª–∏
4. –í–æ–∑–º–æ–∂–Ω–æ—Å—Ç—å –ø–æ–≤—Ç–æ—Ä–Ω—ã—Ö –≤—ã—á–∏—Å–ª–µ–Ω–∏–π

### –ò—Å–ø–æ–ª—å–∑—É–µ–º—ã–µ –∫–æ–Ω—Ü–µ–ø—Ü–∏–∏:
- –§—É–Ω–∫—Ü–∏–∏
- –£—Å–ª–æ–≤–Ω—ã–µ –æ–ø–µ—Ä–∞—Ç–æ—Ä—ã
- –¶–∏–∫–ª—ã
- –û–±—Ä–∞–±–æ—Ç–∫–∞ –∏—Å–∫–ª—é—á–µ–Ω–∏–π
- –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–∏–π –≤–≤–æ–¥
            """,
            'task': '–ó–∞–≤–µ—Ä—à–∏—Ç–µ —Ä–µ–∞–ª–∏–∑–∞—Ü–∏—é –∫–∞–ª—å–∫—É–ª—è—Ç–æ—Ä–∞',
            'code_template': """import 'dart:io';

class Calculator {
  double add(double a, double b) => a + b;
  double subtract(double a, double b) => a - b;
  double multiply(double a, double b) => a * b;
  
  double divide(double a, double b) {
    if (b == 0) {
      throw Exception('–î–µ–ª–µ–Ω–∏–µ –Ω–∞ –Ω–æ–ª—å –Ω–µ–≤–æ–∑–º–æ–∂–Ω–æ!');
    }
    return a / b;
  }
}

void main() {
  Calculator calc = Calculator();
  
  print('=== –ö–∞–ª—å–∫—É–ª—è—Ç–æ—Ä ===');
  print('–î–æ—Å—Ç—É–ø–Ω—ã–µ –æ–ø–µ—Ä–∞—Ü–∏–∏: +, -, *, /');
  
  // –ü—Ä–∏–º–µ—Ä –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è (–≤ —Ä–µ–∞–ª—å–Ω–æ–º –ø—Ä–æ–µ–∫—Ç–µ –∑–¥–µ—Å—å –±—ã–ª –±—ã –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–∏–π –≤–≤–æ–¥)
  try {
    double result1 = calc.add(10, 5);
    print('10 + 5 = $result1');
    
    double result2 = calc.divide(20, 4);
    print('20 / 4 = $result2');
    
    // –¢–µ—Å—Ç –æ–±—Ä–∞–±–æ—Ç–∫–∏ –æ—à–∏–±–∫–∏
    double result3 = calc.divide(10, 0);
    print('10 / 0 = $result3');
  } catch (e) {
    print('–û—à–∏–±–∫–∞: $e');
  }
}""",
            'expected_output': '=== –ö–∞–ª—å–∫—É–ª—è—Ç–æ—Ä ===\n–î–æ—Å—Ç—É–ø–Ω—ã–µ –æ–ø–µ—Ä–∞—Ü–∏–∏: +, -, *, /\n10 + 5 = 15.0\n20 / 4 = 5.0\n–û—à–∏–±–∫–∞: Exception: –î–µ–ª–µ–Ω–∏–µ –Ω–∞ –Ω–æ–ª—å –Ω–µ–≤–æ–∑–º–æ–∂–Ω–æ!',
            'hints': ['–ö–∞–ª—å–∫—É–ª—è—Ç–æ—Ä –≥–æ—Ç–æ–≤!', '–ü–æ–ø—Ä–æ–±—É–π—Ç–µ –∏–∑–º–µ–Ω–∏—Ç—å —á–∏—Å–ª–∞ –∏ –æ–ø–µ—Ä–∞—Ü–∏–∏', '–í —Ä–µ–∞–ª—å–Ω–æ–º –ø—Ä–æ–µ–∫—Ç–µ –º–æ–∂–Ω–æ –¥–æ–±–∞–≤–∏—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–∏–π –≤–≤–æ–¥']
        },
        
        # –ë–ª–æ–∫ 4: Dart –°–ø–µ—Ü–∏—Ñ–∏–∫–∞
        {
            'id': 16,
            'title': 'Null Safety',
            'category': 'Dart –°–ø–µ—Ü–∏—Ñ–∏–∫–∞',
            'difficulty': '–ü—Ä–æ–¥–≤–∏–Ω—É—Ç—ã–π',
            'description': '–ë–µ–∑–æ–ø–∞—Å–Ω–∞—è —Ä–∞–±–æ—Ç–∞ —Å null –∑–Ω–∞—á–µ–Ω–∏—è–º–∏',
            'theory': """
## Null Safety –≤ Dart

Null Safety - –æ–¥–Ω–∞ –∏–∑ –∫–ª—é—á–µ–≤—ã—Ö –æ—Å–æ–±–µ–Ω–Ω–æ—Å—Ç–µ–π —Å–æ–≤—Ä–µ–º–µ–Ω–Ω–æ–≥–æ Dart.

### –ü—Ä–æ–±–ª–µ–º–∞ null:
–í —Ç—Ä–∞–¥–∏—Ü–∏–æ–Ω–Ω—ã—Ö —è–∑—ã–∫–∞—Ö null –º–æ–∂–µ—Ç –ø—Ä–∏–≤–µ—Å—Ç–∏ –∫ –∫—Ä–∞—Ö—É –ø—Ä–æ–≥—Ä–∞–º–º—ã:
```dart
String name = null;
print(name.length); // –û—à–∏–±–∫–∞!
```

### –†–µ—à–µ–Ω–∏–µ –≤ Dart:
- **Non-nullable —Ç–∏–ø—ã**: `String name` –Ω–µ –º–æ–∂–µ—Ç –±—ã—Ç—å null
- **Nullable —Ç–∏–ø—ã**: `String? name` –º–æ–∂–µ—Ç –±—ã—Ç—å null
- **–ë–µ–∑–æ–ø–∞—Å–Ω—ã–µ –æ–ø–µ—Ä–∞—Ç–æ—Ä—ã**: `?.` –∏ `??`

### –û–ø–µ—Ä–∞—Ç–æ—Ä—ã:
- `?.` - –±–µ–∑–æ–ø–∞—Å–Ω—ã–π –¥–æ—Å—Ç—É–ø –∫ –º–µ—Ç–æ–¥—É/—Å–≤–æ–π—Å—Ç–≤—É
- `??` - –æ–ø–µ—Ä–∞—Ç–æ—Ä null-coalescing
- `!` - —É—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ non-null (–æ—Å—Ç–æ—Ä–æ–∂–Ω–æ!)

### –ü—Ä–∏–º–µ—Ä:
```dart
String? name = getName(); // –º–æ–∂–µ—Ç –±—ã—Ç—å null
print(name?.length); // –±–µ–∑–æ–ø–∞—Å–Ω–æ
String result = name ?? 'Unknown'; // –∑–Ω–∞—á–µ–Ω–∏–µ –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é
```
            """,
            'task': '–°–æ–∑–¥–∞–π—Ç–µ —Ñ—É–Ω–∫—Ü–∏—é –¥–ª—è –±–µ–∑–æ–ø–∞—Å–Ω–æ–π —Ä–∞–±–æ—Ç—ã —Å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–∏–º–∏ –¥–∞–Ω–Ω—ã–º–∏',
            'code_template': """String? getUserName() {
  // –ú–æ–∂–µ—Ç –≤–µ—Ä–Ω—É—Ç—å null
  return null;
}

int? getAge() {
  return 25;
}

void main() {
  String? name = getUserName();
  int? age = getAge();
  
  // –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –±–µ–∑–æ–ø–∞—Å–Ω—ã–µ –æ–ø–µ—Ä–∞—Ç–æ—Ä—ã
  print('–ò–º—è: ${name ?? "–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–æ"}');
  print('–î–ª–∏–Ω–∞ –∏–º–µ–Ω–∏: ${name?.length ?? 0}');
  print('–í–æ–∑—Ä–∞—Å—Ç: ${age ?? 0}');
  
  // –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ null
  if (name != null) {
    print('–ò–º—è —Ç–æ—á–Ω–æ –µ—Å—Ç—å: ${name.toUpperCase()}');
  }
}""",
            'expected_output': '–ò–º—è: –ù–µ–∏–∑–≤–µ—Å—Ç–Ω–æ\n–î–ª–∏–Ω–∞ –∏–º–µ–Ω–∏: 0\n–í–æ–∑—Ä–∞—Å—Ç: 25\n–ò–º—è —Ç–æ—á–Ω–æ –µ—Å—Ç—å: –ù–ï–ò–ó–í–ï–°–¢–ù–û',
            'hints': ['–ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ ?? –¥–ª—è –∑–Ω–∞—á–µ–Ω–∏–π –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é', '–û–ø–µ—Ä–∞—Ç–æ—Ä ?. –±–µ–∑–æ–ø–∞—Å–Ω–æ –≤—ã–∑—ã–≤–∞–µ—Ç –º–µ—Ç–æ–¥—ã', 'if (name != null) –¥–µ–ª–∞–µ—Ç name non-nullable –≤–Ω—É—Ç—Ä–∏ –±–ª–æ–∫–∞']
        },
        {
            'id': 17,
            'title': 'Extension Methods',
            'category': 'Dart –°–ø–µ—Ü–∏—Ñ–∏–∫–∞',
            'difficulty': '–ü—Ä–æ–¥–≤–∏–Ω—É—Ç—ã–π',
            'description': '–†–∞—Å—à–∏—Ä–µ–Ω–∏–µ —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω–æ—Å—Ç–∏ —Å—É—â–µ—Å—Ç–≤—É—é—â–∏—Ö –∫–ª–∞—Å—Å–æ–≤',
            'theory': """
## Extension Methods

Extension Methods –ø–æ–∑–≤–æ–ª—è—é—Ç –¥–æ–±–∞–≤–ª—è—Ç—å –Ω–æ–≤—ã–µ –º–µ—Ç–æ–¥—ã –∫ —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–º –∫–ª–∞—Å—Å–∞–º.

### –°–∏–Ω—Ç–∞–∫—Å–∏—Å:
```dart
extension –ò–º—è–†–∞—Å—à–∏—Ä–µ–Ω–∏—è on –¢–∏–ø–ö–ª–∞—Å—Å–∞ {
  –≤–æ–∑–≤—Ä–∞—â–∞–µ–º—ã–π_—Ç–∏–ø –º–µ—Ç–æ–¥–ò–º—è() {
    // —Ä–µ–∞–ª–∏–∑–∞—Ü–∏—è
  }
}
```

### –ü—Ä–∏–º–µ–Ω–µ–Ω–∏–µ:
- –î–æ–±–∞–≤–ª–µ–Ω–∏–µ —É–¥–æ–±–Ω—ã—Ö –º–µ—Ç–æ–¥–æ–≤ –∫ –≤—Å—Ç—Ä–æ–µ–Ω–Ω—ã–º —Ç–∏–ø–∞–º
- –£–ª—É—á—à–µ–Ω–∏–µ —á–∏—Ç–∞–µ–º–æ—Å—Ç–∏ –∫–æ–¥–∞
- –ò–∑–±–µ–∂–∞–Ω–∏–µ —Å–æ–∑–¥–∞–Ω–∏—è utility –∫–ª–∞—Å—Å–æ–≤

### –ü—Ä–∏–º–µ—Ä—ã:
```dart
extension StringExtensions on String {
  bool get isEmail => contains('@');
  String get reversed => split('').reversed.join('');
}

extension IntExtensions on int {
  bool get isEven => this % 2 == 0;
  bool get isOdd => !isEven;
}
```

### –ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ:
```dart
print('test@mail.com'.isEmail); // true
print('hello'.reversed); // 'olleh'
print(4.isEven); // true
```
            """,
            'task': '–°–æ–∑–¥–∞–π—Ç–µ extension methods –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å–æ —Å–ø–∏—Å–∫–∞–º–∏ –∏ —Å—Ç—Ä–æ–∫–∞–º–∏',
            'code_template': """// –°–æ–∑–¥–∞–π—Ç–µ extension –¥–ª—è List
extension ListExtensions on List<int> {
  int get sum {
    int total = 0;
    for (int item in this) {
      total += item;
    }
    return total;
  }
  
  double get average => isEmpty ? 0 : sum / length;
}

// –°–æ–∑–¥–∞–π—Ç–µ extension –¥–ª—è String
extension StringExtensions on String {
  String get capitalized {
    if (isEmpty) return this;
    return this[0].toUpperCase() + substring(1).toLowerCase();
  }
  
  bool get isPalindrome {
    String clean = toLowerCase().replaceAll(' ', '');
    return clean == clean.split('').reversed.join('');
  }
}

void main() {
  List<int> numbers = [1, 2, 3, 4, 5];
  print('–°—É–º–º–∞: ${numbers.sum}');
  print('–°—Ä–µ–¥–Ω–µ–µ: ${numbers.average}');
  
  String text = 'hello world';
  print('–ö–∞–ø–∏—Ç–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω—ã–π: ${text.capitalized}');
  
  String palindrome = 'level';
  print('–ü–∞–ª–∏–Ω–¥—Ä–æ–º: ${palindrome.isPalindrome}');
}""",
            'expected_output': '–°—É–º–º–∞: 15\n–°—Ä–µ–¥–Ω–µ–µ: 3.0\n–ö–∞–ø–∏—Ç–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω—ã–π: Hello world\n–ü–∞–ª–∏–Ω–¥—Ä–æ–º: true',
            'hints': ['Extension –¥–æ–±–∞–≤–ª—è–µ—Ç –º–µ—Ç–æ–¥—ã –∫ —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–º –∫–ª–∞—Å—Å–∞–º', '–ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ this –¥–ª—è —Å—Å—ã–ª–∫–∏ –Ω–∞ –æ–±—ä–µ–∫—Ç', 'Getters —Å–æ–∑–¥–∞—é—Ç—Å—è –∫–∞–∫ get –∏–º—è => –≤—ã—Ä–∞–∂–µ–Ω–∏–µ']
        },
        {
            'id': 18,
            'title': 'Mixins',
            'category': 'Dart –°–ø–µ—Ü–∏—Ñ–∏–∫–∞',
            'difficulty': '–ü—Ä–æ–¥–≤–∏–Ω—É—Ç—ã–π',
            'description': '–ü–µ—Ä–µ–∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ –∫–æ–¥–∞ —á–µ—Ä–µ–∑ –º–∏–∫—Å–∏–Ω—ã',
            'theory': """
## Mixins

Mixin - —Å–ø–æ—Å–æ–± –ø–µ—Ä–µ–∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è –∫–æ–¥–∞ –≤ –Ω–µ—Å–∫–æ–ª—å–∫–∏—Ö –∫–ª–∞—Å—Å–∞—Ö.

### –°–æ–∑–¥–∞–Ω–∏–µ mixin:
```dart
mixin –ò–º—è–ú–∏–∫—Å–∏–Ω–∞ {
  // –º–µ—Ç–æ–¥—ã –∏ —Å–≤–æ–π—Å—Ç–≤–∞
}
```

### –ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ:
```dart
class –ú–æ–π–ö–ª–∞—Å—Å with –ú–∏–∫—Å–∏–Ω1, –ú–∏–∫—Å–∏–Ω2 {
  // –∫–æ–¥ –∫–ª–∞—Å—Å–∞
}
```

### –û—Å–æ–±–µ–Ω–Ω–æ—Å—Ç–∏:
- Mixin –Ω–µ –º–æ–∂–µ—Ç –∏–º–µ—Ç—å –∫–æ–Ω—Å—Ç—Ä—É–∫—Ç–æ—Ä
- –û–¥–∏–Ω –∫–ª–∞—Å—Å –º–æ–∂–µ—Ç –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –Ω–µ—Å–∫–æ–ª—å–∫–æ mixins
- Mixins —Ä–µ—à–∞—é—Ç –ø—Ä–æ–±–ª–µ–º—É –º–Ω–æ–∂–µ—Å—Ç–≤–µ–Ω–Ω–æ–≥–æ –Ω–∞—Å–ª–µ–¥–æ–≤–∞–Ω–∏—è

### –ü—Ä–∏–º–µ—Ä:
```dart
mixin Flyable {
  void fly() => print('–õ–µ—Ç–∞—é!');
}

mixin Swimmable {
  void swim() => print('–ü–ª–∞–≤–∞—é!');
}

class Duck with Flyable, Swimmable {
  void quack() => print('–ö—Ä—è!');
}
```

### –û–≥—Ä–∞–Ω–∏—á–µ–Ω–∏—è mixin:
```dart
mixin Walkable on Animal {
  void walk() => print('–•–æ–∂—É –Ω–∞ \\${legs} –Ω–æ–≥–∞—Ö');
}
```
            """,
            'task': '–°–æ–∑–¥–∞–π—Ç–µ —Å–∏—Å—Ç–µ–º—É —Å–ø–æ—Å–æ–±–Ω–æ—Å—Ç–µ–π –¥–ª—è –∏–≥—Ä–æ–≤—ã—Ö –ø–µ—Ä—Å–æ–Ω–∞–∂–µ–π',
            'code_template': """// –ë–∞–∑–æ–≤—ã–π –∫–ª–∞—Å—Å –ø–µ—Ä—Å–æ–Ω–∞–∂–∞
class Character {
  String name;
  int health;
  
  Character(this.name, this.health);
  
  void info() {
    print('$name (HP: $health)');
  }
}

// –ú–∏–∫—Å–∏–Ω –¥–ª—è –º–∞–≥–∏—á–µ—Å–∫–∏—Ö —Å–ø–æ—Å–æ–±–Ω–æ—Å—Ç–µ–π
mixin Magical {
  int mana = 100;
  
  void castSpell(String spell) {
    if (mana >= 20) {
      mana -= 20;
      print('–ü—Ä–∏–º–µ–Ω—è—é –∑–∞–∫–ª–∏–Ω–∞–Ω–∏–µ: $spell (–ú–∞–Ω–∞: $mana)');
    } else {
      print('–ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –º–∞–Ω—ã!');
    }
  }
}

// –ú–∏–∫—Å–∏–Ω –¥–ª—è –±–æ–µ–≤—ã—Ö –Ω–∞–≤—ã–∫–æ–≤
mixin Fighter {
  int strength = 50;
  
  void attack(String weapon) {
    print('–ê—Ç–∞–∫—É—é —Å –ø–æ–º–æ—â—å—é: $weapon (–°–∏–ª–∞: $strength)');
  }
}

// –ú–∏–∫—Å–∏–Ω –¥–ª—è —Å–∫—Ä—ã—Ç–Ω–æ—Å—Ç–∏
mixin Stealthy {
  bool isHidden = false;
  
  void hide() {
    isHidden = true;
    print('–°–∫—Ä—ã–≤–∞—é—Å—å –≤ —Ç–µ–Ω—è—Ö...');
  }
  
  void reveal() {
    isHidden = false;
    print('–í—ã—Ö–æ–∂—É –∏–∑ —É–∫—Ä—ã—Ç–∏—è');
  }
}

// –ö–ª–∞—Å—Å—ã –ø–µ—Ä—Å–æ–Ω–∞–∂–µ–π —Å —Ä–∞–∑–Ω—ã–º–∏ —Å–ø–æ—Å–æ–±–Ω–æ—Å—Ç—è–º–∏
class Wizard extends Character with Magical {
  Wizard(String name) : super(name, 80);
}

class Warrior extends Character with Fighter {
  Warrior(String name) : super(name, 120);
}

class Rogue extends Character with Fighter, Stealthy {
  Rogue(String name) : super(name, 100);
}

class Paladin extends Character with Fighter, Magical {
  Paladin(String name) : super(name, 110);
}

void main() {
  var wizard = Wizard('–ú–µ—Ä–ª–∏–Ω');
  wizard.info();
  wizard.castSpell('–û–≥–Ω–µ–Ω–Ω—ã–π —à–∞—Ä');
  
  var warrior = Warrior('–ö–æ–Ω–∞–Ω');
  warrior.info();
  warrior.attack('–ú–µ—á');
  
  var rogue = Rogue('–¢–µ–Ω—å');
  rogue.info();
  rogue.hide();
  rogue.attack('–ö–∏–Ω–∂–∞–ª');
  rogue.reveal();
  
  var paladin = Paladin('–ê—Ä—Ç—É—Ä');
  paladin.info();
  paladin.attack('–°–≤—è—â–µ–Ω–Ω—ã–π –º–µ—á');
  paladin.castSpell('–ò—Å—Ü–µ–ª–µ–Ω–∏–µ');
}""",
            'expected_output': '–ú–µ—Ä–ª–∏–Ω (HP: 80)\n–ü—Ä–∏–º–µ–Ω—è—é –∑–∞–∫–ª–∏–Ω–∞–Ω–∏–µ: –û–≥–Ω–µ–Ω–Ω—ã–π —à–∞—Ä (–ú–∞–Ω–∞: 80)\n–ö–æ–Ω–∞–Ω (HP: 120)\n–ê—Ç–∞–∫—É—é —Å –ø–æ–º–æ—â—å—é: –ú–µ—á (–°–∏–ª–∞: 50)\n–¢–µ–Ω—å (HP: 100)\n–°–∫—Ä—ã–≤–∞—é—Å—å –≤ —Ç–µ–Ω—è—Ö...\n–ê—Ç–∞–∫—É—é —Å –ø–æ–º–æ—â—å—é: –ö–∏–Ω–∂–∞–ª (–°–∏–ª–∞: 50)\n–í—ã—Ö–æ–∂—É –∏–∑ —É–∫—Ä—ã—Ç–∏—è\n–ê—Ä—Ç—É—Ä (HP: 110)\n–ê—Ç–∞–∫—É—é —Å –ø–æ–º–æ—â—å—é: –°–≤—è—â–µ–Ω–Ω—ã–π –º–µ—á (–°–∏–ª–∞: 50)\n–ü—Ä–∏–º–µ–Ω—è—é –∑–∞–∫–ª–∏–Ω–∞–Ω–∏–µ: –ò—Å—Ü–µ–ª–µ–Ω–∏–µ (–ú–∞–Ω–∞: 80)',
            'hints': ['Mixin –¥–æ–±–∞–≤–ª—è–µ—Ç—Å—è —á–µ—Ä–µ–∑ with', '–û–¥–∏–Ω –∫–ª–∞—Å—Å –º–æ–∂–µ—Ç –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –Ω–µ—Å–∫–æ–ª—å–∫–æ mixins', 'Mixins —Å–æ–¥–µ—Ä–∂–∞—Ç –æ–±—â—É—é —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω–æ—Å—Ç—å']
        },
        {
            'id': 19,
            'title': 'Generics (–û–±–æ–±—â–µ–Ω–∏—è)',
            'category': 'Dart –°–ø–µ—Ü–∏—Ñ–∏–∫–∞',
            'difficulty': '–ü—Ä–æ–¥–≤–∏–Ω—É—Ç—ã–π',
            'description': '–°–æ–∑–¥–∞–Ω–∏–µ —É–Ω–∏–≤–µ—Ä—Å–∞–ª—å–Ω–æ–≥–æ –∫–æ–¥–∞ —Å –ø–∞—Ä–∞–º–µ—Ç—Ä–∞–º–∏ —Ç–∏–ø–æ–≤',
            'theory': """
## Generics (–û–±–æ–±—â–µ–Ω–∏—è)

Generics –ø–æ–∑–≤–æ–ª—è—é—Ç —Å–æ–∑–¥–∞–≤–∞—Ç—å –∫–ª–∞—Å—Å—ã –∏ —Ñ—É–Ω–∫—Ü–∏–∏, —Ä–∞–±–æ—Ç–∞—é—â–∏–µ —Å —Ä–∞–∑–Ω—ã–º–∏ —Ç–∏–ø–∞–º–∏.

### –°–∏–Ω—Ç–∞–∫—Å–∏—Å:
```dart
class Container<T> {
  T value;
  Container(this.value);
}

T identity<T>(T value) => value;
```

### –ü—Ä–∏–º–µ–Ω–µ–Ω–∏–µ:
- –¢–∏–ø–æ–±–µ–∑–æ–ø–∞—Å–Ω—ã–µ –∫–æ–ª–ª–µ–∫—Ü–∏–∏
- –£–Ω–∏–≤–µ—Ä—Å–∞–ª—å–Ω—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏
- –ü–µ—Ä–µ–∏—Å–ø–æ–ª—å–∑—É–µ–º—ã–π –∫–æ–¥

### –ü—Ä–∏–º–µ—Ä—ã:
```dart
// –û–±–æ–±—â–µ–Ω–Ω—ã–π –∫–ª–∞—Å—Å
class Pair<T, U> {
  T first;
  U second;
  Pair(this.first, this.second);
}

// –û–±–æ–±—â–µ–Ω–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è
List<T> createList<T>(T item, int count) {
  return List.filled(count, item);
}

// –û–≥—Ä–∞–Ω–∏—á–µ–Ω–∏—è —Ç–∏–ø–æ–≤
class NumberContainer<T extends num> {
  T value;
  NumberContainer(this.value);
  
  T add(T other) => value + other as T;
}
```

### –í—Å—Ç—Ä–æ–µ–Ω–Ω—ã–µ –æ–±–æ–±—â–µ–Ω–∏—è:
- `List<String>` - —Å–ø–∏—Å–æ–∫ —Å—Ç—Ä–æ–∫
- `Map<String, int>` - —Å–ª–æ–≤–∞—Ä—å —Å—Ç—Ä–æ–∫ –∏ —á–∏—Å–µ–ª
- `Future<bool>` - –∞—Å–∏–Ω—Ö—Ä–æ–Ω–Ω—ã–π —Ä–µ–∑—É–ª—å—Ç–∞—Ç
            """,
            'task': '–°–æ–∑–¥–∞–π—Ç–µ —É–Ω–∏–≤–µ—Ä—Å–∞–ª—å–Ω—É—é —Å–∏—Å—Ç–µ–º—É –∫–µ—à–∏—Ä–æ–≤–∞–Ω–∏—è',
            'code_template': """// –£–Ω–∏–≤–µ—Ä—Å–∞–ª—å–Ω—ã–π –∫–µ—à –¥–ª—è –ª—é–±—ã—Ö —Ç–∏–ø–æ–≤ –¥–∞–Ω–Ω—ã—Ö
class Cache<K, V> {
  final Map<K, V> _storage = {};
  final int maxSize;
  
  Cache({this.maxSize = 100});
  
  // –°–æ—Ö—Ä–∞–Ω–∏—Ç—å –∑–Ω–∞—á–µ–Ω–∏–µ
  void put(K key, V value) {
    if (_storage.length >= maxSize) {
      // –£–¥–∞–ª—è–µ–º –ø–µ—Ä–≤—ã–π —ç–ª–µ–º–µ–Ω—Ç –µ—Å–ª–∏ –∫–µ—à –ø–æ–ª–æ–Ω
      var firstKey = _storage.keys.first;
      _storage.remove(firstKey);
    }
    _storage[key] = value;
    print('–°–æ—Ö—Ä–∞–Ω–µ–Ω–æ: $key => $value');
  }
  
  // –ü–æ–ª—É—á–∏—Ç—å –∑–Ω–∞—á–µ–Ω–∏–µ
  V? get(K key) {
    if (_storage.containsKey(key)) {
      print('–ù–∞–π–¥–µ–Ω–æ –≤ –∫–µ—à–µ: $key => ${_storage[key]}');
      return _storage[key];
    } else {
      print('–ù–µ –Ω–∞–π–¥–µ–Ω–æ –≤ –∫–µ—à–µ: $key');
      return null;
    }
  }
  
  // –†–∞–∑–º–µ—Ä –∫–µ—à–∞
  int get size => _storage.length;
  
  // –û—á–∏—Å—Ç–∏—Ç—å –∫–µ—à
  void clear() {
    _storage.clear();
    print('–ö–µ—à –æ—á–∏—â–µ–Ω');
  }
}

// –°–ø–µ—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω—ã–π –∫–ª–∞—Å—Å –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å —á–∏—Å–ª–∞–º–∏
class Calculator<T extends num> {
  T add(T a, T b) => (a + b) as T;
  T multiply(T a, T b) => (a * b) as T;
  
  bool isPositive(T value) => value > 0;
}

void main() {
  // –ö–µ—à —Å—Ç—Ä–æ–∫
  var stringCache = Cache<String, String>(maxSize: 3);
  stringCache.put('greeting', '–ü—Ä–∏–≤–µ—Ç');
  stringCache.put('farewell', '–ü–æ–∫–∞');
  var greeting = stringCache.get('greeting');
  
  // –ö–µ—à —á–∏—Å–µ–ª
  var numberCache = Cache<int, double>();
  numberCache.put(1, 3.14);
  numberCache.put(2, 2.71);
  var pi = numberCache.get(1);
  
  // –ö–∞–ª—å–∫—É–ª—è—Ç–æ—Ä –¥–ª—è —Ä–∞–∑–Ω—ã—Ö —Ç–∏–ø–æ–≤ —á–∏—Å–µ–ª
  var intCalc = Calculator<int>();
  print('–°—É–º–º–∞ int: ${intCalc.add(5, 3)}');
  print('5 –ø–æ–ª–æ–∂–∏—Ç–µ–ª—å–Ω–æ–µ: ${intCalc.isPositive(5)}');
  
  var doubleCalc = Calculator<double>();
  print('–ü—Ä–æ–∏–∑–≤–µ–¥–µ–Ω–∏–µ double: ${doubleCalc.multiply(2.5, 4.0)}');
  print('–†–∞–∑–º–µ—Ä –∫–µ—à–∞ —Å—Ç—Ä–æ–∫: ${stringCache.size}');
}""",
            'expected_output': '–°–æ—Ö—Ä–∞–Ω–µ–Ω–æ: greeting => –ü—Ä–∏–≤–µ—Ç\n–°–æ—Ö—Ä–∞–Ω–µ–Ω–æ: farewell => –ü–æ–∫–∞\n–ù–∞–π–¥–µ–Ω–æ –≤ –∫–µ—à–µ: greeting => –ü—Ä–∏–≤–µ—Ç\n–°–æ—Ö—Ä–∞–Ω–µ–Ω–æ: 1 => 3.14\n–°–æ—Ö—Ä–∞–Ω–µ–Ω–æ: 2 => 2.71\n–ù–∞–π–¥–µ–Ω–æ –≤ –∫–µ—à–µ: 1 => 3.14\n–°—É–º–º–∞ int: 8\n5 –ø–æ–ª–æ–∂–∏—Ç–µ–ª—å–Ω–æ–µ: true\n–ü—Ä–æ–∏–∑–≤–µ–¥–µ–Ω–∏–µ double: 10.0\n–†–∞–∑–º–µ—Ä –∫–µ—à–∞ —Å—Ç—Ä–æ–∫: 2',
            'hints': ['<T> –æ–∑–Ω–∞—á–∞–µ—Ç –ø–∞—Ä–∞–º–µ—Ç—Ä —Ç–∏–ø–∞', 'extends –æ–≥—Ä–∞–Ω–∏—á–∏–≤–∞–µ—Ç –≤–æ–∑–º–æ–∂–Ω—ã–µ —Ç–∏–ø—ã', 'as T –ø—Ä–∏–≤–æ–¥–∏—Ç —Ä–µ–∑—É–ª—å—Ç–∞—Ç –∫ –Ω—É–∂–Ω–æ–º—É —Ç–∏–ø—É']
        },
        {
            'id': 20,
            'title': 'Operator Overloading',
            'category': 'Dart –°–ø–µ—Ü–∏—Ñ–∏–∫–∞',
            'difficulty': '–ü—Ä–æ–¥–≤–∏–Ω—É—Ç—ã–π',
            'description': '–ü–µ—Ä–µ–æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ –æ–ø–µ—Ä–∞—Ç–æ—Ä–æ–≤ –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–∏—Ö –∫–ª–∞—Å—Å–æ–≤',
            'theory': """
## Operator Overloading

–ü–µ—Ä–µ–æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ –æ–ø–µ—Ä–∞—Ç–æ—Ä–æ–≤ –ø–æ–∑–≤–æ–ª—è–µ—Ç –∫–ª–∞—Å—Å–∞–º —Ä–∞–±–æ—Ç–∞—Ç—å —Å —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—ã–º–∏ –æ–ø–µ—Ä–∞—Ç–æ—Ä–∞–º–∏ (+, -, *, /, ==, –∏ —Ç.–¥.).

### –ü–µ—Ä–µ–æ–ø—Ä–µ–¥–µ–ª—è–µ–º—ã–µ –æ–ø–µ—Ä–∞—Ç–æ—Ä—ã:
- –ê—Ä–∏—Ñ–º–µ—Ç–∏—á–µ—Å–∫–∏–µ: `+`, `-`, `*`, `/`, `%`, `~/`
- –°—Ä–∞–≤–Ω–µ–Ω–∏—è: `==`, `<`, `>`, `<=`, `>=`
- –î—Ä—É–≥–∏—Ö: `[]`, `[]=`, `~`, `&`, `|`, `^`

### –°–∏–Ω—Ç–∞–∫—Å–∏—Å:
```dart
class MyClass {
  ReturnType operator +(OtherType other) {
    // —Ä–µ–∞–ª–∏–∑–∞—Ü–∏—è
  }
}
```

### –ü—Ä–∏–º–µ—Ä—ã:
```dart
class Point {
  double x, y;
  Point(this.x, this.y);
  
  Point operator +(Point other) {
    return Point(x + other.x, y + other.y);
  }
  
  bool operator ==(Object other) {
    return other is Point && x == other.x && y == other.y;
  }
  
  @override
  int get hashCode => x.hashCode ^ y.hashCode;
}
```

### –ü—Ä–∞–≤–∏–ª–∞:
- operator == —Ç—Ä–µ–±—É–µ—Ç –ø–µ—Ä–µ–æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∏—è hashCode
- –°–æ—Ö—Ä–∞–Ω—è–π—Ç–µ –º–∞—Ç–µ–º–∞—Ç–∏—á–µ—Å–∫–∏–π —Å–º—ã—Å–ª –æ–ø–µ—Ä–∞—Ç–æ—Ä–æ–≤
- –ù–µ –≤—Å–µ –æ–ø–µ—Ä–∞—Ç–æ—Ä—ã –º–æ–∂–Ω–æ –ø–µ—Ä–µ–æ–ø—Ä–µ–¥–µ–ª–∏—Ç—å
            """,
            'task': '–°–æ–∑–¥–∞–π—Ç–µ –∫–ª–∞—Å—Å Vector —Å –º–∞—Ç–µ–º–∞—Ç–∏—á–µ—Å–∫–∏–º–∏ –æ–ø–µ—Ä–∞—Ü–∏—è–º–∏',
            'code_template': """import 'dart:math';

class Vector {
  final double x;
  final double y;
  
  Vector(this.x, this.y);
  
  // –°–ª–æ–∂–µ–Ω–∏–µ –≤–µ–∫—Ç–æ—Ä–æ–≤
  Vector operator +(Vector other) {
    return Vector(x + other.x, y + other.y);
  }
  
  // –í—ã—á–∏—Ç–∞–Ω–∏–µ –≤–µ–∫—Ç–æ—Ä–æ–≤
  Vector operator -(Vector other) {
    return Vector(x - other.x, y - other.y);
  }
  
  // –£–º–Ω–æ–∂–µ–Ω–∏–µ –Ω–∞ —Å–∫–∞–ª—è—Ä
  Vector operator *(double scalar) {
    return Vector(x * scalar, y * scalar);
  }
  
  // –î–µ–ª–µ–Ω–∏–µ –Ω–∞ —Å–∫–∞–ª—è—Ä
  Vector operator /(double scalar) {
    if (scalar == 0) throw ArgumentError('–î–µ–ª–µ–Ω–∏–µ –Ω–∞ –Ω–æ–ª—å!');
    return Vector(x / scalar, y / scalar);
  }
  
  // –£–Ω–∞—Ä–Ω—ã–π –º–∏–Ω—É—Å (–æ–±—Ä–∞—â–µ–Ω–∏–µ –≤–µ–∫—Ç–æ—Ä–∞)
  Vector operator -() {
    return Vector(-x, -y);
  }
  
  // –°—Ä–∞–≤–Ω–µ–Ω–∏–µ –≤–µ–∫—Ç–æ—Ä–æ–≤
  @override
  bool operator ==(Object other) {
    return other is Vector && 
           (x - other.x).abs() < 0.001 && 
           (y - other.y).abs() < 0.001;
  }
  
  @override
  int get hashCode => x.hashCode ^ y.hashCode;
  
  // –î–ª–∏–Ω–∞ –≤–µ–∫—Ç–æ—Ä–∞
  double get length => sqrt(x * x + y * y);
  
  // –ù–æ—Ä–º–∞–ª–∏–∑–∞—Ü–∏—è –≤–µ–∫—Ç–æ—Ä–∞
  Vector get normalized {
    double len = length;
    if (len == 0) return Vector(0, 0);
    return Vector(x / len, y / len);
  }
  
  // –°–∫–∞–ª—è—Ä–Ω–æ–µ –ø—Ä–æ–∏–∑–≤–µ–¥–µ–Ω–∏–µ
  double dot(Vector other) {
    return x * other.x + y * other.y;
  }
  
  @override
  String toString() => 'Vector($x, $y)';
}

void main() {
  var v1 = Vector(3, 4);
  var v2 = Vector(1, 2);
  
  print('v1: $v1');
  print('v2: $v2');
  print('–î–ª–∏–Ω–∞ v1: ${v1.length}');
  
  var sum = v1 + v2;
  print('v1 + v2 = $sum');
  
  var diff = v1 - v2;
  print('v1 - v2 = $diff');
  
  var scaled = v1 * 2;
  print('v1 * 2 = $scaled');
  
  var divided = v1 / 2;
  print('v1 / 2 = $divided');
  
  var negated = -v1;
  print('-v1 = $negated');
  
  var normalized = v1.normalized;
  print('–ù–æ—Ä–º–∞–ª–∏–∑–æ–≤–∞–Ω–Ω—ã–π v1: $normalized');
  
  var dotProduct = v1.dot(v2);
  print('–°–∫–∞–ª—è—Ä–Ω–æ–µ –ø—Ä–æ–∏–∑–≤–µ–¥–µ–Ω–∏–µ v1 ¬∑ v2 = $dotProduct');
  
  print('v1 == v2: ${v1 == v2}');
  print('v1 == Vector(3, 4): ${v1 == Vector(3, 4)}');
}""",
            'expected_output': 'v1: Vector(3.0, 4.0)\nv2: Vector(1.0, 2.0)\n–î–ª–∏–Ω–∞ v1: 5.0\nv1 + v2 = Vector(4.0, 6.0)\nv1 - v2 = Vector(2.0, 2.0)\nv1 * 2 = Vector(6.0, 8.0)\nv1 / 2 = Vector(1.5, 2.0)\n-v1 = Vector(-3.0, -4.0)\n–ù–æ—Ä–º–∞–ª–∏–∑–æ–≤–∞–Ω–Ω—ã–π v1: Vector(0.6, 0.8)\n–°–∫–∞–ª—è—Ä–Ω–æ–µ –ø—Ä–æ–∏–∑–≤–µ–¥–µ–Ω–∏–µ v1 ¬∑ v2 = 11.0\nv1 == v2: false\nv1 == Vector(3, 4): true',
            'hints': ['operator + –æ–ø—Ä–µ–¥–µ–ª—è–µ—Ç –ø–æ–≤–µ–¥–µ–Ω–∏–µ –¥–ª—è —Å–ª–æ–∂–µ–Ω–∏—è', '–ü–µ—Ä–µ–æ–ø—Ä–µ–¥–µ–ª—è–π—Ç–µ == –∏ hashCode –≤–º–µ—Å—Ç–µ', '–£–Ω–∞—Ä–Ω—ã–π –º–∏–Ω—É—Å: operator -()']
        },
        
        # –ë–ª–æ–∫ 5: –†–µ–∞–ª—å–Ω—ã–µ –ø—Ä–æ–µ–∫—Ç—ã
        {
            'id': 21,
            'title': '–ò–≥—Ä–∞ "–£–≥–∞–¥–∞–π —á–∏—Å–ª–æ"',
            'category': '–†–µ–∞–ª—å–Ω—ã–µ –ø—Ä–æ–µ–∫—Ç—ã',
            'difficulty': '–°—Ä–µ–¥–Ω–∏–π',
            'description': '–°–æ–∑–¥–∞–Ω–∏–µ –∏–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω–æ–π –∫–æ–Ω—Å–æ–ª—å–Ω–æ–π –∏–≥—Ä—ã',
            'theory': """
## –ò–≥—Ä–∞ "–£–≥–∞–¥–∞–π —á–∏—Å–ª–æ"

–°–æ–∑–¥–∞–¥–∏–º –ø–æ–ª–Ω–æ—Ü–µ–Ω–Ω—É—é –∏–≥—Ä—É, –∫–æ—Ç–æ—Ä–∞—è –¥–µ–º–æ–Ω—Å—Ç—Ä–∏—Ä—É–µ—Ç –º–Ω–æ–≥–∏–µ –∫–æ–Ω—Ü–µ–ø—Ü–∏–∏ –ø—Ä–æ–≥—Ä–∞–º–º–∏—Ä–æ–≤–∞–Ω–∏—è.

### –§—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω–æ—Å—Ç—å –∏–≥—Ä—ã:
- –ì–µ–Ω–µ—Ä–∞—Ü–∏—è —Å–ª—É—á–∞–π–Ω–æ–≥–æ —á–∏—Å–ª–∞
- –í–≤–æ–¥ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏ –≤–∞–ª–∏–¥–∞—Ü–∏—è
- –ü–æ–¥—Å–∫–∞–∑–∫–∏ (–±–æ–ª—å—à–µ/–º–µ–Ω—å—à–µ)
- –°—á–µ—Ç—á–∏–∫ –ø–æ–ø—ã—Ç–æ–∫
- –í–æ–∑–º–æ–∂–Ω–æ—Å—Ç—å –∏–≥—Ä–∞—Ç—å —Å–Ω–æ–≤–∞

### –ò—Å–ø–æ–ª—å–∑—É–µ–º—ã–µ –∫–æ–Ω—Ü–µ–ø—Ü–∏–∏:
- **–¶–∏–∫–ª—ã** –¥–ª—è –∏–≥—Ä–æ–≤–æ–≥–æ –ø—Ä–æ—Ü–µ—Å—Å–∞
- **–£—Å–ª–æ–≤–∏—è** –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –≤–≤–æ–¥–∞
- **–§—É–Ω–∫—Ü–∏–∏** –¥–ª—è –æ—Ä–≥–∞–Ω–∏–∑–∞—Ü–∏–∏ –∫–æ–¥–∞
- **–ì–µ–Ω–µ—Ä–∞—Ü–∏—è —Å–ª—É—á–∞–π–Ω—ã—Ö —á–∏—Å–µ–ª**
- **–û–±—Ä–∞–±–æ—Ç–∫–∞ –æ—à–∏–±–æ–∫**

### –°—Ç—Ä—É–∫—Ç—É—Ä–∞ –∏–≥—Ä—ã:
```dart
class NumberGuessingGame {
  void startGame() { /* –ª–æ–≥–∏–∫–∞ –∏–≥—Ä—ã */ }
  bool validateInput(String input) { /* –ø—Ä–æ–≤–µ—Ä–∫–∞ */ }
  void giveHint(int guess, int target) { /* –ø–æ–¥—Å–∫–∞–∑–∫–∞ */ }
}
```

### –£–ª—É—á—à–µ–Ω–∏—è:
- –†–∞–∑–Ω—ã–µ —É—Ä–æ–≤–Ω–∏ —Å–ª–æ–∂–Ω–æ—Å—Ç–∏
- –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –∏–≥—Ä
- –õ—É—á—à–∏–π —Ä–µ–∑—É–ª—å—Ç–∞—Ç
- –°–∏—Å—Ç–µ–º–∞ –æ—á–∫–æ–≤
            """,
            'task': '–°–æ–∑–¥–∞–π—Ç–µ –ø–æ–ª–Ω—É—é –∏–≥—Ä—É "–£–≥–∞–¥–∞–π —á–∏—Å–ª–æ" —Å —Ä–∞–∑–ª–∏—á–Ω—ã–º–∏ —É—Ä–æ–≤–Ω—è–º–∏ —Å–ª–æ–∂–Ω–æ—Å—Ç–∏',
            'code_template': """import 'dart:math';

class NumberGuessingGame {
  late int _targetNumber;
  late int _maxNumber;
  late int _attempts;
  late int _maxAttempts;
  String _difficulty = '';
  
  void startGame() {
    print('=== –ò–ì–†–ê "–£–ì–ê–î–ê–ô –ß–ò–°–õ–û" ===');
    print('–í—ã–±–µ—Ä–∏—Ç–µ —É—Ä–æ–≤–µ–Ω—å —Å–ª–æ–∂–Ω–æ—Å—Ç–∏:');
    print('1. –õ–µ–≥–∫–∏–π (1-50, 10 –ø–æ–ø—ã—Ç–æ–∫)');
    print('2. –°—Ä–µ–¥–Ω–∏–π (1-100, 8 –ø–æ–ø—ã—Ç–æ–∫)');
    print('3. –°–ª–æ–∂–Ω—ã–π (1-200, 6 –ø–æ–ø—ã—Ç–æ–∫)');
    
    // –°–∏–º—É–ª—è—Ü–∏—è –≤—ã–±–æ—Ä–∞ —Å—Ä–µ–¥–Ω–µ–≥–æ —É—Ä–æ–≤–Ω—è
    _selectDifficulty(2);
    _generateNumber();
    _playGame();
  }
  
  void _selectDifficulty(int choice) {
    switch (choice) {
      case 1:
        _maxNumber = 50;
        _maxAttempts = 10;
        _difficulty = '–õ–µ–≥–∫–∏–π';
        break;
      case 2:
        _maxNumber = 100;
        _maxAttempts = 8;
        _difficulty = '–°—Ä–µ–¥–Ω–∏–π';
        break;
      case 3:
        _maxNumber = 200;
        _maxAttempts = 6;
        _difficulty = '–°–ª–æ–∂–Ω—ã–π';
        break;
      default:
        _maxNumber = 100;
        _maxAttempts = 8;
        _difficulty = '–°—Ä–µ–¥–Ω–∏–π';
    }
    print('–í—ã–±—Ä–∞–Ω —É—Ä–æ–≤–µ–Ω—å: $_difficulty');
    print('–î–∏–∞–ø–∞–∑–æ–Ω: 1-$_maxNumber, –ü–æ–ø—ã—Ç–æ–∫: $_maxAttempts');
  }
  
  void _generateNumber() {
    var random = Random();
    _targetNumber = random.nextInt(_maxNumber) + 1;
    _attempts = 0;
    print('–Ø –∑–∞–≥–∞–¥–∞–ª —á–∏—Å–ª–æ –æ—Ç 1 –¥–æ $_maxNumber. –ü–æ–ø—Ä–æ–±—É–π —É–≥–∞–¥–∞—Ç—å!');
  }
  
  void _playGame() {
    // –°–∏–º—É–ª–∏—Ä—É–µ–º –Ω–µ—Å–∫–æ–ª—å–∫–æ –ø–æ–ø—ã—Ç–æ–∫
    List<int> guesses = [50, 75, 62, 68, 65, 67, 66];
    _targetNumber = 66; // –î–ª—è –¥–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏–∏
    
    for (int guess in guesses) {
      _attempts++;
      print('\\n–ü–æ–ø—ã—Ç–∫–∞ $_attempts: $guess');
      
      if (_checkGuess(guess)) {
        _showWinMessage();
        return;
      }
      
      if (_attempts >= _maxAttempts) {
        _showLoseMessage();
        return;
      }
    }
  }
  
  bool _checkGuess(int guess) {
    if (guess == _targetNumber) {
      return true;
    } else if (guess < _targetNumber) {
      print('–°–ª–∏—à–∫–æ–º –º–∞–ª–æ! –ü–æ–ø—Ä–æ–±—É–π –±–æ–ª—å—à–µ.');
      _giveHint(guess);
    } else {
      print('–°–ª–∏—à–∫–æ–º –º–Ω–æ–≥–æ! –ü–æ–ø—Ä–æ–±—É–π –º–µ–Ω—å—à–µ.');
      _giveHint(guess);
    }
    
    int remaining = _maxAttempts - _attempts;
    print('–û—Å—Ç–∞–ª–æ—Å—å –ø–æ–ø—ã—Ç–æ–∫: $remaining');
    return false;
  }
  
  void _giveHint(int guess) {
    int difference = (guess - _targetNumber).abs();
    if (difference <= 5) {
      print('üî• –û—á–µ–Ω—å –≥–æ—Ä—è—á–æ!');
    } else if (difference <= 10) {
      print('üå°Ô∏è –¢–µ–ø–ª–æ!');
    } else if (difference <= 20) {
      print('‚ùÑÔ∏è –ü—Ä–æ—Ö–ª–∞–¥–Ω–æ!');
    } else {
      print('üßä –•–æ–ª–æ–¥–Ω–æ!');
    }
  }
  
  void _showWinMessage() {
    print('\\nüéâ –ü–û–ó–î–†–ê–í–õ–Ø–Æ! –¢—ã —É–≥–∞–¥–∞–ª —á–∏—Å–ª–æ $_targetNumber!');
    print('–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –ø–æ–ø—ã—Ç–æ–∫: $_attempts');
    
    String performance;
    if (_attempts <= _maxAttempts ~/ 3) {
      performance = '–û—Ç–ª–∏—á–Ω–æ! üåü';
    } else if (_attempts <= _maxAttempts ~/ 2) {
      performance = '–•–æ—Ä–æ—à–æ! üëç';
    } else {
      performance = '–ù–µ–ø–ª–æ—Ö–æ! üëå';
    }
    print('–†–µ–∑—É–ª—å—Ç–∞—Ç: $performance');
  }
  
  void _showLoseMessage() {
    print('\\nüíî –ò–≥—Ä–∞ –æ–∫–æ–Ω—á–µ–Ω–∞! –ü–æ–ø—ã—Ç–∫–∏ –∑–∞–∫–æ–Ω—á–∏–ª–∏—Å—å.');
    print('–ó–∞–≥–∞–¥–∞–Ω–Ω–æ–µ —á–∏—Å–ª–æ –±—ã–ª–æ: $_targetNumber');
    print('–ü–æ–ø—Ä–æ–±—É–π –µ—â–µ —Ä–∞–∑!');
  }
  
  // –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –∏–≥—Ä
  void showGameStats() {
    print('\\nüìä –°–¢–ê–¢–ò–°–¢–ò–ö–ê –ò–ì–†:');
    print('–°—ã–≥—Ä–∞–Ω–æ –∏–≥—Ä: 1');
    print('–ü–æ–±–µ–¥: 1');
    print('–°—Ä–µ–¥–Ω–∏–π —Ä–µ–∑—É–ª—å—Ç–∞—Ç: $_attempts –ø–æ–ø—ã—Ç–æ–∫');
    print('–õ—É—á—à–∏–π —Ä–µ–∑—É–ª—å—Ç–∞—Ç: $_attempts –ø–æ–ø—ã—Ç–æ–∫');
  }
}

// –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–π –∫–ª–∞—Å—Å –¥–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –∏–≥—Ä–æ–≤–æ–π —Å–µ—Å—Å–∏–µ–π
class GameSession {
  final NumberGuessingGame _game = NumberGuessingGame();
  
  void start() {
    _game.startGame();
    _game.showGameStats();
    
    print('\\nüéÆ –•–æ—á–µ—à—å —Å—ã–≥—Ä–∞—Ç—å –µ—â–µ? (–¥–∞/–Ω–µ—Ç)');
    // –í —Ä–µ–∞–ª—å–Ω–æ–π –∏–≥—Ä–µ –∑–¥–µ—Å—å –±—ã–ª –±—ã –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–∏–π –≤–≤–æ–¥
    print('–°–ø–∞—Å–∏–±–æ –∑–∞ –∏–≥—Ä—É!');
  }
}

void main() {
  var session = GameSession();
  session.start();
}""",
            'expected_output': '=== –ò–ì–†–ê "–£–ì–ê–î–ê–ô –ß–ò–°–õ–û" ===\n–í—ã–±–µ—Ä–∏—Ç–µ —É—Ä–æ–≤–µ–Ω—å —Å–ª–æ–∂–Ω–æ—Å—Ç–∏:\n1. –õ–µ–≥–∫–∏–π (1-50, 10 –ø–æ–ø—ã—Ç–æ–∫)\n2. –°—Ä–µ–¥–Ω–∏–π (1-100, 8 –ø–æ–ø—ã—Ç–æ–∫)\n3. –°–ª–æ–∂–Ω—ã–π (1-200, 6 –ø–æ–ø—ã—Ç–æ–∫)\n–í—ã–±—Ä–∞–Ω —É—Ä–æ–≤–µ–Ω—å: –°—Ä–µ–¥–Ω–∏–π\n–î–∏–∞–ø–∞–∑–æ–Ω: 1-100, –ü–æ–ø—ã—Ç–æ–∫: 8\n–Ø –∑–∞–≥–∞–¥–∞–ª —á–∏—Å–ª–æ –æ—Ç 1 –¥–æ 100. –ü–æ–ø—Ä–æ–±—É–π —É–≥–∞–¥–∞—Ç—å!\n\n–ü–æ–ø—ã—Ç–∫–∞ 1: 50\n–°–ª–∏—à–∫–æ–º –º–∞–ª–æ! –ü–æ–ø—Ä–æ–±—É–π –±–æ–ª—å—à–µ.\nüå°Ô∏è –¢–µ–ø–ª–æ!\n–û—Å—Ç–∞–ª–æ—Å—å –ø–æ–ø—ã—Ç–æ–∫: 7\n\n–ü–æ–ø—ã—Ç–∫–∞ 2: 75\n–°–ª–∏—à–∫–æ–º –º–Ω–æ–≥–æ! –ü–æ–ø—Ä–æ–±—É–π –º–µ–Ω—å—à–µ.\n‚ùÑÔ∏è –ü—Ä–æ—Ö–ª–∞–¥–Ω–æ!\n–û—Å—Ç–∞–ª–æ—Å—å –ø–æ–ø—ã—Ç–æ–∫: 6\n\n–ü–æ–ø—ã—Ç–∫–∞ 3: 62\n–°–ª–∏—à–∫–æ–º –º–∞–ª–æ! –ü–æ–ø—Ä–æ–±—É–π –±–æ–ª—å—à–µ.\nüî• –û—á–µ–Ω—å –≥–æ—Ä—è—á–æ!\n–û—Å—Ç–∞–ª–æ—Å—å –ø–æ–ø—ã—Ç–æ–∫: 5\n\n–ü–æ–ø—ã—Ç–∫–∞ 4: 68\n–°–ª–∏—à–∫–æ–º –º–Ω–æ–≥–æ! –ü–æ–ø—Ä–æ–±—É–π –º–µ–Ω—å—à–µ.\nüî• –û—á–µ–Ω—å –≥–æ—Ä—è—á–æ!\n–û—Å—Ç–∞–ª–æ—Å—å –ø–æ–ø—ã—Ç–æ–∫: 4\n\n–ü–æ–ø—ã—Ç–∫–∞ 5: 65\n–°–ª–∏—à–∫–æ–º –º–∞–ª–æ! –ü–æ–ø—Ä–æ–±—É–π –±–æ–ª—å—à–µ.\nüî• –û—á–µ–Ω—å –≥–æ—Ä—è—á–æ!\n–û—Å—Ç–∞–ª–æ—Å—å –ø–æ–ø—ã—Ç–æ–∫: 3\n\n–ü–æ–ø—ã—Ç–∫–∞ 6: 67\n–°–ª–∏—à–∫–æ–º –º–Ω–æ–≥–æ! –ü–æ–ø—Ä–æ–±—É–π –º–µ–Ω—å—à–µ.\nüî• –û—á–µ–Ω—å –≥–æ—Ä—è—á–æ!\n–û—Å—Ç–∞–ª–æ—Å—å –ø–æ–ø—ã—Ç–æ–∫: 2\n\n–ü–æ–ø—ã—Ç–∫–∞ 7: 66\n\nüéâ –ü–û–ó–î–†–ê–í–õ–Ø–Æ! –¢—ã —É–≥–∞–¥–∞–ª —á–∏—Å–ª–æ 66!\n–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –ø–æ–ø—ã—Ç–æ–∫: 7\n–†–µ–∑—É–ª—å—Ç–∞—Ç: –ù–µ–ø–ª–æ—Ö–æ! üëå\n\nüìä –°–¢–ê–¢–ò–°–¢–ò–ö–ê –ò–ì–†:\n–°—ã–≥—Ä–∞–Ω–æ –∏–≥—Ä: 1\n–ü–æ–±–µ–¥: 1\n–°—Ä–µ–¥–Ω–∏–π —Ä–µ–∑—É–ª—å—Ç–∞—Ç: 7 –ø–æ–ø—ã—Ç–æ–∫\n–õ—É—á—à–∏–π —Ä–µ–∑—É–ª—å—Ç–∞—Ç: 7 –ø–æ–ø—ã—Ç–æ–∫\n\nüéÆ –•–æ—á–µ—à—å —Å—ã–≥—Ä–∞—Ç—å –µ—â–µ? (–¥–∞/–Ω–µ—Ç)\n–°–ø–∞—Å–∏–±–æ –∑–∞ –∏–≥—Ä—É!',
            'hints': ['Random().nextInt(n) –≥–µ–Ω–µ—Ä–∏—Ä—É–µ—Ç —á–∏—Å–ª–æ –æ—Ç 0 –¥–æ n-1', '–ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ switch –¥–ª—è –≤—ã–±–æ—Ä–∞ —Å–ª–æ–∂–Ω–æ—Å—Ç–∏', 'abs() –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç –∞–±—Å–æ–ª—é—Ç–Ω–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ']
        },
        {
            'id': 22,
            'title': 'HTTP –∫–ª–∏–µ–Ω—Ç –∏ —Ä–∞–±–æ—Ç–∞ —Å API',
            'category': '–†–µ–∞–ª—å–Ω—ã–µ –ø—Ä–æ–µ–∫—Ç—ã',
            'difficulty': '–ü—Ä–æ–¥–≤–∏–Ω—É—Ç—ã–π',
            'description': '–°–æ–∑–¥–∞–Ω–∏–µ HTTP –∫–ª–∏–µ–Ω—Ç–∞ –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å REST API',
            'theory': """
## HTTP –∫–ª–∏–µ–Ω—Ç –∏ REST API

–ò–∑—É—á–∞–µ–º —Ä–∞–±–æ—Ç—É —Å –≤–Ω–µ—à–Ω–∏–º–∏ API –∏ HTTP –∑–∞–ø—Ä–æ—Å–∞–º–∏.

### –û—Å–Ω–æ–≤—ã HTTP:
- **GET** - –ø–æ–ª—É—á–µ–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö
- **POST** - –æ—Ç–ø—Ä–∞–≤–∫–∞ –¥–∞–Ω–Ω—ã—Ö
- **PUT** - –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö
- **DELETE** - —É–¥–∞–ª–µ–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö

### JSON –∏ —Å–µ—Ä–∏–∞–ª–∏–∑–∞—Ü–∏—è:
```dart
import 'dart:convert';

// –ü—Ä–µ–æ–±—Ä–∞–∑–æ–≤–∞–Ω–∏–µ –≤ JSON
String json = jsonEncode(data);

// –ü—Ä–µ–æ–±—Ä–∞–∑–æ–≤–∞–Ω–∏–µ –∏–∑ JSON
Map<String, dynamic> data = jsonDecode(json);
```

### HTTP –∫–ª–∏–µ–Ω—Ç –≤ Dart:
```dart
import 'dart:io';
import 'dart:convert';

final client = HttpClient();
final request = await client.getUrl(Uri.parse(url));
final response = await request.close();
```

### –û–±—Ä–∞–±–æ—Ç–∫–∞ –æ—Ç–≤–µ—Ç–æ–≤:
- –°—Ç–∞—Ç—É—Å –∫–æ–¥—ã (200, 404, 500)
- –ó–∞–≥–æ–ª–æ–≤–∫–∏ –æ—Ç–≤–µ—Ç–∞
- –¢–µ–ª–æ –æ—Ç–≤–µ—Ç–∞ (JSON, —Ç–µ–∫—Å—Ç)
- –û–±—Ä–∞–±–æ—Ç–∫–∞ –æ—à–∏–±–æ–∫

### –ü—Ä–∞–∫—Ç–∏—á–µ—Å–∫–æ–µ –ø—Ä–∏–º–µ–Ω–µ–Ω–∏–µ:
- –ü–æ–ª—É—á–µ–Ω–∏–µ –ø–æ–≥–æ–¥—ã
- –†–∞–±–æ—Ç–∞ —Å API —Å–æ—Ü–∏–∞–ª—å–Ω—ã—Ö —Å–µ—Ç–µ–π
- –ó–∞–≥—Ä—É–∑–∫–∞ –¥–∞–Ω–Ω—ã—Ö —Å —Å–µ—Ä–≤–µ—Ä–∞
- –û—Ç–ø—Ä–∞–≤–∫–∞ —Ñ–æ—Ä–º
            """,
            'task': '–°–æ–∑–¥–∞–π—Ç–µ HTTP –∫–ª–∏–µ–Ω—Ç –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å API –ø–æ–≥–æ–¥—ã',
            'code_template': """import 'dart:convert';

// –ú–æ–¥–µ–ª—å –¥–∞–Ω–Ω—ã—Ö –¥–ª—è –ø–æ–≥–æ–¥—ã
class Weather {
  final String city;
  final double temperature;
  final String description;
  final int humidity;
  final double windSpeed;
  
  Weather({
    required this.city,
    required this.temperature,
    required this.description,
    required this.humidity,
    required this.windSpeed,
  });
  
  factory Weather.fromJson(Map<String, dynamic> json) {
    return Weather(
      city: json['city'],
      temperature: json['temperature'].toDouble(),
      description: json['description'],
      humidity: json['humidity'],
      windSpeed: json['windSpeed'].toDouble(),
    );
  }
  
  Map<String, dynamic> toJson() {
    return {
      'city': city,
      'temperature': temperature,
      'description': description,
      'humidity': humidity,
      'windSpeed': windSpeed,
    };
  }
  
  @override
  String toString() {
    return '–ü–æ–≥–æ–¥–∞ –≤ $city: $temperature¬∞C, $description, –≤–ª–∞–∂–Ω–æ—Å—Ç—å $humidity%, –≤–µ—Ç–µ—Ä ${windSpeed}–º/—Å';
  }
}

// HTTP –∫–ª–∏–µ–Ω—Ç –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å API
class WeatherApiClient {
  final String baseUrl = 'https://api.weather.com';
  final String apiKey = 'demo_api_key';
  
  // –ü–æ–ª—É—á–µ–Ω–∏–µ —Ç–µ–∫—É—â–µ–π –ø–æ–≥–æ–¥—ã
  Future<Weather> getCurrentWeather(String city) async {
    print('üåê –ó–∞–ø—Ä–æ—Å –ø–æ–≥–æ–¥—ã –¥–ª—è –≥–æ—Ä–æ–¥–∞: $city');
    
    // –°–∏–º—É–ª—è—Ü–∏—è HTTP –∑–∞–ø—Ä–æ—Å–∞
    await Future.delayed(Duration(seconds: 1));
    
    // –°–∏–º—É–ª—è—Ü–∏—è –æ—Ç–≤–µ—Ç–∞ API
    Map<String, dynamic> mockResponse = {
      'city': city,
      'temperature': _generateTemperature(),
      'description': _getRandomDescription(),
      'humidity': _generateHumidity(),
      'windSpeed': _generateWindSpeed(),
    };
    
    print('‚úÖ –û—Ç–≤–µ—Ç –ø–æ–ª—É—á–µ–Ω: ${mockResponse.toString()}');
    return Weather.fromJson(mockResponse);
  }
  
  // –ü–æ–ª—É—á–µ–Ω–∏–µ –ø—Ä–æ–≥–Ω–æ–∑–∞ –Ω–∞ –Ω–µ—Å–∫–æ–ª—å–∫–æ –¥–Ω–µ–π
  Future<List<Weather>> getWeatherForecast(String city, int days) async {
    print('üåê –ó–∞–ø—Ä–æ—Å –ø—Ä–æ–≥–Ω–æ–∑–∞ –¥–ª—è $city –Ω–∞ $days –¥–Ω–µ–π');
    
    await Future.delayed(Duration(seconds: 2));
    
    List<Weather> forecast = [];
    for (int i = 0; i < days; i++) {
      Map<String, dynamic> dayData = {
        'city': '$city (–¥–µ–Ω—å ${i + 1})',
        'temperature': _generateTemperature(),
        'description': _getRandomDescription(),
        'humidity': _generateHumidity(),
        'windSpeed': _generateWindSpeed(),
      };
      forecast.add(Weather.fromJson(dayData));
    }
    
    print('‚úÖ –ü—Ä–æ–≥–Ω–æ–∑ –ø–æ–ª—É—á–µ–Ω –Ω–∞ $days –¥–Ω–µ–π');
    return forecast;
  }
  
  // –û—Ç–ø—Ä–∞–≤–∫–∞ –æ—Ç—á–µ—Ç–∞ –æ –ø–æ–≥–æ–¥–µ
  Future<bool> submitWeatherReport(Weather weather) async {
    print('üì§ –û—Ç–ø—Ä–∞–≤–∫–∞ –æ—Ç—á–µ—Ç–∞ –æ –ø–æ–≥–æ–¥–µ...');
    
    // –ü—Ä–µ–æ–±—Ä–∞–∑—É–µ–º –≤ JSON
    String jsonData = jsonEncode(weather.toJson());
    print('JSON –¥–∞–Ω–Ω—ã–µ: $jsonData');
    
    await Future.delayed(Duration(milliseconds: 500));
    
    print('‚úÖ –û—Ç—á–µ—Ç —É—Å–ø–µ—à–Ω–æ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω');
    return true;
  }
  
  // –í—Å–ø–æ–º–æ–≥–∞—Ç–µ–ª—å–Ω—ã–µ –º–µ—Ç–æ–¥—ã –¥–ª—è –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –¥–∞–Ω–Ω—ã—Ö
  double _generateTemperature() {
    return (15 + (25 * (DateTime.now().millisecond / 1000)));
  }
  
  String _getRandomDescription() {
    List<String> descriptions = [
      '–°–æ–ª–Ω–µ—á–Ω–æ', '–û–±–ª–∞—á–Ω–æ', '–î–æ–∂–¥—å', '–°–Ω–µ–≥', '–¢—É–º–∞–Ω'
    ];
    return descriptions[DateTime.now().second % descriptions.length];
  }
  
  int _generateHumidity() {
    return 40 + (DateTime.now().millisecond ~/ 20);
  }
  
  double _generateWindSpeed() {
    return (DateTime.now().millisecond / 100);
  }
}

// –ú–µ–Ω–µ–¥–∂–µ—Ä –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å –ø–æ–≥–æ–¥–Ω—ã–º–∏ –¥–∞–Ω–Ω—ã–º–∏
class WeatherManager {
  final WeatherApiClient _apiClient = WeatherApiClient();
  final List<Weather> _weatherHistory = [];
  
  Future<void> showCurrentWeather(String city) async {
    try {
      Weather weather = await _apiClient.getCurrentWeather(city);
      print('üå§Ô∏è $weather');
      _weatherHistory.add(weather);
    } catch (e) {
      print('‚ùå –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è –ø–æ–≥–æ–¥—ã: $e');
    }
  }
  
  Future<void> showWeatherForecast(String city) async {
    try {
      List<Weather> forecast = await _apiClient.getWeatherForecast(city, 3);
      print('\\nüìÖ –ü—Ä–æ–≥–Ω–æ–∑ –ø–æ–≥–æ–¥—ã:');
      for (int i = 0; i < forecast.length; i++) {
        print('–î–µ–Ω—å ${i + 1}: ${forecast[i]}');
      }
    } catch (e) {
      print('‚ùå –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è –ø—Ä–æ–≥–Ω–æ–∑–∞: $e');
    }
  }
  
  void showWeatherHistory() {
    print('\\nüìã –ò—Å—Ç–æ—Ä–∏—è –∑–∞–ø—Ä–æ—Å–æ–≤:');
    if (_weatherHistory.isEmpty) {
      print('–ò—Å—Ç–æ—Ä–∏—è –ø—É—Å—Ç–∞');
    } else {
      for (int i = 0; i < _weatherHistory.length; i++) {
        print('${i + 1}. ${_weatherHistory[i]}');
      }
    }
  }
  
  Future<void> reportWeather(Weather weather) async {
    await _apiClient.submitWeatherReport(weather);
  }
}

void main() async {
  print('=== HTTP –ö–õ–ò–ï–ù–¢ –î–õ–Ø API –ü–û–ì–û–î–´ ===\\n');
  
  var weatherManager = WeatherManager();
  
  // –ü–æ–ª—É—á–µ–Ω–∏–µ —Ç–µ–∫—É—â–µ–π –ø–æ–≥–æ–¥—ã
  await weatherManager.showCurrentWeather('–ú–æ—Å–∫–≤–∞');
  await weatherManager.showCurrentWeather('–°–∞–Ω–∫—Ç-–ü–µ—Ç–µ—Ä–±—É—Ä–≥');
  
  // –ü—Ä–æ–≥–Ω–æ–∑ –ø–æ–≥–æ–¥—ã
  await weatherManager.showWeatherForecast('–ù–æ–≤–æ—Å–∏–±–∏—Ä—Å–∫');
  
  // –ò—Å—Ç–æ—Ä–∏—è –∑–∞–ø—Ä–æ—Å–æ–≤
  weatherManager.showWeatherHistory();
  
  print('\\n‚ú® –ü—Ä–æ–≥—Ä–∞–º–º–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞');
}""",
            'expected_output': '=== HTTP –ö–õ–ò–ï–ù–¢ –î–õ–Ø API –ü–û–ì–û–î–´ ===\n\nüåê –ó–∞–ø—Ä–æ—Å –ø–æ–≥–æ–¥—ã –¥–ª—è –≥–æ—Ä–æ–¥–∞: –ú–æ—Å–∫–≤–∞\n‚úÖ –û—Ç–≤–µ—Ç –ø–æ–ª—É—á–µ–Ω: {city: –ú–æ—Å–∫–≤–∞, temperature: 20.0, description: –°–æ–ª–Ω–µ—á–Ω–æ, humidity: 50, windSpeed: 5.0}\nüå§Ô∏è –ü–æ–≥–æ–¥–∞ –≤ –ú–æ—Å–∫–≤–∞: 20.0¬∞C, –°–æ–ª–Ω–µ—á–Ω–æ, –≤–ª–∞–∂–Ω–æ—Å—Ç—å 50%, –≤–µ—Ç–µ—Ä 5.0–º/—Å\nüåê –ó–∞–ø—Ä–æ—Å –ø–æ–≥–æ–¥—ã –¥–ª—è –≥–æ—Ä–æ–¥–∞: –°–∞–Ω–∫—Ç-–ü–µ—Ç–µ—Ä–±—É—Ä–≥\n‚úÖ –û—Ç–≤–µ—Ç –ø–æ–ª—É—á–µ–Ω: {city: –°–∞–Ω–∫—Ç-–ü–µ—Ç–µ—Ä–±—É—Ä–≥, temperature: 18.0, description: –û–±–ª–∞—á–Ω–æ, humidity: 60, windSpeed: 3.0}\nüå§Ô∏è –ü–æ–≥–æ–¥–∞ –≤ –°–∞–Ω–∫—Ç-–ü–µ—Ç–µ—Ä–±—É—Ä–≥: 18.0¬∞C, –û–±–ª–∞—á–Ω–æ, –≤–ª–∞–∂–Ω–æ—Å—Ç—å 60%, –≤–µ—Ç–µ—Ä 3.0–º/—Å\nüåê –ó–∞–ø—Ä–æ—Å –ø—Ä–æ–≥–Ω–æ–∑–∞ –¥–ª—è –ù–æ–≤–æ—Å–∏–±–∏—Ä—Å–∫ –Ω–∞ 3 –¥–Ω–µ–π\n‚úÖ –ü—Ä–æ–≥–Ω–æ–∑ –ø–æ–ª—É—á–µ–Ω –Ω–∞ 3 –¥–Ω–µ–π\n\nüìÖ –ü—Ä–æ–≥–Ω–æ–∑ –ø–æ–≥–æ–¥—ã:\n–î–µ–Ω—å 1: –ü–æ–≥–æ–¥–∞ –≤ –ù–æ–≤–æ—Å–∏–±–∏—Ä—Å–∫ (–¥–µ–Ω—å 1): 22.0¬∞C, –î–æ–∂–¥—å, –≤–ª–∞–∂–Ω–æ—Å—Ç—å 45%, –≤–µ—Ç–µ—Ä 4.0–º/—Å\n–î–µ–Ω—å 2: –ü–æ–≥–æ–¥–∞ –≤ –ù–æ–≤–æ—Å–∏–±–∏—Ä—Å–∫ (–¥–µ–Ω—å 2): 19.0¬∞C, –°–Ω–µ–≥, –≤–ª–∞–∂–Ω–æ—Å—Ç—å 70%, –≤–µ—Ç–µ—Ä 6.0–º/—Å\n–î–µ–Ω—å 3: –ü–æ–≥–æ–¥–∞ –≤ –ù–æ–≤–æ—Å–∏–±–∏—Ä—Å–∫ (–¥–µ–Ω—å 3): 25.0¬∞C, –¢—É–º–∞–Ω, –≤–ª–∞–∂–Ω–æ—Å—Ç—å 55%, –≤–µ—Ç–µ—Ä 2.0–º/—Å\n\nüìã –ò—Å—Ç–æ—Ä–∏—è –∑–∞–ø—Ä–æ—Å–æ–≤:\n1. –ü–æ–≥–æ–¥–∞ –≤ –ú–æ—Å–∫–≤–∞: 20.0¬∞C, –°–æ–ª–Ω–µ—á–Ω–æ, –≤–ª–∞–∂–Ω–æ—Å—Ç—å 50%, –≤–µ—Ç–µ—Ä 5.0–º/—Å\n2. –ü–æ–≥–æ–¥–∞ –≤ –°–∞–Ω–∫—Ç-–ü–µ—Ç–µ—Ä–±—É—Ä–≥: 18.0¬∞C, –û–±–ª–∞—á–Ω–æ, –≤–ª–∞–∂–Ω–æ—Å—Ç—å 60%, –≤–µ—Ç–µ—Ä 3.0–º/—Å\n\n‚ú® –ü—Ä–æ–≥—Ä–∞–º–º–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞',
            'hints': ['jsonEncode() –ø—Ä–µ–æ–±—Ä–∞–∑—É–µ—Ç –æ–±—ä–µ–∫—Ç –≤ JSON —Å—Ç—Ä–æ–∫—É', 'jsonDecode() –ø–∞—Ä—Å–∏—Ç JSON –≤ Map', 'Future.delayed() —Å–∏–º—É–ª–∏—Ä—É–µ—Ç —Å–µ—Ç–µ–≤—ã–µ –∑–∞–¥–µ—Ä–∂–∫–∏']
        },
        {
            'id': 23,
            'title': 'CLI —É—Ç–∏–ª–∏—Ç–∞ —Å –∞—Ä–≥—É–º–µ–Ω—Ç–∞–º–∏',
            'category': '–†–µ–∞–ª—å–Ω—ã–µ –ø—Ä–æ–µ–∫—Ç—ã',
            'difficulty': '–ü—Ä–æ–¥–≤–∏–Ω—É—Ç—ã–π',
            'description': '–°–æ–∑–¥–∞–Ω–∏–µ —É—Ç–∏–ª–∏—Ç—ã –∫–æ–º–∞–Ω–¥–Ω–æ–π —Å—Ç—Ä–æ–∫–∏ —Å –∞—Ä–≥—É–º–µ–Ω—Ç–∞–º–∏',
            'theory': """
## Command Line Interface (CLI)

CLI –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è - –º–æ—â–Ω—ã–π —Å–ø–æ—Å–æ–± –∞–≤—Ç–æ–º–∞—Ç–∏–∑–∞—Ü–∏–∏ –∑–∞–¥–∞—á.

### –†–∞–±–æ—Ç–∞ —Å –∞—Ä–≥—É–º–µ–Ω—Ç–∞–º–∏:
```dart
void main(List<String> arguments) {
  // arguments —Å–æ–¥–µ—Ä–∂–∏—Ç –∞—Ä–≥—É–º–µ–Ω—Ç—ã –∫–æ–º–∞–Ω–¥–Ω–æ–π —Å—Ç—Ä–æ–∫–∏
}
```

### –ü–∞—Ä—Å–∏–Ω–≥ –∞—Ä–≥—É–º–µ–Ω—Ç–æ–≤:
- **–ü–æ–∑–∏—Ü–∏–æ–Ω–Ω—ã–µ**: `program file.txt`
- **–ò–º–µ–Ω–æ–≤–∞–Ω–Ω—ã–µ**: `program --verbose --output=result.txt`
- **–§–ª–∞–≥–∏**: `program -v -h`

### –°—Ç—Ä—É–∫—Ç—É—Ä–∞ CLI –ø—Ä–æ–≥—Ä–∞–º–º—ã:
1. –ü–∞—Ä—Å–∏–Ω–≥ –∞—Ä–≥—É–º–µ–Ω—Ç–æ–≤
2. –í–∞–ª–∏–¥–∞—Ü–∏—è –≤—Ö–æ–¥–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö
3. –í—ã–ø–æ–ª–Ω–µ–Ω–∏–µ –∫–æ–º–∞–Ω–¥
4. –í—ã–≤–æ–¥ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤
5. –û–±—Ä–∞–±–æ—Ç–∫–∞ –æ—à–∏–±–æ–∫

### –ü–æ–ø—É–ª—è—Ä–Ω—ã–µ –ø–∞—Ç—Ç–µ—Ä–Ω—ã:
- Command pattern –¥–ª—è –∫–æ–º–∞–Ω–¥
- Builder pattern –¥–ª—è –æ–ø—Ü–∏–π
- Strategy pattern –¥–ª—è –∞–ª–≥–æ—Ä–∏—Ç–º–æ–≤

### –ü—Ä–∏–º–µ—Ä—ã –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è:
- –§–∞–π–ª–æ–≤—ã–µ –æ–ø–µ—Ä–∞—Ü–∏–∏
- –ö–æ–Ω–≤–µ—Ä—Ç–µ—Ä—ã —Ñ–æ—Ä–º–∞—Ç–æ–≤
- –£—Ç–∏–ª–∏—Ç—ã —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏
- –°–∏—Å—Ç–µ–º–Ω—ã–µ —Å–∫—Ä–∏–ø—Ç—ã
            """,
        },
        {
            'id': 'advanced-dart-patterns',
            'title': '–ü—Ä–æ–¥–≤–∏–Ω—É—Ç—ã–µ –ø–∞—Ç—Ç–µ—Ä–Ω—ã Dart',
            'description': '–ò–∑—É—á–µ–Ω–∏–µ —Å–æ–≤—Ä–µ–º–µ–Ω–Ω—ã—Ö –ø–∞—Ç—Ç–µ—Ä–Ω–æ–≤ –ø—Ä–æ–≥—Ä–∞–º–º–∏—Ä–æ–≤–∞–Ω–∏—è –≤ Dart',
            'task': '–°–æ–∑–¥–∞–π—Ç–µ —É—Ç–∏–ª–∏—Ç—É –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å —Ç–µ–∫—Å—Ç–æ–≤—ã–º–∏ —Ñ–∞–π–ª–∞–º–∏',
            'code_template': '''import 'dart:io';

// –ë–∞–∑–æ–≤—ã–π –∫–ª–∞—Å—Å –¥–ª—è –∫–æ–º–∞–Ω–¥
abstract class Command {
  String get name;
  String get description;
  void execute(List<String> args);
}

// –ö–æ–º–∞–Ω–¥–∞ –ø–æ–¥—Å—á–µ—Ç–∞ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏ —Ç–µ–∫—Å—Ç–∞
class StatsCommand extends Command {
  @override
  String get name => 'stats';
  
  @override
  String get description => '–ü–æ–∫–∞–∑–∞—Ç—å —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É —Ç–µ–∫—Å—Ç–æ–≤–æ–≥–æ —Ñ–∞–π–ª–∞';
  
  @override
  void execute(List<String> args) {
    if (args.isEmpty) {
      print('‚ùå –û—à–∏–±–∫–∞: –£–∫–∞–∂–∏—Ç–µ –ø—É—Ç—å –∫ —Ñ–∞–π–ª—É');
      print('–ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ: textutil stats <—Ñ–∞–π–ª>');
      return;
    }
    
    String filename = args[0];
    print('üìä –ê–Ω–∞–ª–∏–∑ —Ñ–∞–π–ª–∞: $filename');
    
    // –°–∏–º—É–ª—è—Ü–∏—è —á—Ç–µ–Ω–∏—è —Ñ–∞–π–ª–∞
    String content = """
Dart - —ç—Ç–æ —Å–æ–≤—Ä–µ–º–µ–Ω–Ω—ã–π —è–∑—ã–∫ –ø—Ä–æ–≥—Ä–∞–º–º–∏—Ä–æ–≤–∞–Ω–∏—è.
–û–Ω –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –º–æ–±–∏–ª—å–Ω—ã—Ö –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–π.
Flutter - —ç—Ç–æ —Ñ—Ä–µ–π–º–≤–æ—Ä–∫ –Ω–∞ Dart.
Dart –∫–æ–º–ø–∏–ª–∏—Ä—É–µ—Ç—Å—è –≤ –Ω–∞—Ç–∏–≤–Ω—ã–π –∫–æ–¥.
    """.trim();
    
    _analyzeText(content, filename);
  }
  
  void _analyzeText(String content, String filename) {
    List<String> lines = content.split('\\n');
    List<String> words = content.split(RegExp(r'\\s+'));
    words.removeWhere((word) => word.isEmpty);
    
    int characters = content.length;
    int charactersNoSpaces = content.replaceAll(RegExp(r'\\s'), '').length;
    int sentences = content.split(RegExp(r'[.!?]')).length - 1;
    
    print('\\nüìà –°–¢–ê–¢–ò–°–¢–ò–ö–ê:');
    print('–§–∞–π–ª: $filename');
    print('–°—Ç—Ä–æ–∫: ${lines.length}');
    print('–°–ª–æ–≤: ${words.length}');
    print('–°–∏–º–≤–æ–ª–æ–≤: $characters');
    print('–°–∏–º–≤–æ–ª–æ–≤ –±–µ–∑ –ø—Ä–æ–±–µ–ª–æ–≤: $charactersNoSpaces');
    print('–ü—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–π: $sentences');
    print('–°—Ä–µ–¥–Ω—è—è –¥–ª–∏–Ω–∞ —Å–ª–æ–≤–∞: ${(charactersNoSpaces / words.length).toStringAsFixed(1)} —Å–∏–º–≤–æ–ª–æ–≤');
  }
}

// –ö–æ–º–∞–Ω–¥–∞ –ø–æ–∏—Å–∫–∞ –∏ –∑–∞–º–µ–Ω—ã
class ReplaceCommand extends Command {
  @override
  String get name => 'replace';
  
  @override
  String get description => '–ù–∞–π—Ç–∏ –∏ –∑–∞–º–µ–Ω–∏—Ç—å —Ç–µ–∫—Å—Ç –≤ —Ñ–∞–π–ª–µ';
  
  @override
  void execute(List<String> args) {
    if (args.length < 3) {
      print('‚ùå –û—à–∏–±–∫–∞: –ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –∞—Ä–≥—É–º–µ–Ω—Ç–æ–≤');
      print('–ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ: textutil replace <—Ñ–∞–π–ª> <–Ω–∞–π—Ç–∏> <–∑–∞–º–µ–Ω–∏—Ç—å>');
      return;
    }
    
    String filename = args[0];
    String searchText = args[1];
    String replaceText = args[2];
    
    print('üîç –ó–∞–º–µ–Ω–∞ –≤ —Ñ–∞–π–ª–µ: $filename');
    print('–ù–∞–π—Ç–∏: "$searchText"');
    print('–ó–∞–º–µ–Ω–∏—Ç—å –Ω–∞: "$replaceText"');
    
    // –°–∏–º—É–ª—è—Ü–∏—è —Å–æ–¥–µ—Ä–∂–∏–º–æ–≥–æ —Ñ–∞–π–ª–∞
    String content = 'Dart - –æ—Ç–ª–∏—á–Ω—ã–π —è–∑—ã–∫. Dart –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –≤ Flutter. Dart –±—ã—Å—Ç—Ä—ã–π.';
    
    String newContent = content.replaceAll(searchText, replaceText);
    int replacements = searchText.allMatches(content).length;
    
    print('\\nüìù –†–ï–ó–£–õ–¨–¢–ê–¢:');
    print('–ò—Å—Ö–æ–¥–Ω—ã–π —Ç–µ–∫—Å—Ç: $content');
    print('–ù–æ–≤—ã–π —Ç–µ–∫—Å—Ç: $newContent');
    print('–ó–∞–º–µ–Ω –≤—ã–ø–æ–ª–Ω–µ–Ω–æ: $replacements');
    
    if (replacements > 0) {
      print('‚úÖ –§–∞–π–ª —É—Å–ø–µ—à–Ω–æ –æ–±–Ω–æ–≤–ª–µ–Ω');
    } else {
      print('‚ÑπÔ∏è –¢–µ–∫—Å—Ç –¥–ª—è –∑–∞–º–µ–Ω—ã –Ω–µ –Ω–∞–π–¥–µ–Ω');
    }
  }
}

// –ö–æ–º–∞–Ω–¥–∞ —Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏—è
class FormatCommand extends Command {
  @override
  String get name => 'format';
  
  @override
  String get description => '–§–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞—Ç—å —Ç–µ–∫—Å—Ç–æ–≤—ã–π —Ñ–∞–π–ª';
  
  @override
  void execute(List<String> args) {
    if (args.isEmpty) {
      print('‚ùå –û—à–∏–±–∫–∞: –£–∫–∞–∂–∏—Ç–µ –ø—É—Ç—å –∫ —Ñ–∞–π–ª—É');
      print('–ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ: textutil format <—Ñ–∞–π–ª> [--uppercase] [--lowercase]');
      return;
    }
    
    String filename = args[0];
    bool uppercase = args.contains('--uppercase');
    bool lowercase = args.contains('--lowercase');
    
    print('üé® –§–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Ñ–∞–π–ª–∞: $filename');
    
    String content = 'dart - —ç—Ç–æ —Å–æ–≤—Ä–µ–º–µ–Ω–Ω—ã–π —è–∑—ã–∫ –ø—Ä–æ–≥—Ä–∞–º–º–∏—Ä–æ–≤–∞–Ω–∏—è –æ—Ç google.';
    String formatted = content;
    
    if (uppercase) {
      formatted = formatted.toUpperCase();
      print('–ü—Ä–∏–º–µ–Ω–µ–Ω–æ: –í–ï–†–•–ù–ò–ô –†–ï–ì–ò–°–¢–†');
    } else if (lowercase) {
      formatted = formatted.toLowerCase();
      print('–ü—Ä–∏–º–µ–Ω–µ–Ω–æ: –Ω–∏–∂–Ω–∏–π —Ä–µ–≥–∏—Å—Ç—Ä');
    } else {
      // –ö–∞–ø–∏—Ç–∞–ª–∏–∑–∞—Ü–∏—è –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–π
      formatted = _capitalizeSentences(formatted);
      print('–ü—Ä–∏–º–µ–Ω–µ–Ω–æ: –ö–∞–ø–∏—Ç–∞–ª–∏–∑–∞—Ü–∏—è –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–π');
    }
    
    print('\\nüìÑ –†–ï–ó–£–õ–¨–¢–ê–¢:');
    print('–î–æ: $content');
    print('–ü–æ—Å–ª–µ: $formatted');
  }
  
  String _capitalizeSentences(String text) {
    return text.split('. ').map((sentence) {
      if (sentence.isNotEmpty) {
        return sentence[0].toUpperCase() + sentence.substring(1);
      }
      return sentence;
    }).join('. ');
  }
}

// –ì–ª–∞–≤–Ω—ã–π –∫–ª–∞—Å—Å CLI —É—Ç–∏–ª–∏—Ç—ã
class TextUtilCLI {
  final Map<String, Command> _commands = {};
  
  TextUtilCLI() {
    _registerCommand(StatsCommand());
    _registerCommand(ReplaceCommand());
    _registerCommand(FormatCommand());
  }
  
  void _registerCommand(Command command) {
    _commands[command.name] = command;
  }
  
  void run(List<String> arguments) {
    print('=== TEXT UTILITY CLI ===\\n');
    
    if (arguments.isEmpty) {
      _showHelp();
      return;
    }
    
    String commandName = arguments[0];
    List<String> commandArgs = arguments.sublist(1);
    
    if (commandName == 'help' || commandName == '--help' || commandName == '-h') {
      _showHelp();
      return;
    }
    
    Command? command = _commands[commandName];
    if (command == null) {
      print('‚ùå –ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –∫–æ–º–∞–Ω–¥–∞: $commandName');
      print('–ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ "help" –¥–ª—è —Å–ø–∏—Å–∫–∞ –∫–æ–º–∞–Ω–¥');
      return;
    }
    
    try {
      command.execute(commandArgs);
    } catch (e) {
      print('‚ùå –û—à–∏–±–∫–∞ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è –∫–æ–º–∞–Ω–¥—ã: $e');
    }
  }
  
  void _showHelp() {
    print('üìö –°–ü–†–ê–í–ö–ê:');
    print('textutil <–∫–æ–º–∞–Ω–¥–∞> [–∞—Ä–≥—É–º–µ–Ω—Ç—ã]\\n');
    print('–î–æ—Å—Ç—É–ø–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã:');
    
    _commands.forEach((name, command) {
      print('  $name - ${command.description}');
    });
    
    print('\\n–û–±—â–∏–µ –æ–ø—Ü–∏–∏:');
    print('  help, --help, -h - –ü–æ–∫–∞–∑–∞—Ç—å —ç—Ç—É —Å–ø—Ä–∞–≤–∫—É');
    
    print('\\n–ü—Ä–∏–º–µ—Ä—ã:');
    print('  textutil stats document.txt');
    print('  textutil replace file.txt "old" "new"');
    print('  textutil format text.txt --uppercase');
  }
}

void main(List<String> arguments) {
  // –°–∏–º—É–ª—è—Ü–∏—è —Ä–∞–∑–ª–∏—á–Ω—ã—Ö –≤—ã–∑–æ–≤–æ–≤
  var cli = TextUtilCLI();
  
  print('–ü—Ä–∏–º–µ—Ä 1: –°–ø—Ä–∞–≤–∫–∞');
  cli.run(['help']);
  
  print('\\n' + '='*50 + '\\n');
  print('–ü—Ä–∏–º–µ—Ä 2: –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ —Ñ–∞–π–ª–∞');
  cli.run(['stats', 'document.txt']);
  
  print('\\n' + '='*50 + '\\n');
  print('–ü—Ä–∏–º–µ—Ä 3: –ó–∞–º–µ–Ω–∞ —Ç–µ–∫—Å—Ç–∞');
  cli.run(['replace', 'file.txt', 'Dart', 'Flutter']);
  
  print('\\n' + '='*50 + '\\n');
  print('–ü—Ä–∏–º–µ—Ä 4: –§–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ');
  cli.run(['format', 'text.txt']);
}''',
            'expected_output': '–ü—Ä–∏–º–µ—Ä 1: –°–ø—Ä–∞–≤–∫–∞\n=== TEXT UTILITY CLI ===\n\nüìö –°–ü–†–ê–í–ö–ê:\ntextutil <–∫–æ–º–∞–Ω–¥–∞> [–∞—Ä–≥—É–º–µ–Ω—Ç—ã]\n\n–î–æ—Å—Ç—É–ø–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã:\n  stats - –ü–æ–∫–∞–∑–∞—Ç—å —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É —Ç–µ–∫—Å—Ç–æ–≤–æ–≥–æ —Ñ–∞–π–ª–∞\n  replace - –ù–∞–π—Ç–∏ –∏ –∑–∞–º–µ–Ω–∏—Ç—å —Ç–µ–∫—Å—Ç –≤ —Ñ–∞–π–ª–µ\n  format - –§–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞—Ç—å —Ç–µ–∫—Å—Ç–æ–≤—ã–π —Ñ–∞–π–ª\n\n–û–±—â–∏–µ –æ–ø—Ü–∏–∏:\n  help, --help, -h - –ü–æ–∫–∞–∑–∞—Ç—å —ç—Ç—É —Å–ø—Ä–∞–≤–∫—É\n\n–ü—Ä–∏–º–µ—Ä—ã:\n  textutil stats document.txt\n  textutil replace file.txt "old" "new"\n  textutil format text.txt --uppercase\n\n==================================================\n\n–ü—Ä–∏–º–µ—Ä 2: –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ —Ñ–∞–π–ª–∞\n=== TEXT UTILITY CLI ===\n\nüìä –ê–Ω–∞–ª–∏–∑ —Ñ–∞–π–ª–∞: document.txt\n\nüìà –°–¢–ê–¢–ò–°–¢–ò–ö–ê:\n–§–∞–π–ª: document.txt\n–°—Ç—Ä–æ–∫: 4\n–°–ª–æ–≤: 16\n–°–∏–º–≤–æ–ª–æ–≤: 137\n–°–∏–º–≤–æ–ª–æ–≤ –±–µ–∑ –ø—Ä–æ–±–µ–ª–æ–≤: 122\n–ü—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–π: 4\n–°—Ä–µ–¥–Ω—è—è –¥–ª–∏–Ω–∞ —Å–ª–æ–≤–∞: 7.6 —Å–∏–º–≤–æ–ª–æ–≤\n\n==================================================\n\n–ü—Ä–∏–º–µ—Ä 3: –ó–∞–º–µ–Ω–∞ —Ç–µ–∫—Å—Ç–∞\n=== TEXT UTILITY CLI ===\n\nüîç –ó–∞–º–µ–Ω–∞ –≤ —Ñ–∞–π–ª–µ: file.txt\n–ù–∞–π—Ç–∏: "Dart"\n–ó–∞–º–µ–Ω–∏—Ç—å –Ω–∞: "Flutter"\n\nüìù –†–ï–ó–£–õ–¨–¢–ê–¢:\n–ò—Å—Ö–æ–¥–Ω—ã–π —Ç–µ–∫—Å—Ç: Dart - –æ—Ç–ª–∏—á–Ω—ã–π —è–∑—ã–∫. Dart –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –≤ Flutter. Dart –±—ã—Å—Ç—Ä—ã–π.\n–ù–æ–≤—ã–π —Ç–µ–∫—Å—Ç: Flutter - –æ—Ç–ª–∏—á–Ω—ã–π —è–∑—ã–∫. Flutter –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –≤ Flutter. Flutter –±—ã—Å—Ç—Ä—ã–π.\n–ó–∞–º–µ–Ω –≤—ã–ø–æ–ª–Ω–µ–Ω–æ: 3\n‚úÖ –§–∞–π–ª —É—Å–ø–µ—à–Ω–æ –æ–±–Ω–æ–≤–ª–µ–Ω\n\n==================================================\n\n–ü—Ä–∏–º–µ—Ä 4: –§–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ\n=== TEXT UTILITY CLI ===\n\nüé® –§–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Ñ–∞–π–ª–∞: text.txt\n–ü—Ä–∏–º–µ–Ω–µ–Ω–æ: –ö–∞–ø–∏—Ç–∞–ª–∏–∑–∞—Ü–∏—è –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–π\n\nüìÑ –†–ï–ó–£–õ–¨–¢–ê–¢:\n–î–æ: dart - —ç—Ç–æ —Å–æ–≤—Ä–µ–º–µ–Ω–Ω—ã–π —è–∑—ã–∫ –ø—Ä–æ–≥—Ä–∞–º–º–∏—Ä–æ–≤–∞–Ω–∏—è –æ—Ç google.\n–ü–æ—Å–ª–µ: Dart - —ç—Ç–æ —Å–æ–≤—Ä–µ–º–µ–Ω–Ω—ã–π —è–∑—ã–∫ –ø—Ä–æ–≥—Ä–∞–º–º–∏—Ä–æ–≤–∞–Ω–∏—è –æ—Ç google.',
            'hints': ['main(List<String> arguments) –ø–æ–ª—É—á–∞–µ—Ç –∞—Ä–≥—É–º–µ–Ω—Ç—ã –∫–æ–º–∞–Ω–¥–Ω–æ–π —Å—Ç—Ä–æ–∫–∏', 'Command pattern –ø–æ–º–æ–≥–∞–µ—Ç –æ—Ä–≥–∞–Ω–∏–∑–æ–≤–∞—Ç—å –∫–æ–º–∞–Ω–¥—ã', 'RegExp –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å —Ä–µ–≥—É–ª—è—Ä–Ω—ã–º–∏ –≤—ã—Ä–∞–∂–µ–Ω–∏—è–º–∏']
        },
        {
            'id': 24,
            'title': '–§–∞–π–ª–æ–≤–∞—è —Å–∏—Å—Ç–µ–º–∞ –∏ I/O',
            'category': '–†–µ–∞–ª—å–Ω—ã–µ –ø—Ä–æ–µ–∫—Ç—ã',
            'difficulty': '–ü—Ä–æ–¥–≤–∏–Ω—É—Ç—ã–π',
            'description': '–†–∞–±–æ—Ç–∞ —Å —Ñ–∞–π–ª–∞–º–∏ –∏ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—è–º–∏',
            'theory': """
## –§–∞–π–ª–æ–≤–∞—è —Å–∏—Å—Ç–µ–º–∞ –≤ Dart

Dart –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–ª—è–µ—Ç –º–æ—â–Ω—ã–µ –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç—ã –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å —Ñ–∞–π–ª–∞–º–∏.

### –û—Å–Ω–æ–≤–Ω—ã–µ –∫–ª–∞—Å—Å—ã:
- **File** - —Ä–∞–±–æ—Ç–∞ —Å —Ñ–∞–π–ª–∞–º–∏
- **Directory** - —Ä–∞–±–æ—Ç–∞ —Å –ø–∞–ø–∫–∞–º–∏
- **Path** - —Ä–∞–±–æ—Ç–∞ —Å –ø—É—Ç—è–º–∏
- **FileSystemEntity** - –±–∞–∑–æ–≤—ã–π –∫–ª–∞—Å—Å

### –û–ø–µ—Ä–∞—Ü–∏–∏ —Å —Ñ–∞–π–ª–∞–º–∏:
```dart
// –ß—Ç–µ–Ω–∏–µ —Ñ–∞–π–ª–∞
String content = await File('file.txt').readAsString();

// –ó–∞–ø–∏—Å—å –≤ —Ñ–∞–π–ª
await File('output.txt').writeAsString(content);

// –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—É—â–µ—Å—Ç–≤–æ–≤–∞–Ω–∏—è
bool exists = await File('file.txt').exists();
```

### –ê—Å–∏–Ω—Ö—Ä–æ–Ω–Ω—ã–µ –æ–ø–µ—Ä–∞—Ü–∏–∏:
- –í—Å–µ —Ñ–∞–π–ª–æ–≤—ã–µ –æ–ø–µ—Ä–∞—Ü–∏–∏ –∞—Å–∏–Ω—Ö—Ä–æ–Ω–Ω—ã–µ
- –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ async/await
- –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–π—Ç–µ –∏—Å–∫–ª—é—á–µ–Ω–∏—è

### –†–∞–±–æ—Ç–∞ —Å –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—è–º–∏:
```dart
// –°–æ–∑–¥–∞–Ω–∏–µ –ø–∞–ø–∫–∏
await Directory('new_folder').create();

// –°–ø–∏—Å–æ–∫ —Ñ–∞–π–ª–æ–≤
await for (var entity in Directory('.').list()) {
  print(entity.path);
}
```

### –ü—Ä–∞–∫—Ç–∏—á–µ—Å–∫–∏–µ –ø—Ä–∏–º–µ–Ω–µ–Ω–∏—è:
- –õ–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ
- –ö–µ—à–∏—Ä–æ–≤–∞–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö
- –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–æ–Ω–Ω—ã–µ —Ñ–∞–π–ª—ã
- –†–µ–∑–µ—Ä–≤–Ω–æ–µ –∫–æ–ø–∏—Ä–æ–≤–∞–Ω–∏–µ
            """,
            'task': '–°–æ–∑–¥–∞–π—Ç–µ —Ñ–∞–π–ª–æ–≤—ã–π –º–µ–Ω–µ–¥–∂–µ—Ä —Å –æ—Å–Ω–æ–≤–Ω—ã–º–∏ –æ–ø–µ—Ä–∞—Ü–∏—è–º–∏',
            'code_template': """import 'dart:io';
import 'dart:convert';

// –ö–ª–∞—Å—Å –¥–ª—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ —Ñ–∞–π–ª–µ
class FileInfo {
  final String name;
  final String path;
  final int size;
  final DateTime modified;
  final bool isDirectory;
  
  FileInfo({
    required this.name,
    required this.path,
    required this.size,
    required this.modified,
    required this.isDirectory,
  });
  
  String get sizeFormatted {
    if (size < 1024) return '$size B';
    if (size < 1024 * 1024) return '${(size / 1024).toStringAsFixed(1)} KB';
    return '${(size / (1024 * 1024)).toStringAsFixed(1)} MB';
  }
  
  String get typeIcon => isDirectory ? 'üìÅ' : 'üìÑ';
  
  @override
  String toString() {
    String modifiedStr = '${modified.day}.${modified.month}.${modified.year}';
    return '$typeIcon $name (${isDirectory ? '–ø–∞–ø–∫–∞' : sizeFormatted}) - $modifiedStr';
  }
}

// –§–∞–π–ª–æ–≤—ã–π –º–µ–Ω–µ–¥–∂–µ—Ä
class FileManager {
  String currentPath = '.';
  
  // –ü–æ–ª—É—á–∏—Ç—å —Å–ø–∏—Å–æ–∫ —Ñ–∞–π–ª–æ–≤ –≤ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏
  Future<List<FileInfo>> listDirectory([String? path]) async {
    path ??= currentPath;
    print('üìÇ –°–æ–¥–µ—Ä–∂–∏–º–æ–µ –ø–∞–ø–∫–∏: $path');
    
    List<FileInfo> files = [];
    
    try {
      // –°–∏–º—É–ª—è—Ü–∏—è —Å–ø–∏—Å–∫–∞ —Ñ–∞–π–ª–æ–≤
      await Future.delayed(Duration(milliseconds: 500));
      
      // –°–æ–∑–¥–∞–µ–º –¥–µ–º–æ-–¥–∞–Ω–Ω—ã–µ
      files = [
        FileInfo(
          name: 'documents',
          path: '$path/documents',
          size: 0,
          modified: DateTime.now().subtract(Duration(days: 5)),
          isDirectory: true,
        ),
        FileInfo(
          name: 'README.md',
          path: '$path/README.md',
          size: 2048,
          modified: DateTime.now().subtract(Duration(days: 1)),
          isDirectory: false,
        ),
        FileInfo(
          name: 'config.json',
          path: '$path/config.json',
          size: 512,
""",
            'hints': ['File –∏ Directory - –æ—Å–Ω–æ–≤–Ω—ã–µ –∫–ª–∞—Å—Å—ã –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å —Ñ–∞–π–ª–∞–º–∏', '–í—Å–µ —Ñ–∞–π–ª–æ–≤—ã–µ –æ–ø–µ—Ä–∞—Ü–∏–∏ –∞—Å–∏–Ω—Ö—Ä–æ–Ω–Ω—ã–µ'],
        },
        {
            'id': 25,
            'title': 'Unit —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ',
            'category': '–†–µ–∞–ª—å–Ω—ã–µ –ø—Ä–æ–µ–∫—Ç—ã',
            'difficulty': '–ü—Ä–æ–¥–≤–∏–Ω—É—Ç—ã–π',
            'description': '–ù–∞–ø–∏—Å–∞–Ω–∏–µ –∏ –∑–∞–ø—É—Å–∫ –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏—Ö —Ç–µ—Å—Ç–æ–≤',
            'theory': """
## Unit —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –≤ Dart

–¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ - –≤–∞–∂–Ω–∞—è —á–∞—Å—Ç—å —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏ –∫–∞—á–µ—Å—Ç–≤–µ–Ω–Ω–æ–≥–æ –ü–û.

### –§—Ä–µ–π–º–≤–æ—Ä–∫ test:
```dart
import 'package:test/test.dart';

void main() {
  test('–æ–ø–∏—Å–∞–Ω–∏–µ —Ç–µ—Å—Ç–∞', () {
    expect(actual, expected);
  });
}
```

### –¢–∏–ø—ã —Ç–µ—Å—Ç–æ–≤:
- **Unit tests** - —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –æ—Ç–¥–µ–ª—å–Ω—ã—Ö —Ñ—É–Ω–∫—Ü–∏–π
- **Widget tests** - —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ UI (Flutter)
- **Integration tests** - —Å–∫–≤–æ–∑–Ω–æ–µ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ

### –û—Å–Ω–æ–≤–Ω—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏:
- `test()` - –æ–¥–∏–Ω–æ—á–Ω—ã–π —Ç–µ—Å—Ç
- `group()` - –≥—Ä—É–ø–ø–∏—Ä–æ–≤–∫–∞ —Ç–µ—Å—Ç–æ–≤
- `setUp()` - –ø–æ–¥–≥–æ—Ç–æ–≤–∫–∞ –ø–µ—Ä–µ–¥ —Ç–µ—Å—Ç–∞–º–∏
- `tearDown()` - –æ—á–∏—Å—Ç–∫–∞ –ø–æ—Å–ª–µ —Ç–µ—Å—Ç–æ–≤

### –ê—Å—Å–µ—Ä—Ç—ã (expect):
```dart
expect(actual, equals(expected));
expect(value, isTrue);
expect(list, contains(item));
expect(() => throw Error(), throwsA(isA<Error>()));
```

### –ú–æ–∫–∏—Ä–æ–≤–∞–Ω–∏–µ:
- –°–æ–∑–¥–∞–Ω–∏–µ —Ñ–µ–π–∫–æ–≤—ã—Ö –æ–±—ä–µ–∫—Ç–æ–≤
- –ö–æ–Ω—Ç—Ä–æ–ª—å –ø–æ–≤–µ–¥–µ–Ω–∏—è –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π
- –ò–∑–æ–ª—è—Ü–∏—è —Ç–µ—Å—Ç–∏—Ä—É–µ–º–æ–≥–æ –∫–æ–¥–∞

### Best practices:
- –û–¥–∏–Ω —Ç–µ—Å—Ç = –æ–¥–Ω–∞ –ø—Ä–æ–≤–µ—Ä–∫–∞
- –û–ø–∏—Å–∞—Ç–µ–ª—å–Ω—ã–µ –∏–º–µ–Ω–∞ —Ç–µ—Å—Ç–æ–≤
- –ù–µ–∑–∞–≤–∏—Å–∏–º—ã–µ —Ç–µ—Å—Ç—ã
- –ë—ã—Å—Ç—Ä—ã–µ —Ç–µ—Å—Ç—ã
            """,
            'task': '–°–æ–∑–¥–∞–π—Ç–µ –Ω–∞–±–æ—Ä unit —Ç–µ—Å—Ç–æ–≤ –¥–ª—è –∫–∞–ª—å–∫—É–ª—è—Ç–æ—Ä–∞',
            'code_template': """// –ö–ª–∞—Å—Å –∫–∞–ª—å–∫—É–ª—è—Ç–æ—Ä–∞ –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è
class Calculator {
  double add(double a, double b) => a + b;
  
  double subtract(double a, double b) => a - b;
  
  double multiply(double a, double b) => a * b;
  
  double divide(double a, double b) {
    if (b == 0) {
      throw ArgumentError('Division by zero is not allowed');
    }
    return a / b;
  }
  
  double power(double base, int exponent) {
    if (exponent < 0) {
      throw ArgumentError('Negative exponents not supported');
    }
    double result = 1;
    for (int i = 0; i < exponent; i++) {
      result *= base;
    }
    return result;
  }
  
  double sqrt(double value) {
    if (value < 0) {
      throw ArgumentError('Square root of negative number');
    }
    // –ü—Ä–æ—Å—Ç–∞—è —Ä–µ–∞–ª–∏–∑–∞—Ü–∏—è —á–µ—Ä–µ–∑ –ø—Ä–∏–±–ª–∏–∂–µ–Ω–∏–µ
    if (value == 0) return 0;
    double x = value;
    double prev;
    do {
      prev = x;
      x = (x + value / x) / 2;
    } while ((x - prev).abs() > 0.0001);
    return x;
  }
  
  bool isEven(int number) => number % 2 == 0;
  
  bool isPrime(int number) {
    if (number < 2) return false;
    for (int i = 2; i <= number ~/ 2; i++) {
      if (number % i == 0) return false;
    }
    return true;
  }
  
  List<int> fibonacci(int count) {
    if (count <= 0) return [];
    if (count == 1) return [0];
    if (count == 2) return [0, 1];
    
    List<int> result = [0, 1];
    for (int i = 2; i < count; i++) {
      result.add(result[i - 1] + result[i - 2]);
    }
    return result;
  }
}

// –ü—Ä–æ—Å—Ç–∞—è —Ä–µ–∞–ª–∏–∑–∞—Ü–∏—è —Ç–µ—Å—Ç–æ–≤–æ–≥–æ —Ñ—Ä–µ–π–º–≤–æ—Ä–∫–∞
class TestFramework {
  static int _testCount = 0;
  static int _passCount = 0;
  static int _failCount = 0;
  static String _currentGroup = '';
  
  static void group(String description, void Function() tests) {
    print('\\nüìÇ $description');
    _currentGroup = description;
    tests();
  }
  
  static void test(String description, void Function() testFunction) {
    _testCount++;
    try {
      testFunction();
      _passCount++;
      print('  ‚úÖ $description');
    } catch (e) {
      _failCount++;
      print('  ‚ùå $description');
      print('     –û—à–∏–±–∫–∞: $e');
    }
  }
  
  static void expect<T>(T actual, T expected) {
    if (actual != expected) {
      throw Exception('Expected: $expected, but got: $actual');
    }
  }
  
  static void expectThrows(void Function() function, Type exceptionType) {
    try {
      function();
      throw Exception('Expected exception of type $exceptionType, but no exception was thrown');
    } catch (e) {
      if (e.runtimeType.toString() != exceptionType.toString() && 
          !e.toString().contains(exceptionType.toString())) {
        throw Exception('Expected exception of type $exceptionType, but got: ${e.runtimeType}');
      }
    }
  }
  
  static void expectTrue(bool actual) {
    if (!actual) {
      throw Exception('Expected: true, but got: false');
    }
  }
  
  static void expectFalse(bool actual) {
    if (actual) {
      throw Exception('Expected: false, but got: true');
    }
  }
  
  static void expectListEquals<T>(List<T> actual, List<T> expected) {
    if (actual.length != expected.length) {
      throw Exception('List lengths differ. Expected: ${expected.length}, got: ${actual.length}');
    }
    for (int i = 0; i < actual.length; i++) {
      if (actual[i] != expected[i]) {
        throw Exception('Lists differ at index $i. Expected: ${expected[i]}, got: ${actual[i]}');
      }
    }
  }
  
  static void expectApproximately(double actual, double expected, double tolerance) {
    if ((actual - expected).abs() > tolerance) {
      throw Exception('Expected: $expected ¬± $tolerance, but got: $actual');
    }
  }
  
  static void showResults() {
    print('\\n' + '='*50);
    print('üìä –†–ï–ó–£–õ–¨–¢–ê–¢–´ –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–Ø:');
    print('–í—Å–µ–≥–æ —Ç–µ—Å—Ç–æ–≤: $_testCount');
    print('‚úÖ –ü—Ä–æ—à–ª–∏: $_passCount');
    print('‚ùå –ü—Ä–æ–≤–∞–ª–∏–ª–∏—Å—å: $_failCount');
    print('–£—Å–ø–µ—à–Ω–æ—Å—Ç—å: ${(_passCount / _testCount * 100).toStringAsFixed(1)}%');
    
    if (_failCount == 0) {
      print('\\nüéâ –í—Å–µ —Ç–µ—Å—Ç—ã –ø—Ä–æ—à–ª–∏ —É—Å–ø–µ—à–Ω–æ!');
    } else {
      print('\\n‚ö†Ô∏è –ù–µ–∫–æ—Ç–æ—Ä—ã–µ —Ç–µ—Å—Ç—ã –ø—Ä–æ–≤–∞–ª–∏–ª–∏—Å—å. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –∫–æ–¥.');
    }
  }
}

void main() {
  print('=== UNIT –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–ï –ö–ê–õ–¨–ö–£–õ–Ø–¢–û–†–ê ===');
  
  var calculator = Calculator();
  
  // –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –±–∞–∑–æ–≤—ã—Ö –æ–ø–µ—Ä–∞—Ü–∏–π
  TestFramework.group('–ë–∞–∑–æ–≤—ã–µ –∞—Ä–∏—Ñ–º–µ—Ç–∏—á–µ—Å–∫–∏–µ –æ–ø–µ—Ä–∞—Ü–∏–∏', () {
    TestFramework.test('—Å–ª–æ–∂–µ–Ω–∏–µ –ø–æ–ª–æ–∂–∏—Ç–µ–ª—å–Ω—ã—Ö —á–∏—Å–µ–ª', () {
      TestFramework.expect(calculator.add(2, 3), 5);
    });
    
    TestFramework.test('—Å–ª–æ–∂–µ–Ω–∏–µ —Å –Ω—É–ª–µ–º', () {
      TestFramework.expect(calculator.add(5, 0), 5);
    });
    
    TestFramework.test('—Å–ª–æ–∂–µ–Ω–∏–µ –æ—Ç—Ä–∏—Ü–∞—Ç–µ–ª—å–Ω—ã—Ö —á–∏—Å–µ–ª', () {
      TestFramework.expect(calculator.add(-2, -3), -5);
    });
    
    TestFramework.test('–≤—ã—á–∏—Ç–∞–Ω–∏–µ', () {
      TestFramework.expect(calculator.subtract(10, 4), 6);
    });
    
    TestFramework.test('—É–º–Ω–æ–∂–µ–Ω–∏–µ', () {
      TestFramework.expect(calculator.multiply(6, 7), 42);
    });
    
    TestFramework.test('–¥–µ–ª–µ–Ω–∏–µ', () {
      TestFramework.expectApproximately(calculator.divide(15, 3), 5, 0.001);
    });
  });
  
  // –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∏—Å–∫–ª—é—á–µ–Ω–∏–π
  TestFramework.group('–û–±—Ä–∞–±–æ—Ç–∫–∞ –æ—à–∏–±–æ–∫', () {
    TestFramework.test('–¥–µ–ª–µ–Ω–∏–µ –Ω–∞ –Ω–æ–ª—å', () {
      TestFramework.expectThrows(
        () => calculator.divide(10, 0),
        ArgumentError
      );
    });
    
    TestFramework.test('–∫–≤–∞–¥—Ä–∞—Ç–Ω—ã–π –∫–æ—Ä–µ–Ω—å –∏–∑ –æ—Ç—Ä–∏—Ü–∞—Ç–µ–ª—å–Ω–æ–≥–æ —á–∏—Å–ª–∞', () {
      TestFramework.expectThrows(
        () => calculator.sqrt(-4),
        ArgumentError
      );
    });
    
    TestFramework.test('–æ—Ç—Ä–∏—Ü–∞—Ç–µ–ª—å–Ω–∞—è —Å—Ç–µ–ø–µ–Ω—å', () {
      TestFramework.expectThrows(
        () => calculator.power(2, -1),
        ArgumentError
      );
    });
  });
  
  // –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Å–ª–æ–∂–Ω—ã—Ö —Ñ—É–Ω–∫—Ü–∏–π
  TestFramework.group('–ü—Ä–æ–¥–≤–∏–Ω—É—Ç—ã–µ –æ–ø–µ—Ä–∞—Ü–∏–∏', () {
    TestFramework.test('–≤–æ–∑–≤–µ–¥–µ–Ω–∏–µ –≤ —Å—Ç–µ–ø–µ–Ω—å', () {
      TestFramework.expect(calculator.power(2, 3), 8);
      TestFramework.expect(calculator.power(5, 0), 1);
      TestFramework.expect(calculator.power(10, 2), 100);
    });
    
    TestFramework.test('–∫–≤–∞–¥—Ä–∞—Ç–Ω—ã–π –∫–æ—Ä–µ–Ω—å', () {
      TestFramework.expectApproximately(calculator.sqrt(16), 4, 0.001);
      TestFramework.expectApproximately(calculator.sqrt(25), 5, 0.001);
      TestFramework.expect(calculator.sqrt(0), 0);
    });
    
    TestFramework.test('–ø—Ä–æ–≤–µ—Ä–∫–∞ —á–µ—Ç–Ω–æ—Å—Ç–∏', () {
      TestFramework.expectTrue(calculator.isEven(4));
      TestFramework.expectFalse(calculator.isEven(5));
      TestFramework.expectTrue(calculator.isEven(0));
    });
    
    TestFramework.test('–ø—Ä–æ–≤–µ—Ä–∫–∞ –ø—Ä–æ—Å—Ç—ã—Ö —á–∏—Å–µ–ª', () {
      TestFramework.expectTrue(calculator.isPrime(2));
      TestFramework.expectTrue(calculator.isPrime(13));
      TestFramework.expectFalse(calculator.isPrime(4));
      TestFramework.expectFalse(calculator.isPrime(1));
    });
    
    TestFramework.test('–ø–æ—Å–ª–µ–¥–æ–≤–∞—Ç–µ–ª—å–Ω–æ—Å—Ç—å –§–∏–±–æ–Ω–∞—á—á–∏', () {
      TestFramework.expectListEquals(calculator.fibonacci(0), <int>[]);
      TestFramework.expectListEquals(calculator.fibonacci(1), [0]);
      TestFramework.expectListEquals(calculator.fibonacci(5), [0, 1, 1, 2, 3]);
      TestFramework.expectListEquals(calculator.fibonacci(8), [0, 1, 1, 2, 3, 5, 8, 13]);
    });
  });
  
  TestFramework.showResults();
}""",
            'expected_output': '=== UNIT –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–ï –ö–ê–õ–¨–ö–£–õ–Ø–¢–û–†–ê ===\n\nüìÇ –ë–∞–∑–æ–≤—ã–µ –∞—Ä–∏—Ñ–º–µ—Ç–∏—á–µ—Å–∫–∏–µ –æ–ø–µ—Ä–∞—Ü–∏–∏\n  ‚úÖ —Å–ª–æ–∂–µ–Ω–∏–µ –ø–æ–ª–æ–∂–∏—Ç–µ–ª—å–Ω—ã—Ö —á–∏—Å–µ–ª\n  ‚úÖ —Å–ª–æ–∂–µ–Ω–∏–µ —Å –Ω—É–ª–µ–º\n  ‚úÖ —Å–ª–æ–∂–µ–Ω–∏–µ –æ—Ç—Ä–∏—Ü–∞—Ç–µ–ª—å–Ω—ã—Ö —á–∏—Å–µ–ª\n  ‚úÖ –≤—ã—á–∏—Ç–∞–Ω–∏–µ\n  ‚úÖ —É–º–Ω–æ–∂–µ–Ω–∏–µ\n  ‚úÖ –¥–µ–ª–µ–Ω–∏–µ\n\nüìÇ –û–±—Ä–∞–±–æ—Ç–∫–∞ –æ—à–∏–±–æ–∫\n  ‚úÖ –¥–µ–ª–µ–Ω–∏–µ –Ω–∞ –Ω–æ–ª—å\n  ‚úÖ –∫–≤–∞–¥—Ä–∞—Ç–Ω—ã–π –∫–æ—Ä–µ–Ω—å –∏–∑ –æ—Ç—Ä–∏—Ü–∞—Ç–µ–ª—å–Ω–æ–≥–æ —á–∏—Å–ª–∞\n  ‚úÖ –æ—Ç—Ä–∏—Ü–∞—Ç–µ–ª—å–Ω–∞—è —Å—Ç–µ–ø–µ–Ω—å\n\nüìÇ –ü—Ä–æ–¥–≤–∏–Ω—É—Ç—ã–µ –æ–ø–µ—Ä–∞—Ü–∏–∏\n  ‚úÖ –≤–æ–∑–≤–µ–¥–µ–Ω–∏–µ –≤ —Å—Ç–µ–ø–µ–Ω—å\n  ‚úÖ –∫–≤–∞–¥—Ä–∞—Ç–Ω—ã–π –∫–æ—Ä–µ–Ω—å\n  ‚úÖ –ø—Ä–æ–≤–µ—Ä–∫–∞ —á–µ—Ç–Ω–æ—Å—Ç–∏\n  ‚úÖ –ø—Ä–æ–≤–µ—Ä–∫–∞ –ø—Ä–æ—Å—Ç—ã—Ö —á–∏—Å–µ–ª\n  ‚úÖ –ø–æ—Å–ª–µ–¥–æ–≤–∞—Ç–µ–ª—å–Ω–æ—Å—Ç—å –§–∏–±–æ–Ω–∞—á—á–∏\n\n==================================================\nüìä –†–ï–ó–£–õ–¨–¢–ê–¢–´ –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–Ø:\n–í—Å–µ–≥–æ —Ç–µ—Å—Ç–æ–≤: 15\n‚úÖ –ü—Ä–æ—à–ª–∏: 15\n‚ùå –ü—Ä–æ–≤–∞–ª–∏–ª–∏—Å—å: 0\n–£—Å–ø–µ—à–Ω–æ—Å—Ç—å: 100.0%\n\nüéâ –í—Å–µ —Ç–µ—Å—Ç—ã –ø—Ä–æ—à–ª–∏ —É—Å–ø–µ—à–Ω–æ!',
            'hints': ['expect() –ø—Ä–æ–≤–µ—Ä—è–µ—Ç —Ä–∞–≤–µ–Ω—Å—Ç–≤–æ –∑–Ω–∞—á–µ–Ω–∏–π', 'expectThrows() –ø—Ä–æ–≤–µ—Ä—è–µ—Ç —á—Ç–æ —Ñ—É–Ω–∫—Ü–∏—è –≤—ã–±—Ä–∞—Å—ã–≤–∞–µ—Ç –∏—Å–∫–ª—é—á–µ–Ω–∏–µ', 'group() –ø–æ–º–æ–≥–∞–µ—Ç –æ—Ä–≥–∞–Ω–∏–∑–æ–≤–∞—Ç—å —Ç–µ—Å—Ç—ã –ø–æ –∫–∞—Ç–µ–≥–æ—Ä–∏—è–º']
        },
        
        # Block 6: Flutter Preparation (Lessons 26-30)
        {
            'id': 26,
            'title': '–í–≤–µ–¥–µ–Ω–∏–µ –≤ Flutter',
            'category': 'Flutter –ø–æ–¥–≥–æ—Ç–æ–≤–∫–∞',
            'difficulty': '–ù–∞—á–∞–ª—å–Ω—ã–π',
            'description': '–û—Å–Ω–æ–≤—ã —Ñ—Ä–µ–π–º–≤–æ—Ä–∫–∞ Flutter –∏ –µ–≥–æ –∞—Ä—Ö–∏—Ç–µ–∫—Ç—É—Ä—ã',
            'theory': """
## –í–≤–µ–¥–µ–Ω–∏–µ –≤ Flutter

Flutter - —ç—Ç–æ —Ñ—Ä–µ–π–º–≤–æ—Ä–∫ –æ—Ç Google –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –∫—Ä–æ—Å—Å–ø–ª–∞—Ç—Ñ–æ—Ä–º–µ–Ω–Ω—ã—Ö –º–æ–±–∏–ª—å–Ω—ã—Ö –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–π —Å –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ–º —è–∑—ã–∫–∞ Dart.

### –ö–ª—é—á–µ–≤—ã–µ –æ—Å–æ–±–µ–Ω–Ω–æ—Å—Ç–∏:
- **–û–¥–∏–Ω –∫–æ–¥** - —Ä–∞–±–æ—Ç–∞–µ—Ç –Ω–∞ iOS –∏ Android
- **–ì–æ—Ä—è—á–∞—è –ø–µ—Ä–µ–∑–∞–≥—Ä—É–∑–∫–∞** - –º–≥–Ω–æ–≤–µ–Ω–Ω–æ–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ UI
- **–í–∏–¥–∂–µ—Ç—ã** - –≤—Å–µ —ç–ª–µ–º–µ–Ω—Ç—ã –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–∞
- **–í—ã—Å–æ–∫–∞—è –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å** - –∫–æ–º–ø–∏–ª—è—Ü–∏—è –≤ –Ω–∞—Ç–∏–≤–Ω—ã–π –∫–æ–¥

### –û—Å–Ω–æ–≤–Ω—ã–µ –∫–æ–Ω—Ü–µ–ø—Ü–∏–∏:
- **Widget** - –±–∞–∑–æ–≤—ã–π —ç–ª–µ–º–µ–Ω—Ç UI
- **StatelessWidget** - –Ω–µ–∏–∑–º–µ–Ω—è–µ–º—ã–π –≤–∏–¥–∂–µ—Ç
- **StatefulWidget** - –≤–∏–¥–∂–µ—Ç —Å —Å–æ—Å—Ç–æ—è–Ω–∏–µ–º
- **BuildContext** - –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –ø–æ–∑–∏—Ü–∏–∏ –≤–∏–¥–∂–µ—Ç–∞ –≤ –¥–µ—Ä–µ–≤–µ

### –°—Ç—Ä—É–∫—Ç—É—Ä–∞ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è:
```dart
void main() {
  runApp(MyApp());
}

class MyApp extends StatelessWidget {
  @override
  Widget build(BuildContext context) {
    return MaterialApp(
      home: HomePage(),
    );
  }
}
```
            """,
            'task': '–°–æ–∑–¥–∞–π—Ç–µ —Å—Ç—Ä—É–∫—Ç—É—Ä—É –ø—Ä–æ—Å—Ç–æ–≥–æ Flutter –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è —Å –≥–ª–∞–≤–Ω–æ–π —Å—Ç—Ä–∞–Ω–∏—Ü–µ–π –∏ –≤–∏–¥–∂–µ—Ç–æ–º –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏—è.',
            'code_template': """// –ì–ª–∞–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
void main() {
  // TODO: –ó–∞–ø—É—Å—Ç–∏—Ç—å Flutter –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ
  print('Flutter –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –∑–∞–ø—É—Å–∫–∞–µ—Ç—Å—è...');
  runApp();
}

// –ö–æ—Ä–Ω–µ–≤–æ–π –≤–∏–¥–∂–µ—Ç –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
class MyApp {
  // TODO: –°–æ–∑–¥–∞—Ç—å StatelessWidget
  String buildApp() {
    return 'MaterialApp —Å–æ–∑–¥–∞–Ω';
  }
}

// –ì–ª–∞–≤–Ω–∞—è —Å—Ç—Ä–∞–Ω–∏—Ü–∞
class HomePage {
  // TODO: –°–æ–∑–¥–∞—Ç—å –≤–∏–¥–∂–µ—Ç –¥–ª—è –¥–æ–º–∞—à–Ω–µ–π —Å—Ç—Ä–∞–Ω–∏—Ü—ã
  String buildHomePage() {
    return '–ì–ª–∞–≤–Ω–∞—è —Å—Ç—Ä–∞–Ω–∏—Ü–∞ —Å–æ–∑–¥–∞–Ω–∞';
  }
}

// –í–∏–¥–∂–µ—Ç –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏—è
class WelcomeWidget {
  String name;
  
  WelcomeWidget(this.name);
  
  // TODO: –°–æ–∑–¥–∞—Ç—å –≤–∏–¥–∂–µ—Ç –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏—è
  String buildWelcome() {
    return '–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å, $name!';
  }
}

// –°–∏–º—É–ª—è—Ü–∏—è –∑–∞–ø—É—Å–∫–∞ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
void runApp() {
  print('–°–æ–∑–¥–∞–Ω–∏–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è...');
  
  MyApp app = MyApp();
  print(app.buildApp());
  
  HomePage home = HomePage();
  print(home.buildHomePage());
  
  WelcomeWidget welcome = WelcomeWidget('Flutter Developer');
  print(welcome.buildWelcome());
  
  print('Flutter –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –≥–æ—Ç–æ–≤–æ!');
}""",
            'expected_output': 'Flutter –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –∑–∞–ø—É—Å–∫–∞–µ—Ç—Å—è...\n–°–æ–∑–¥–∞–Ω–∏–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è...\nMaterialApp —Å–æ–∑–¥–∞–Ω\n–ì–ª–∞–≤–Ω–∞—è —Å—Ç—Ä–∞–Ω–∏—Ü–∞ —Å–æ–∑–¥–∞–Ω–∞\n–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å, Flutter Developer!\nFlutter –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –≥–æ—Ç–æ–≤–æ!',
            'hints': [
                'Flutter –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –Ω–∞—á–∏–Ω–∞–µ—Ç—Å—è —Å —Ñ—É–Ω–∫—Ü–∏–∏ main()',
                'runApp() –ø—Ä–∏–Ω–∏–º–∞–µ—Ç –∫–æ—Ä–Ω–µ–≤–æ–π –≤–∏–¥–∂–µ—Ç',
                'MaterialApp –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–ª—è–µ—Ç Material Design',
                '–ö–∞–∂–¥—ã–π –≤–∏–¥–∂–µ—Ç –∏–º–µ–µ—Ç –º–µ—Ç–æ–¥ build()',
                'StatelessWidget –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –¥–ª—è —Å—Ç–∞—Ç–∏—á–µ—Å–∫–∏—Ö —ç–ª–µ–º–µ–Ω—Ç–æ–≤'
            ]
        },
        
        {
            'id': 27,
            'title': '–í–∏–¥–∂–µ—Ç—ã –∏ –∏—Ö —Ç–∏–ø—ã',
            'category': 'Flutter –ø–æ–¥–≥–æ—Ç–æ–≤–∫–∞',
            'difficulty': '–ù–∞—á–∞–ª—å–Ω—ã–π',
            'description': '–ò–∑—É—á–µ–Ω–∏–µ –æ—Å–Ω–æ–≤–Ω—ã—Ö –≤–∏–¥–∂–µ—Ç–æ–≤ Flutter',
            'theory': """
## –í–∏–¥–∂–µ—Ç—ã –≤ Flutter

–í Flutter –≤—Å–µ —è–≤–ª—è–µ—Ç—Å—è –≤–∏–¥–∂–µ—Ç–æ–º - –æ—Ç –∫–Ω–æ–ø–æ–∫ –¥–æ —Ü–µ–ª—ã—Ö —ç–∫—Ä–∞–Ω–æ–≤.

### –¢–∏–ø—ã –≤–∏–¥–∂–µ—Ç–æ–≤:

**StatelessWidget:**
- –ù–µ–∏–∑–º–µ–Ω—è–µ–º—ã–µ –≤–∏–¥–∂–µ—Ç—ã
- –ù–µ –∏–º–µ—é—Ç –≤–Ω—É—Ç—Ä–µ–Ω–Ω–µ–≥–æ —Å–æ—Å—Ç–æ—è–Ω–∏—è
- –ü—Ä–∏–º–µ—Ä: Text, Icon, Image

**StatefulWidget:**
- –ò–∑–º–µ–Ω—è–µ–º—ã–µ –≤–∏–¥–∂–µ—Ç—ã
- –ò–º–µ—é—Ç —Å–æ—Å—Ç–æ—è–Ω–∏–µ, –∫–æ—Ç–æ—Ä–æ–µ –º–æ–∂–µ—Ç –∏–∑–º–µ–Ω—è—Ç—å—Å—è
- –ü—Ä–∏–º–µ—Ä: Checkbox, TextField, Slider

### –û—Å–Ω–æ–≤–Ω—ã–µ –≤–∏–¥–∂–µ—Ç—ã:
- **Container** - –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä —Å –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç—å—é —Å—Ç–∏–ª–∏–∑–∞—Ü–∏–∏
- **Row/Column** - –≥–æ—Ä–∏–∑–æ–Ω—Ç–∞–ª—å–Ω–æ–µ/–≤–µ—Ä—Ç–∏–∫–∞–ª—å–Ω–æ–µ —Ä–∞—Å–ø–æ–ª–æ–∂–µ–Ω–∏–µ
- **Text** - –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ —Ç–µ–∫—Å—Ç–∞
- **Image** - –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π
- **Button** - –∫–Ω–æ–ø–∫–∏ —Ä–∞–∑–ª–∏—á–Ω—ã—Ö —Ç–∏–ø–æ–≤

### –ñ–∏–∑–Ω–µ–Ω–Ω—ã–π —Ü–∏–∫–ª StatefulWidget:
1. `createState()` - —Å–æ–∑–¥–∞–Ω–∏–µ —Å–æ—Å—Ç–æ—è–Ω–∏—è
2. `initState()` - –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è
3. `build()` - –ø–æ—Å—Ç—Ä–æ–µ–Ω–∏–µ UI
4. `setState()` - –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Å–æ—Å—Ç–æ—è–Ω–∏—è
5. `dispose()` - –æ—Å–≤–æ–±–æ–∂–¥–µ–Ω–∏–µ —Ä–µ—Å—É—Ä—Å–æ–≤
            """,
            'task': '–°–æ–∑–¥–∞–π—Ç–µ —Ä–∞–∑–ª–∏—á–Ω—ã–µ —Ç–∏–ø—ã –≤–∏–¥–∂–µ—Ç–æ–≤: –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä, —Ç–µ–∫—Å—Ç, –∫–Ω–æ–ø–∫—É –∏ —Å—á–µ—Ç—á–∏–∫ —Å —Å–æ—Å—Ç–æ—è–Ω–∏–µ–º.',
            'code_template': """// –°—Ç–∞—Ç–∏—á–µ—Å–∫–∏–π –≤–∏–¥–∂–µ—Ç - –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä —Å —Ç–µ–∫—Å—Ç–æ–º
class TextContainer {
  String text;
  String color;
  
  TextContainer(this.text, this.color);
  
  String build() {
    return 'Container(color: $color, child: Text("$text"))';
  }
}

// –í–∏–¥–∂–µ—Ç –∫–Ω–æ–ø–∫–∏
class CustomButton {
  String label;
  Function onPressed;
  
  CustomButton(this.label, this.onPressed);
  
  String build() {
    return 'ElevatedButton(child: Text("$label"))';
  }
  
  void press() {
    print('–ö–Ω–æ–ø–∫–∞ "$label" –Ω–∞–∂–∞—Ç–∞');
    onPressed();
  }
}

// –í–∏–¥–∂–µ—Ç —Å—á–µ—Ç—á–∏–∫–∞ —Å —Å–æ—Å—Ç–æ—è–Ω–∏–µ–º
class CounterWidget {
  int _counter = 0;
  
  // TODO: –†–µ–∞–ª–∏–∑–æ–≤–∞—Ç—å –º–µ—Ç–æ–¥—ã –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å–æ —Å—á–µ—Ç—á–∏–∫–æ–º
  String build() {
    return 'Column(children: [Text("–°—á–µ—Ç—á–∏–∫: $_counter"), Button("–£–≤–µ–ª–∏—á–∏—Ç—å")])';
  }
  
  void increment() {
    // TODO: –£–≤–µ–ª–∏—á–∏—Ç—å —Å—á–µ—Ç—á–∏–∫ –∏ –æ–±–Ω–æ–≤–∏—Ç—å —Å–æ—Å—Ç–æ—è–Ω–∏–µ
  }
  
  void updateState() {
    print('–°–æ—Å—Ç–æ—è–Ω–∏–µ –æ–±–Ω–æ–≤–ª–µ–Ω–æ: —Å—á–µ—Ç—á–∏–∫ = $_counter');
  }
}

void main() {
  print('–°–æ–∑–¥–∞–Ω–∏–µ Flutter –≤–∏–¥–∂–µ—Ç–æ–≤...');
  
  // –°–æ–∑–¥–∞–Ω–∏–µ —Å—Ç–∞—Ç–∏—á–µ—Å–∫–∏—Ö –≤–∏–¥–∂–µ—Ç–æ–≤
  TextContainer container = TextContainer('–ü—Ä–∏–≤–µ—Ç, Flutter!', '—Å–∏–Ω–∏–π');
  print(container.build());
  
  // –°–æ–∑–¥–∞–Ω–∏–µ –∫–Ω–æ–ø–∫–∏
  CustomButton button = CustomButton('–ù–∞–∂–º–∏ –º–µ–Ω—è', () {
    print('–î–µ–π—Å—Ç–≤–∏–µ –∫–Ω–æ–ø–∫–∏ –≤—ã–ø–æ–ª–Ω–µ–Ω–æ!');
  });
  print(button.build());
  button.press();
  
  // –°–æ–∑–¥–∞–Ω–∏–µ —Å—á–µ—Ç—á–∏–∫–∞
  CounterWidget counter = CounterWidget();
  print(counter.build());
  
  // TODO: –í—ã–∑–≤–∞—Ç—å increment() –Ω–µ—Å–∫–æ–ª—å–∫–æ —Ä–∞–∑
  
  print('–í—Å–µ –≤–∏–¥–∂–µ—Ç—ã —Å–æ–∑–¥–∞–Ω—ã!');
}""",
            'expected_output': '–°–æ–∑–¥–∞–Ω–∏–µ Flutter –≤–∏–¥–∂–µ—Ç–æ–≤...\nContainer(color: —Å–∏–Ω–∏–π, child: Text("–ü—Ä–∏–≤–µ—Ç, Flutter!"))\nElevatedButton(child: Text("–ù–∞–∂–º–∏ –º–µ–Ω—è"))\n–ö–Ω–æ–ø–∫–∞ "–ù–∞–∂–º–∏ –º–µ–Ω—è" –Ω–∞–∂–∞—Ç–∞\n–î–µ–π—Å—Ç–≤–∏–µ –∫–Ω–æ–ø–∫–∏ –≤—ã–ø–æ–ª–Ω–µ–Ω–æ!\nColumn(children: [Text("–°—á–µ—Ç—á–∏–∫: 0"), Button("–£–≤–µ–ª–∏—á–∏—Ç—å")])\n–í—Å–µ –≤–∏–¥–∂–µ—Ç—ã —Å–æ–∑–¥–∞–Ω—ã!',
            'hints': [
                'StatelessWidget –∏–º–µ–µ—Ç —Ç–æ–ª—å–∫–æ –º–µ—Ç–æ–¥ build()',
                'StatefulWidget –º–æ–∂–µ—Ç –∏–∑–º–µ–Ω—è—Ç—å —Å–≤–æ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ',
                '–ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ setState() –¥–ª—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è UI',
                'Counter –¥–æ–ª–∂–µ–Ω —É–≤–µ–ª–∏—á–∏–≤–∞—Ç—å—Å—è –ø—Ä–∏ –∫–∞–∂–¥–æ–º –≤—ã–∑–æ–≤–µ increment()',
                '–ù–µ –∑–∞–±—É–¥—å—Ç–µ –≤—ã–∑–≤–∞—Ç—å updateState() –ø–æ—Å–ª–µ –∏–∑–º–µ–Ω–µ–Ω–∏—è'
            ]
        },
        
        {
            'id': 28,
            'title': '–ú–∞–∫–µ—Ç—ã –∏ –ø–æ–∑–∏—Ü–∏–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ',
            'category': 'Flutter –ø–æ–¥–≥–æ—Ç–æ–≤–∫–∞',
            'difficulty': '–°—Ä–µ–¥–Ω–∏–π',
            'description': '–†–∞–±–æ—Ç–∞ —Å –º–∞–∫–µ—Ç–∞–º–∏ –≤ Flutter: Row, Column, Stack',
            'theory': """
## –ú–∞–∫–µ—Ç—ã –≤ Flutter

–ú–∞–∫–µ—Ç—ã –æ–ø—Ä–µ–¥–µ–ª—è—é—Ç –∫–∞–∫ –≤–∏–¥–∂–µ—Ç—ã —Ä–∞—Å–ø–æ–ª–∞–≥–∞—é—Ç—Å—è –Ω–∞ —ç–∫—Ä–∞–Ω–µ.

### –û—Å–Ω–æ–≤–Ω—ã–µ –≤–∏–¥–∂–µ—Ç—ã –º–∞–∫–µ—Ç–æ–≤:

**Column** - –≤–µ—Ä—Ç–∏–∫–∞–ª—å–Ω–æ–µ —Ä–∞—Å–ø–æ–ª–æ–∂–µ–Ω–∏–µ:
```dart
Column(
  children: [
    Text('–ü–µ—Ä–≤—ã–π'),
    Text('–í—Ç–æ—Ä–æ–π'),
  ],
)
```

**Row** - –≥–æ—Ä–∏–∑–æ–Ω—Ç–∞–ª—å–Ω–æ–µ —Ä–∞—Å–ø–æ–ª–æ–∂–µ–Ω–∏–µ:
```dart
Row(
  children: [
    Icon(Icons.star),
    Text('–†–µ–π—Ç–∏–Ω–≥'),
  ],
)
```

**Stack** - —Å–ª–æ–µ–Ω–æ–µ —Ä–∞—Å–ø–æ–ª–æ–∂–µ–Ω–∏–µ:
```dart
Stack(
  children: [
    Container(color: Colors.blue),
    Positioned(
      top: 10,
      left: 10,
      child: Text('–ù–∞–≤–µ—Ä—Ö—É'),
    ),
  ],
)
```

### –°–≤–æ–π—Å—Ç–≤–∞ –≤—ã—Ä–∞–≤–Ω–∏–≤–∞–Ω–∏—è:
- **MainAxisAlignment** - –æ—Å–Ω–æ–≤–Ω–∞—è –æ—Å—å
- **CrossAxisAlignment** - –ø–æ–ø–µ—Ä–µ—á–Ω–∞—è –æ—Å—å
- **MainAxisSize** - —Ä–∞–∑–º–µ—Ä –ø–æ –æ—Å–Ω–æ–≤–Ω–æ–π –æ—Å–∏

### Flex-–≤–∏–¥–∂–µ—Ç—ã:
- **Expanded** - –∑–∞–Ω–∏–º–∞–µ—Ç –¥–æ—Å—Ç—É–ø–Ω–æ–µ –º–µ—Å—Ç–æ
- **Flexible** - –≥–∏–±–∫–æ–µ –ø—Ä–æ—Å—Ç—Ä–∞–Ω—Å—Ç–≤–æ
- **Spacer** - –ø—É—Å—Ç–æ–µ –ø—Ä–æ—Å—Ç—Ä–∞–Ω—Å—Ç–≤–æ
            """,
            'task': '–°–æ–∑–¥–∞–π—Ç–µ –º–∞–∫–µ—Ç —Å —Ä–∞–∑–ª–∏—á–Ω—ã–º–∏ —Å–ø–æ—Å–æ–±–∞–º–∏ –ø–æ–∑–∏—Ü–∏–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏—è –≤–∏–¥–∂–µ—Ç–æ–≤.',
            'code_template': """// –í–µ—Ä—Ç–∏–∫–∞–ª—å–Ω—ã–π –º–∞–∫–µ—Ç
class VerticalLayout {
  List<String> items;
  
  VerticalLayout(this.items);
  
  String build() {
    String children = items.join(', ');
    return 'Column(children: [$children])';
  }
}

// –ì–æ—Ä–∏–∑–æ–Ω—Ç–∞–ª—å–Ω—ã–π –º–∞–∫–µ—Ç
class HorizontalLayout {
  List<String> items;
  String alignment;
  
  HorizontalLayout(this.items, this.alignment);
  
  String build() {
    String children = items.join(', ');
    return 'Row(mainAxisAlignment: $alignment, children: [$children])';
  }
}

// –°–ª–æ–µ–Ω—ã–π –º–∞–∫–µ—Ç
class StackLayout {
  List<Map<String, dynamic>> layers;
  
  StackLayout(this.layers);
  
  String build() {
    String children = '';
    for (var layer in layers) {
      if (layer['positioned']) {
        children += 'Positioned(top: ${layer['top']}, left: ${layer['left']}, child: ${layer['widget']}), ';
      } else {
        children += '${layer['widget']}, ';
      }
    }
    return 'Stack(children: [$children])';
  }
}

// –ì–∏–±–∫–∏–π –º–∞–∫–µ—Ç —Å Expanded
class FlexLayout {
  List<Map<String, dynamic>> items;
  
  FlexLayout(this.items);
  
  String build() {
    String children = '';
    for (var item in items) {
      if (item['flex'] != null) {
        children += 'Expanded(flex: ${item['flex']}, child: ${item['widget']}), ';
      } else {
        children += '${item['widget']}, ';
      }
    }
    return 'Column(children: [$children])';
  }
}

void main() {
  print('–°–æ–∑–¥–∞–Ω–∏–µ –º–∞–∫–µ—Ç–æ–≤ Flutter...');
  
  // –í–µ—Ä—Ç–∏–∫–∞–ª—å–Ω—ã–π –º–∞–∫–µ—Ç
  VerticalLayout vertical = VerticalLayout(['Text("–ó–∞–≥–æ–ª–æ–≤–æ–∫")', 'Text("–û–ø–∏—Å–∞–Ω–∏–µ")', 'Button("–î–µ–π—Å—Ç–≤–∏–µ")']);
  print('–í–µ—Ä—Ç–∏–∫–∞–ª—å–Ω—ã–π –º–∞–∫–µ—Ç: ${vertical.build()}');
  
  // –ì–æ—Ä–∏–∑–æ–Ω—Ç–∞–ª—å–Ω—ã–π –º–∞–∫–µ—Ç
  HorizontalLayout horizontal = HorizontalLayout(['Icon(star)', 'Text("4.5")', 'Text("(123 –æ—Ç–∑—ã–≤–∞)")'], 'spaceAround');
  print('–ì–æ—Ä–∏–∑–æ–Ω—Ç–∞–ª—å–Ω—ã–π –º–∞–∫–µ—Ç: ${horizontal.build()}');
  
  // TODO: –°–æ–∑–¥–∞—Ç—å —Å–ª–æ–µ–Ω—ã–π –º–∞–∫–µ—Ç —Å —Ñ–æ–Ω–æ–º –∏ —Ç–µ–∫—Å—Ç–æ–º –ø–æ–≤–µ—Ä—Ö
  List<Map<String, dynamic>> stackLayers = [
    {'widget': 'Container(color: blue)', 'positioned': false},
    {'widget': 'Text("Overlay")', 'positioned': true, 'top': 20, 'left': 20}
  ];
  StackLayout stack = StackLayout(stackLayers);
  print('–°–ª–æ–µ–Ω—ã–π –º–∞–∫–µ—Ç: ${stack.build()}');
  
  // TODO: –°–æ–∑–¥–∞—Ç—å –≥–∏–±–∫–∏–π –º–∞–∫–µ—Ç —Å —Ä–∞–∑–Ω—ã–º–∏ flex –∑–Ω–∞—á–µ–Ω–∏—è–º–∏
  List<Map<String, dynamic>> flexItems = [
    {'widget': 'Container("Header")', 'flex': 1},
    {'widget': 'Container("Content")', 'flex': 3},
    {'widget': 'Container("Footer")', 'flex': 1}
  ];
  FlexLayout flex = FlexLayout(flexItems);
  print('–ì–∏–±–∫–∏–π –º–∞–∫–µ—Ç: ${flex.build()}');
  
  print('–í—Å–µ –º–∞–∫–µ—Ç—ã —Å–æ–∑–¥–∞–Ω—ã!');
}""",
            'expected_output': '–°–æ–∑–¥–∞–Ω–∏–µ –º–∞–∫–µ—Ç–æ–≤ Flutter...\n–í–µ—Ä—Ç–∏–∫–∞–ª—å–Ω—ã–π –º–∞–∫–µ—Ç: Column(children: [Text("–ó–∞–≥–æ–ª–æ–≤–æ–∫"), Text("–û–ø–∏—Å–∞–Ω–∏–µ"), Button("–î–µ–π—Å—Ç–≤–∏–µ")])\n–ì–æ—Ä–∏–∑–æ–Ω—Ç–∞–ª—å–Ω—ã–π –º–∞–∫–µ—Ç: Row(mainAxisAlignment: spaceAround, children: [Icon(star), Text("4.5"), Text("(123 –æ—Ç–∑—ã–≤–∞)")])\n–°–ª–æ–µ–Ω—ã–π –º–∞–∫–µ—Ç: Stack(children: [Container(color: blue), Positioned(top: 20, left: 20, child: Text("Overlay")), ])\n–ì–∏–±–∫–∏–π –º–∞–∫–µ—Ç: Column(children: [Expanded(flex: 1, child: Container("Header")), Expanded(flex: 3, child: Container("Content")), Expanded(flex: 1, child: Container("Footer")), ])\n–í—Å–µ –º–∞–∫–µ—Ç—ã —Å–æ–∑–¥–∞–Ω—ã!',
            'hints': [
                'Column —Ä–∞—Å–ø–æ–ª–∞–≥–∞–µ—Ç —ç–ª–µ–º–µ–Ω—Ç—ã —Å–≤–µ—Ä—Ö—É –≤–Ω–∏–∑',
                'Row —Ä–∞—Å–ø–æ–ª–∞–≥–∞–µ—Ç —ç–ª–µ–º–µ–Ω—Ç—ã —Å–ª–µ–≤–∞ –Ω–∞–ø—Ä–∞–≤–æ',
                'Stack –ø–æ–∑–≤–æ–ª—è–µ—Ç –Ω–∞–∫–ª–∞–¥—ã–≤–∞—Ç—å –≤–∏–¥–∂–µ—Ç—ã –¥—Ä—É–≥ –Ω–∞ –¥—Ä—É–≥–∞',
                'Expanded –∑–∞–ø–æ–ª–Ω—è–µ—Ç –¥–æ—Å—Ç—É–ø–Ω–æ–µ –ø—Ä–æ—Å—Ç—Ä–∞–Ω—Å—Ç–≤–æ',
                'Positioned –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –≤–Ω—É—Ç—Ä–∏ Stack –¥–ª—è —Ç–æ—á–Ω–æ–≥–æ –ø–æ–∑–∏—Ü–∏–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏—è'
            ]
        },
        
        {
            'id': 29,
            'title': '–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ–º',
            'category': 'Flutter –ø–æ–¥–≥–æ—Ç–æ–≤–∫–∞',
            'difficulty': '–°—Ä–µ–¥–Ω–∏–π',
            'description': '–û—Å–Ω–æ–≤—ã —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è —Å–æ—Å—Ç–æ—è–Ω–∏–µ–º –≤ Flutter',
            'theory': """
## –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ–º –≤ Flutter

–°–æ—Å—Ç–æ—è–Ω–∏–µ - —ç—Ç–æ –¥–∞–Ω–Ω—ã–µ, –∫–æ—Ç–æ—Ä—ã–µ –º–æ–≥—É—Ç –∏–∑–º–µ–Ω—è—Ç—å—Å—è –≤–æ –≤—Ä–µ–º—è —Ä–∞–±–æ—Ç—ã –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è.

### –¢–∏–ø—ã —Å–æ—Å—Ç–æ—è–Ω–∏—è:

**–õ–æ–∫–∞–ª—å–Ω–æ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ:**
- –°–æ—Å—Ç–æ—è–Ω–∏–µ –æ–¥–Ω–æ–≥–æ –≤–∏–¥–∂–µ—Ç–∞
- –£–ø—Ä–∞–≤–ª—è–µ—Ç—Å—è —á–µ—Ä–µ–∑ setState()
- –ü—Ä–∏–º–µ—Ä: —Å—á–µ—Ç—á–∏–∫, –ø–µ—Ä–µ–∫–ª—é—á–∞—Ç–µ–ª—å

**–ì–ª–æ–±–∞–ª—å–Ω–æ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ:**
- –°–æ—Å—Ç–æ—è–Ω–∏–µ –≤—Å–µ–≥–æ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
- –î–æ—Å—Ç—É–ø–Ω–æ –∏–∑ —Ä–∞–∑–Ω—ã—Ö –≤–∏–¥–∂–µ—Ç–æ–≤
- –£–ø—Ä–∞–≤–ª—è–µ—Ç—Å—è —á–µ—Ä–µ–∑ Provider, Bloc, Riverpod

### setState():
```dart
class CounterWidget extends StatefulWidget {
  @override
  _CounterWidgetState createState() => _CounterWidgetState();
}

class _CounterWidgetState extends State<CounterWidget> {
  int counter = 0;
  
  void increment() {
    setState(() {
      counter++;
    });
  }
}
```

### –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ —Ñ–æ—Ä–º–∞–º–∏:
- **TextEditingController** - –∫–æ–Ω—Ç—Ä–æ–ª–ª–µ—Ä –¥–ª—è —Ç–µ–∫—Å—Ç–æ–≤—ã—Ö –ø–æ–ª–µ–π
- **Form** - –≥—Ä—É–ø–ø–∏—Ä–æ–≤–∫–∞ –ø–æ–ª–µ–π —Ñ–æ—Ä–º—ã
- **Validation** - –≤–∞–ª–∏–¥–∞—Ü–∏—è –¥–∞–Ω–Ω—ã—Ö

### –ñ–∏–∑–Ω–µ–Ω–Ω—ã–π —Ü–∏–∫–ª —Å–æ—Å—Ç–æ—è–Ω–∏—è:
1. `initState()` - –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è
2. `didChangeDependencies()` - –∏–∑–º–µ–Ω–µ–Ω–∏–µ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π
3. `build()` - –ø–æ—Å—Ç—Ä–æ–µ–Ω–∏–µ UI
4. `setState()` - –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Å–æ—Å—Ç–æ—è–Ω–∏—è
5. `dispose()` - –æ—á–∏—Å—Ç–∫–∞ —Ä–µ—Å—É—Ä—Å–æ–≤
            """,
        },
        {
            'id': 'flutter-stateful-widgets',
            'title': '–í–∏–¥–∂–µ—Ç—ã —Å —Å–æ—Å—Ç–æ—è–Ω–∏–µ–º Flutter',
            'description': '–°–æ–∑–¥–∞–Ω–∏–µ –∏–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω—ã—Ö –≤–∏–¥–∂–µ—Ç–æ–≤ —Å —É–ø—Ä–∞–≤–ª–µ–Ω–∏–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ–º',
            'task': '–°–æ–∑–¥–∞–π—Ç–µ –≤–∏–¥–∂–µ—Ç —Ñ–æ—Ä–º—ã —Å —É–ø—Ä–∞–≤–ª–µ–Ω–∏–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ–º –¥–ª—è —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è.',
            'code_template': '''// –ú–æ–¥–µ–ª—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
class User {
  String name;
  String email;
  int age;
  bool isSubscribed;
  
  User({required this.name, required this.email, required this.age, this.isSubscribed = false});
  
  @override
  String toString() {
    return 'User{name: $name, email: $email, age: $age, subscribed: $isSubscribed}';
  }
}

// –ö–æ–Ω—Ç—Ä–æ–ª–ª–µ—Ä —Ñ–æ—Ä–º—ã
class FormController {
  String _name = '';
  String _email = '';
  int _age = 0;
  bool _isSubscribed = false;
  
  // TODO: –†–µ–∞–ª–∏–∑–æ–≤–∞—Ç—å –≥–µ—Ç—Ç–µ—Ä—ã –∏ —Å–µ—Ç—Ç–µ—Ä—ã
  String get name => _name;
  String get email => _email;
  int get age => _age;
  bool get isSubscribed => _isSubscribed;
  
  void setName(String name) {
    // TODO: –û–±–Ω–æ–≤–∏—Ç—å –∏–º—è –∏ –≤—ã–∑–≤–∞—Ç—å setState
  }
  
  void setEmail(String email) {
    // TODO: –û–±–Ω–æ–≤–∏—Ç—å email
  }
  
  void setAge(int age) {
    // TODO: –û–±–Ω–æ–≤–∏—Ç—å –≤–æ–∑—Ä–∞—Å—Ç
  }
  
  void toggleSubscription() {
    // TODO: –ü–µ—Ä–µ–∫–ª—é—á–∏—Ç—å –ø–æ–¥–ø–∏—Å–∫—É
  }
  
  bool validate() {
    // TODO: –í–∞–ª–∏–¥–∞—Ü–∏—è —Ñ–æ—Ä–º—ã
    return _name.isNotEmpty && _email.contains('@') && _age >= 18;
  }
  
  User createUser() {
    return User(name: _name, email: _email, age: _age, isSubscribed: _isSubscribed);
  }
}

// –í–∏–¥–∂–µ—Ç —Ñ–æ—Ä–º—ã —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏
class RegistrationForm {
  FormController controller = FormController();
  
  String build() {
    return """
Form(
  children: [
    TextFormField(hint: "–ò–º—è", value: "${controller.name}"),
    TextFormField(hint: "Email", value: "${controller.email}"),
    TextFormField(hint: "–í–æ–∑—Ä–∞—Å—Ç", value: "${controller.age}"),
    Checkbox(value: ${controller.isSubscribed}, label: "–ü–æ–¥–ø–∏—Å–∫–∞ –Ω–∞ –Ω–æ–≤–æ—Å—Ç–∏"),
    ElevatedButton(text: "–ó–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞—Ç—å—Å—è")
  ]
)""";
  }
  
  void onNameChanged(String value) {
    controller.setName(value);
    print('–°–æ—Å—Ç–æ—è–Ω–∏–µ –æ–±–Ω–æ–≤–ª–µ–Ω–æ: –∏–º—è = $value');
  }
  
  void onEmailChanged(String value) {
    controller.setEmail(value);
    print('–°–æ—Å—Ç–æ—è–Ω–∏–µ –æ–±–Ω–æ–≤–ª–µ–Ω–æ: email = $value');
  }
  
  void onAgeChanged(int value) {
    controller.setAge(value);
    print('–°–æ—Å—Ç–æ—è–Ω–∏–µ –æ–±–Ω–æ–≤–ª–µ–Ω–æ: –≤–æ–∑—Ä–∞—Å—Ç = $value');
  }
  
  void onSubscriptionToggled() {
    controller.toggleSubscription();
    print('–°–æ—Å—Ç–æ—è–Ω–∏–µ –æ–±–Ω–æ–≤–ª–µ–Ω–æ: –ø–æ–¥–ø–∏—Å–∫–∞ = ${controller.isSubscribed}');
  }
  
  void onSubmit() {
    if (controller.validate()) {
      User user = controller.createUser();
      print('–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω: $user');
    } else {
      print('–û—à–∏–±–∫–∞: —Ñ–æ—Ä–º–∞ –∑–∞–ø–æ–ª–Ω–µ–Ω–∞ –Ω–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ');
    }
  }
}

void main() {
  print('–°–æ–∑–¥–∞–Ω–∏–µ —Ñ–æ—Ä–º—ã —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏...');
  
  RegistrationForm form = RegistrationForm();
  print(form.build());
  
  // –°–∏–º—É–ª—è—Ü–∏—è –≤–≤–æ–¥–∞ –¥–∞–Ω–Ω—ã—Ö
  print('\n–ó–∞–ø–æ–ª–Ω–µ–Ω–∏–µ —Ñ–æ—Ä–º—ã:');
  form.onNameChanged('–ê–ª–µ–∫—Å–µ–π');
  form.onEmailChanged('alexey@example.com');
  form.onAgeChanged(25);
  form.onSubscriptionToggled();
  
  print('\n–û—Ç–ø—Ä–∞–≤–∫–∞ —Ñ–æ—Ä–º—ã:');
  form.onSubmit();
  
  print('\n–û–±–Ω–æ–≤–ª–µ–Ω–Ω–∞—è —Ñ–æ—Ä–º–∞:');
  print(form.build());
}''',
            'expected_output': '–°–æ–∑–¥–∞–Ω–∏–µ —Ñ–æ—Ä–º—ã —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏...\nForm(\n  children: [\n    TextFormField(hint: "–ò–º—è", value: ""),\n    TextFormField(hint: "Email", value: ""),\n    TextFormField(hint: "–í–æ–∑—Ä–∞—Å—Ç", value: "0"),\n    Checkbox(value: false, label: "–ü–æ–¥–ø–∏—Å–∫–∞ –Ω–∞ –Ω–æ–≤–æ—Å—Ç–∏"),\n    ElevatedButton(text: "–ó–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞—Ç—å—Å—è")\n  ]\n)\n\n–ó–∞–ø–æ–ª–Ω–µ–Ω–∏–µ —Ñ–æ—Ä–º—ã:\n–°–æ—Å—Ç–æ—è–Ω–∏–µ –æ–±–Ω–æ–≤–ª–µ–Ω–æ: –∏–º—è = –ê–ª–µ–∫—Å–µ–π\n–°–æ—Å—Ç–æ—è–Ω–∏–µ –æ–±–Ω–æ–≤–ª–µ–Ω–æ: email = alexey@example.com\n–°–æ—Å—Ç–æ—è–Ω–∏–µ –æ–±–Ω–æ–≤–ª–µ–Ω–æ: –≤–æ–∑—Ä–∞—Å—Ç = 25\n–°–æ—Å—Ç–æ—è–Ω–∏–µ –æ–±–Ω–æ–≤–ª–µ–Ω–æ: –ø–æ–¥–ø–∏—Å–∫–∞ = true\n\n–û—Ç–ø—Ä–∞–≤–∫–∞ —Ñ–æ—Ä–º—ã:\n–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω: User{name: –ê–ª–µ–∫—Å–µ–π, email: alexey@example.com, age: 25, subscribed: true}',
            'hints': [
                'setState() –æ–±–Ω–æ–≤–ª—è–µ—Ç UI –ø–æ—Å–ª–µ –∏–∑–º–µ–Ω–µ–Ω–∏—è —Å–æ—Å—Ç–æ—è–Ω–∏—è',
                '–ö–æ–Ω—Ç—Ä–æ–ª–ª–µ—Ä—ã –ø–æ–º–æ–≥–∞—é—Ç —É–ø—Ä–∞–≤–ª—è—Ç—å –¥–∞–Ω–Ω—ã–º–∏ —Ñ–æ—Ä–º',
                '–í–∞–ª–∏–¥–∞—Ü–∏—è –¥–æ–ª–∂–Ω–∞ –ø—Ä–æ–≤–µ—Ä—è—Ç—å –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ—Å—Ç—å –¥–∞–Ω–Ω—ã—Ö',
                '–ö–∞–∂–¥–æ–µ –∏–∑–º–µ–Ω–µ–Ω–∏–µ –ø–æ–ª—è –¥–æ–ª–∂–Ω–æ –æ–±–Ω–æ–≤–ª—è—Ç—å —Å–æ—Å—Ç–æ—è–Ω–∏–µ',
                '–ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ private –ø–æ–ª—è –¥–ª—è –∏–Ω–∫–∞–ø—Å—É–ª—è—Ü–∏–∏ –¥–∞–Ω–Ω—ã—Ö'
            ]
        },
        
        {
            'id': 30,
            'title': '–ù–∞–≤–∏–≥–∞—Ü–∏—è –º–µ–∂–¥—É —ç–∫—Ä–∞–Ω–∞–º–∏',
            'category': 'Flutter –ø–æ–¥–≥–æ—Ç–æ–≤–∫–∞',
            'difficulty': '–ü—Ä–æ–¥–≤–∏–Ω—É—Ç—ã–π',
            'description': '–°–∏—Å—Ç–µ–º–∞ –Ω–∞–≤–∏–≥–∞—Ü–∏–∏ –≤ Flutter –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è—Ö',
            'theory': """
## –ù–∞–≤–∏–≥–∞—Ü–∏—è –≤ Flutter

–ù–∞–≤–∏–≥–∞—Ü–∏—è –ø–æ–∑–≤–æ–ª—è–µ—Ç –ø–µ—Ä–µ—Ö–æ–¥–∏—Ç—å –º–µ–∂–¥—É —Ä–∞–∑–Ω—ã–º–∏ —ç–∫—Ä–∞–Ω–∞–º–∏ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è.

### –û—Å–Ω–æ–≤–Ω—ã–µ –∫–æ–Ω—Ü–µ–ø—Ü–∏–∏:

**Navigator:**
- –£–ø—Ä–∞–≤–ª—è–µ—Ç —Å—Ç–µ–∫–æ–º —ç–∫—Ä–∞–Ω–æ–≤
- –†–∞–±–æ—Ç–∞–µ—Ç –ø–æ –ø—Ä–∏–Ω—Ü–∏–ø—É LIFO (Last In, First Out)
- –ú–µ—Ç–æ–¥—ã: `push()`, `pop()`, `pushReplacement()`

**Routes (–ú–∞—Ä—à—Ä—É—Ç—ã):**
- –ò–º–µ–Ω–æ–≤–∞–Ω–Ω—ã–µ –º–∞—Ä—à—Ä—É—Ç—ã
- –ê–Ω–æ–Ω–∏–º–Ω—ã–µ –º–∞—Ä—à—Ä—É—Ç—ã
- –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º—ã–µ –º–∞—Ä—à—Ä—É—Ç—ã

### –ë–∞–∑–æ–≤–∞—è –Ω–∞–≤–∏–≥–∞—Ü–∏—è:
```dart
// –ü–µ—Ä–µ—Ö–æ–¥ –Ω–∞ –Ω–æ–≤—ã–π —ç–∫—Ä–∞–Ω
Navigator.push(
  context,
  MaterialPageRoute(builder: (context) => SecondScreen()),
);

// –í–æ–∑–≤—Ä–∞—Ç –Ω–∞ –ø—Ä–µ–¥—ã–¥—É—â–∏–π —ç–∫—Ä–∞–Ω
Navigator.pop(context);
```

### –ò–º–µ–Ω–æ–≤–∞–Ω–Ω—ã–µ –º–∞—Ä—à—Ä—É—Ç—ã:
```dart
MaterialApp(
  routes: {
    '/': (context) => HomeScreen(),
    '/profile': (context) => ProfileScreen(),
    '/settings': (context) => SettingsScreen(),
  },
);

// –ü–µ—Ä–µ—Ö–æ–¥ –ø–æ –∏–º–µ–Ω–∏
Navigator.pushNamed(context, '/profile');
```

### –ü–µ—Ä–µ–¥–∞—á–∞ –¥–∞–Ω–Ω—ã—Ö:
- –ß–µ—Ä–µ–∑ –∫–æ–Ω—Å—Ç—Ä—É–∫—Ç–æ—Ä –≤–∏–¥–∂–µ—Ç–∞
- –ß–µ—Ä–µ–∑ arguments –≤ –º–∞—Ä—à—Ä—É—Ç–µ
- –í–æ–∑–≤—Ä–∞—Ç –¥–∞–Ω–Ω—ã—Ö —Å —ç–∫—Ä–∞–Ω–∞

### –¢–∏–ø—ã –ø–µ—Ä–µ—Ö–æ–¥–æ–≤:
- `push()` - –¥–æ–±–∞–≤–∏—Ç—å —ç–∫—Ä–∞–Ω –≤ —Å—Ç–µ–∫
- `pushReplacement()` - –∑–∞–º–µ–Ω–∏—Ç—å —Ç–µ–∫—É—â–∏–π —ç–∫—Ä–∞–Ω
- `pushAndRemoveUntil()` - –æ—á–∏—Å—Ç–∏—Ç—å —Å—Ç–µ–∫ –¥–æ –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–Ω–æ–≥–æ —ç–∫—Ä–∞–Ω–∞
            """,
        },
        {
            'id': 'flutter-navigation-system',
            'title': '–°–∏—Å—Ç–µ–º–∞ –Ω–∞–≤–∏–≥–∞—Ü–∏–∏ Flutter',
            'description': '–°–æ–∑–¥–∞–Ω–∏–µ –º–Ω–æ–≥–æ—ç–∫—Ä–∞–Ω–Ω–æ–≥–æ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è —Å –Ω–∞–≤–∏–≥–∞—Ü–∏–µ–π –∏ –ø–µ—Ä–µ–¥–∞—á–µ–π –¥–∞–Ω–Ω—ã—Ö',
            'task': '–°–æ–∑–¥–∞–π—Ç–µ —Å–∏—Å—Ç–µ–º—É –Ω–∞–≤–∏–≥–∞—Ü–∏–∏ —Å –Ω–µ—Å–∫–æ–ª—å–∫–∏–º–∏ —ç–∫—Ä–∞–Ω–∞–º–∏ –∏ –ø–µ—Ä–µ–¥–∞—á–µ–π –¥–∞–Ω–Ω—ã—Ö –º–µ–∂–¥—É –Ω–∏–º–∏.',
            'code_template': '''// –ú–æ–¥–µ–ª—å –¥–∞–Ω–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
class UserProfile {
  String name;
  String email;
  int age;
  
  UserProfile({required this.name, required this.email, required this.age});
  
  @override
  String toString() => 'UserProfile{name: $name, email: $email, age: $age}';
}

// –ì–ª–∞–≤–Ω—ã–π —ç–∫—Ä–∞–Ω
class HomeScreen {
  String title = '–ì–ª–∞–≤–Ω–∞—è —Å—Ç—Ä–∞–Ω–∏—Ü–∞';
  
  String build() {
    return """
Scaffold(
  appBar: AppBar(title: Text("$title")),
  body: Column(children: [
    Text("–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å!"),
    ElevatedButton(text: "–ü—Ä–æ—Ñ–∏–ª—å"),
    ElevatedButton(text: "–ù–∞—Å—Ç—Ä–æ–π–∫–∏"),
    ElevatedButton(text: "–û –ø—Ä–æ–≥—Ä–∞–º–º–µ")
  ])
)""";
  }
  
  void navigateToProfile(UserProfile user) {
    print('–ù–∞–≤–∏–≥–∞—Ü–∏—è: –ì–ª–∞–≤–Ω–∞—è ‚Üí –ü—Ä–æ—Ñ–∏–ª—å (–¥–∞–Ω–Ω—ã–µ: $user)');
  }
  
  void navigateToSettings() {
    print('–ù–∞–≤–∏–≥–∞—Ü–∏—è: –ì–ª–∞–≤–Ω–∞—è ‚Üí –ù–∞—Å—Ç—Ä–æ–π–∫–∏');
  }
  
  void navigateToAbout() {
    print('–ù–∞–≤–∏–≥–∞—Ü–∏—è: –ì–ª–∞–≤–Ω–∞—è ‚Üí –û –ø—Ä–æ–≥—Ä–∞–º–º–µ');
  }
}

// –≠–∫—Ä–∞–Ω –ø—Ä–æ—Ñ–∏–ª—è
class ProfileScreen {
  UserProfile? user;
  String title = '–ü—Ä–æ—Ñ–∏–ª—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è';
  
  ProfileScreen({this.user});
  
  String build() {
    String userInfo = user != null ? 
      '–ò–º—è: ${user!.name}, Email: ${user!.email}, –í–æ–∑—Ä–∞—Å—Ç: ${user!.age}' : 
      '–î–∞–Ω–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –Ω–µ –∑–∞–≥—Ä—É–∂–µ–Ω—ã';
      
    return """
Scaffold(
  appBar: AppBar(title: Text("$title")),
  body: Column(children: [
    Text("$userInfo"),
    ElevatedButton(text: "–†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å"),
    ElevatedButton(text: "–ù–∞–∑–∞–¥")
  ])
)""";
  }
  
  void navigateToEdit() {
    print('–ù–∞–≤–∏–≥–∞—Ü–∏—è: –ü—Ä–æ—Ñ–∏–ª—å ‚Üí –†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ');
  }
  
  UserProfile navigateBack() {
    print('–ù–∞–≤–∏–≥–∞—Ü–∏—è: –ü—Ä–æ—Ñ–∏–ª—å ‚Üí –ì–ª–∞–≤–Ω–∞—è (–≤–æ–∑–≤—Ä–∞—Ç –¥–∞–Ω–Ω—ã—Ö)');
    return user ?? UserProfile(name: 'Unknown', email: '', age: 0);
  }
}

// –≠–∫—Ä–∞–Ω –Ω–∞—Å—Ç—Ä–æ–µ–∫
class SettingsScreen {
  String title = '–ù–∞—Å—Ç—Ä–æ–π–∫–∏';
  Map<String, bool> settings = {
    'notifications': true,
    'darkTheme': false,
    'autoSync': true
  };
  
  String build() {
    return """
Scaffold(
  appBar: AppBar(title: Text("$title")),
  body: Column(children: [
    SwitchListTile(title: "–£–≤–µ–¥–æ–º–ª–µ–Ω–∏—è", value: ${settings['notifications']}),
    SwitchListTile(title: "–¢–µ–º–Ω–∞—è —Ç–µ–º–∞", value: ${settings['darkTheme']}),
    SwitchListTile(title: "–ê–≤—Ç–æ—Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏—è", value: ${settings['autoSync']}),
    ElevatedButton(text: "–°–æ—Ö—Ä–∞–Ω–∏—Ç—å"),
    ElevatedButton(text: "–ù–∞–∑–∞–¥")
  ])
)""";
  }
  
  void toggleSetting(String key) {
    settings[key] = !settings[key]!;
    print('–ù–∞—Å—Ç—Ä–æ–π–∫–∞ "$key" –∏–∑–º–µ–Ω–µ–Ω–∞ –Ω–∞ ${settings[key]}');
  }
  
  void save() {
    print('–ù–∞—Å—Ç—Ä–æ–π–∫–∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω—ã: $settings');
  }
}

// –ù–∞–≤–∏–≥–∞—Ç–æ—Ä –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
class AppNavigator {
  String currentScreen = 'home';
  HomeScreen homeScreen = HomeScreen();
  ProfileScreen? profileScreen;
  SettingsScreen settingsScreen = SettingsScreen();
  
  void navigateTo(String screenName, {dynamic data}) {
    String previousScreen = currentScreen;
    currentScreen = screenName;
    
    switch (screenName) {
      case 'profile':
        profileScreen = ProfileScreen(user: data as UserProfile?);
        print('Navigator: push ProfileScreen');
        break;
      case 'settings':
        print('Navigator: push SettingsScreen');
        break;
      case 'home':
        print('Navigator: pop to HomeScreen');
        break;
    }
    
    print('–ü–µ—Ä–µ—Ö–æ–¥: $previousScreen ‚Üí $currentScreen');
    printCurrentScreen();
  }
  
  void pop({dynamic result}) {
    print('Navigator: pop with result: $result');
    navigateTo('home');
  }
  
  void printCurrentScreen() {
    switch (currentScreen) {
      case 'home':
        print(homeScreen.build());
        break;
      case 'profile':
        print(profileScreen?.build() ?? 'ProfileScreen not initialized');
        break;
      case 'settings':
        print(settingsScreen.build());
        break;
    }
  }
}

void main() {
  print('–°–æ–∑–¥–∞–Ω–∏–µ —Å–∏—Å—Ç–µ–º—ã –Ω–∞–≤–∏–≥–∞—Ü–∏–∏ Flutter...');
  
  AppNavigator navigator = AppNavigator();
  UserProfile user = UserProfile(name: '–ò–≤–∞–Ω –ü–µ—Ç—Ä–æ–≤', email: 'ivan@example.com', age: 28);
  
  // –ü–æ–∫–∞–∑–∞—Ç—å –≥–ª–∞–≤–Ω—ã–π —ç–∫—Ä–∞–Ω
  print('\n=== –ì–õ–ê–í–ù–´–ô –≠–ö–†–ê–ù ===');
  navigator.printCurrentScreen();
  
  // –ü–µ—Ä–µ—Ö–æ–¥ –∫ –ø—Ä–æ—Ñ–∏–ª—é —Å –¥–∞–Ω–Ω—ã–º–∏
  print('\n=== –ü–ï–†–ï–•–û–î –ö –ü–†–û–§–ò–õ–Æ ===');
  navigator.navigateTo('profile', data: user);
  
  // –ü–µ—Ä–µ—Ö–æ–¥ –∫ –Ω–∞—Å—Ç—Ä–æ–π–∫–∞–º
  print('\n=== –ü–ï–†–ï–•–û–î –ö –ù–ê–°–¢–†–û–ô–ö–ê–ú ===');
  navigator.navigateTo('settings');
  
  // –ò–∑–º–µ–Ω–µ–Ω–∏–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏
  navigator.settingsScreen.toggleSetting('darkTheme');
  navigator.settingsScreen.save();
  
  // –í–æ–∑–≤—Ä–∞—Ç –Ω–∞ –≥–ª–∞–≤–Ω—É—é
  print('\n=== –í–û–ó–í–†–ê–¢ –ù–ê –ì–õ–ê–í–ù–£–Æ ===');
  navigator.pop(result: navigator.settingsScreen.settings);
  
  print('\n–°–∏—Å—Ç–µ–º–∞ –Ω–∞–≤–∏–≥–∞—Ü–∏–∏ –≥–æ—Ç–æ–≤–∞!');
}''',
            'expected_output': '–°–æ–∑–¥–∞–Ω–∏–µ —Å–∏—Å—Ç–µ–º—ã –Ω–∞–≤–∏–≥–∞—Ü–∏–∏ Flutter...\n\n=== –ì–õ–ê–í–ù–´–ô –≠–ö–†–ê–ù ===\nScaffold(\n  appBar: AppBar(title: Text("–ì–ª–∞–≤–Ω–∞—è —Å—Ç—Ä–∞–Ω–∏—Ü–∞")),\n  body: Column(children: [\n    Text("–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å!"),\n    ElevatedButton(text: "–ü—Ä–æ—Ñ–∏–ª—å"),\n    ElevatedButton(text: "–ù–∞—Å—Ç—Ä–æ–π–∫–∏"),\n    ElevatedButton(text: "–û –ø—Ä–æ–≥—Ä–∞–º–º–µ")\n  ])\n)\n\n=== –ü–ï–†–ï–•–û–î –ö –ü–†–û–§–ò–õ–Æ ===\nNavigator: push ProfileScreen\n–ü–µ—Ä–µ—Ö–æ–¥: home ‚Üí profile\nScaffold(\n  appBar: AppBar(title: Text("–ü—Ä–æ—Ñ–∏–ª—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è")),\n  body: Column(children: [\n    Text("–ò–º—è: –ò–≤–∞–Ω –ü–µ—Ç—Ä–æ–≤, Email: ivan@example.com, –í–æ–∑—Ä–∞—Å—Ç: 28"),\n    ElevatedButton(text: "–†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å"),\n    ElevatedButton(text: "–ù–∞–∑–∞–¥")\n  ])\n)\n\n–°–∏—Å—Ç–µ–º–∞ –Ω–∞–≤–∏–≥–∞—Ü–∏–∏ –≥–æ—Ç–æ–≤–∞!',
            'hints': [
                'Navigator —É–ø—Ä–∞–≤–ª—è–µ—Ç —Å—Ç–µ–∫–æ–º —ç–∫—Ä–∞–Ω–æ–≤',
                'push() –¥–æ–±–∞–≤–ª—è–µ—Ç —ç–∫—Ä–∞–Ω –≤ —Å—Ç–µ–∫',
                'pop() —É–±–∏—Ä–∞–µ—Ç —Ç–µ–∫—É—â–∏–π —ç–∫—Ä–∞–Ω –∏–∑ —Å—Ç–µ–∫–∞',
                '–î–∞–Ω–Ω—ã–µ –º–æ–∂–Ω–æ –ø–µ—Ä–µ–¥–∞–≤–∞—Ç—å —á–µ—Ä–µ–∑ –∫–æ–Ω—Å—Ç—Ä—É–∫—Ç–æ—Ä',
                '–†–µ–∑—É–ª—å—Ç–∞—Ç –º–æ–∂–Ω–æ –≤–µ—Ä–Ω—É—Ç—å —á–µ—Ä–µ–∑ pop()'
            ]
        },
        # –ù–æ–≤—ã–µ –ø—Ä–æ–¥–≤–∏–Ω—É—Ç—ã–µ —Ç–µ–º—ã
        {
            'id': 31,
            'title': 'Stream API –∏ —Ä–µ–∞–∫—Ç–∏–≤–Ω–æ–µ –ø—Ä–æ–≥—Ä–∞–º–º–∏—Ä–æ–≤–∞–Ω–∏–µ',
            'category': '–ü—Ä–æ–¥–≤–∏–Ω—É—Ç—ã–µ –∫–æ–Ω—Ü–µ–ø—Ü–∏–∏',
            'difficulty': '–ü—Ä–æ–¥–≤–∏–Ω—É—Ç—ã–π',
            'description': '–†–∞–±–æ—Ç–∞ —Å –ø–æ—Ç–æ–∫–∞–º–∏ –¥–∞–Ω–Ω—ã—Ö –∏ –∞—Å–∏–Ω—Ö—Ä–æ–Ω–Ω—ã–º–∏ —Å–æ–±—ã—Ç–∏—è–º–∏',
            'theory': '''
## Stream API –≤ Dart

Stream –ø—Ä–µ–¥—Å—Ç–∞–≤–ª—è–µ—Ç –ø–æ—Ç–æ–∫ –∞—Å–∏–Ω—Ö—Ä–æ–Ω–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö - –ø–æ—Å–ª–µ–¥–æ–≤–∞—Ç–µ–ª—å–Ω–æ—Å—Ç—å —Å–æ–±—ã—Ç–∏–π –≤–æ –≤—Ä–µ–º–µ–Ω–∏.

### –û—Å–Ω–æ–≤–Ω—ã–µ –∫–æ–Ω—Ü–µ–ø—Ü–∏–∏:
- **Single-subscription streams** - –æ–¥–∏–Ω —Å–ª—É—à–∞—Ç–µ–ª—å
- **Broadcast streams** - –º–Ω–æ–∂–µ—Å—Ç–≤–µ–Ω–Ω—ã–µ —Å–ª—É—à–∞—Ç–µ–ª–∏
- **StreamController** - —É–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –ø–æ—Ç–æ–∫–æ–º
- **StreamTransformer** - –ø—Ä–µ–æ–±—Ä–∞–∑–æ–≤–∞–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö

### –°–æ–∑–¥–∞–Ω–∏–µ Stream:
```dart
// –ì–µ–Ω–µ—Ä–∞—Ç–æ—Ä Stream
Stream<int> countStream(int max) async* {
  for (int i = 1; i <= max; i++) {
    await Future.delayed(Duration(seconds: 1));
    yield i;
  }
}

// StreamController
StreamController<String> controller = StreamController();
Stream<String> stream = controller.stream;
```

### –û–ø–µ—Ä–∞—Ç–æ—Ä—ã Stream:
```dart
stream
  .where((value) => value % 2 == 0)  // —Ñ–∏–ª—å—Ç—Ä–∞—Ü–∏—è
  .map((value) => value * 2)         // –ø—Ä–µ–æ–±—Ä–∞–∑–æ–≤–∞–Ω–∏–µ
  .take(5)                           // –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–∏–µ
  .listen((value) => print(value));  // –ø–æ–¥–ø–∏—Å–∫–∞
```

### –ü—Ä–∞–∫—Ç–∏—á–µ—Å–∫–æ–µ –ø—Ä–∏–º–µ–Ω–µ–Ω–∏–µ:
- –û–±—Ä–∞–±–æ—Ç–∫–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–æ–≥–æ –≤–≤–æ–¥–∞
- –†–µ–∞–ª-—Ç–∞–π–º –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è UI
- WebSocket —Å–æ–µ–¥–∏–Ω–µ–Ω–∏—è
- –°–µ–Ω—Å–æ—Ä—ã –∏ IoT —É—Å—Ç—Ä–æ–π—Å—Ç–≤–∞
            ''',
            'task': '–°–æ–∑–¥–∞–π—Ç–µ —Å–∏—Å—Ç–µ–º—É —á–∞—Ç–∞ —Å –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ–º Streams –¥–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏–π –≤ —Ä–µ–∞–ª—å–Ω–æ–º –≤—Ä–µ–º–µ–Ω–∏',
            'code_template': '''import 'dart:async';

// –ú–æ–¥–µ–ª—å —Å–æ–æ–±—â–µ–Ω–∏—è
class Message {
  final String user;
  final String text;
  final DateTime timestamp;
  
  Message(this.user, this.text) : timestamp = DateTime.now();
  
  @override
  String toString() => '[$user] $text (${timestamp.hour}:${timestamp.minute})';
}

// –°–∏—Å—Ç–µ–º–∞ —á–∞—Ç–∞
class ChatSystem {
  final StreamController<Message> _messageController = StreamController.broadcast();
  final List<String> _users = [];
  
  // –ü–æ—Ç–æ–∫ —Å–æ–æ–±—â–µ–Ω–∏–π
  Stream<Message> get messages => _messageController.stream;
  
  // –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
  void connectUser(String username) {
    if (!_users.contains(username)) {
      _users.add(username);
      _addSystemMessage('$username –ø—Ä–∏—Å–æ–µ–¥–∏–Ω–∏–ª—Å—è –∫ —á–∞—Ç—É');
    }
  }
  
  // –û—Ç–ø—Ä–∞–≤–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏—è
  void sendMessage(String user, String text) {
    if (_users.contains(user)) {
      _messageController.add(Message(user, text));
    }
  }
  
  // –°–∏—Å—Ç–µ–º–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ
  void _addSystemMessage(String text) {
    _messageController.add(Message('–°–∏—Å—Ç–µ–º–∞', text));
  }
  
  // –û—Ç–∫–ª—é—á–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
  void disconnectUser(String username) {
    _users.remove(username);
    _addSystemMessage('$username –ø–æ–∫–∏–Ω—É–ª —á–∞—Ç');
  }
  
  void dispose() {
    _messageController.close();
  }
}

void main() async {
  print('=== –°–ò–°–¢–ï–ú–ê –ß–ê–¢–ê –ù–ê STREAMS ===\\n');
  
  final chat = ChatSystem();
  
  // –ü–æ–¥–ø–∏—Å–∫–∞ –Ω–∞ —Å–æ–æ–±—â–µ–Ω–∏—è —Å —Ñ–∏–ª—å—Ç—Ä–∞—Ü–∏–µ–π
  final subscription = chat.messages
    .where((msg) => msg.text.isNotEmpty)
    .listen((message) {
      print('üì® $message');
    });
  
  // –°–∏–º—É–ª—è—Ü–∏—è —Ä–∞–±–æ—Ç—ã —á–∞—Ç–∞
  chat.connectUser('–ê–ª–∏—Å–∞');
  chat.connectUser('–ë–æ–±');
  
  chat.sendMessage('–ê–ª–∏—Å–∞', '–ü—Ä–∏–≤–µ—Ç –≤—Å–µ–º!');
  
  // –î–æ–±–∞–≤–ª—è–µ–º –∑–∞–¥–µ—Ä–∂–∫–∏ –¥–ª—è –¥–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏–∏
  await Future.delayed(Duration(milliseconds: 100));
  chat.sendMessage('–ë–æ–±', '–ü—Ä–∏–≤–µ—Ç, –ê–ª–∏—Å–∞!');
  
  await Future.delayed(Duration(milliseconds: 100));
  chat.sendMessage('–ê–ª–∏—Å–∞', '–ö–∞–∫ –¥–µ–ª–∞?');
  
  await Future.delayed(Duration(milliseconds: 100));
  chat.disconnectUser('–ë–æ–±');
  
  await Future.delayed(Duration(milliseconds: 100));
  chat.sendMessage('–ê–ª–∏—Å–∞', '–ë–æ–± —É—à–µ–ª...');
  
  // –û—á–∏—Å—Ç–∫–∞ —Ä–µ—Å—É—Ä—Å–æ–≤
  await Future.delayed(Duration(milliseconds: 200));
  subscription.cancel();
  chat.dispose();
  
  print('\\n‚ú® –ß–∞—Ç –∑–∞–≤–µ—Ä—à–µ–Ω');
}''',
            'expected_output': '=== –°–ò–°–¢–ï–ú–ê –ß–ê–¢–ê –ù–ê STREAMS ===\\n\\nüì® [–°–∏—Å—Ç–µ–º–∞] –ê–ª–∏—Å–∞ –ø—Ä–∏—Å–æ–µ–¥–∏–Ω–∏–ª—Å—è –∫ —á–∞—Ç—É\\nüì® [–°–∏—Å—Ç–µ–º–∞] –ë–æ–± –ø—Ä–∏—Å–æ–µ–¥–∏–Ω–∏–ª—Å—è –∫ —á–∞—Ç—É\\nüì® [–ê–ª–∏—Å–∞] –ü—Ä–∏–≤–µ—Ç –≤—Å–µ–º!\\nüì® [–ë–æ–±] –ü—Ä–∏–≤–µ—Ç, –ê–ª–∏—Å–∞!\\nüì® [–ê–ª–∏—Å–∞] –ö–∞–∫ –¥–µ–ª–∞?\\nüì® [–°–∏—Å—Ç–µ–º–∞] –ë–æ–± –ø–æ–∫–∏–Ω—É–ª —á–∞—Ç\\nüì® [–ê–ª–∏—Å–∞] –ë–æ–± —É—à–µ–ª...\\n\\n‚ú® –ß–∞—Ç –∑–∞–≤–µ—Ä—à–µ–Ω',
            'hints': [
                'StreamController.broadcast() –ø–æ–∑–≤–æ–ª—è–µ—Ç –º–Ω–æ–∂–µ—Å—Ç–≤–µ–Ω–Ω—ã–µ –ø–æ–¥–ø–∏—Å–∫–∏',
                'async* –∏ yield —Å–æ–∑–¥–∞—é—Ç –≥–µ–Ω–µ—Ä–∞—Ç–æ—Ä—ã Stream',
                'where() –∏ map() - –æ—Å–Ω–æ–≤–Ω—ã–µ –æ–ø–µ—Ä–∞—Ç–æ—Ä—ã —Ñ–∏–ª—å—Ç—Ä–∞—Ü–∏–∏',
                '–ù–µ –∑–∞–±—ã–≤–∞–π—Ç–µ –∑–∞–∫—Ä—ã–≤–∞—Ç—å StreamController'
            ]
        },
        {
            'id': 32,
            'title': 'Isolates –∏ –º–Ω–æ–≥–æ–ø–æ—Ç–æ—á–Ω–æ—Å—Ç—å',
            'category': '–ü—Ä–æ–¥–≤–∏–Ω—É—Ç—ã–µ –∫–æ–Ω—Ü–µ–ø—Ü–∏–∏',
            'difficulty': '–ü—Ä–æ–¥–≤–∏–Ω—É—Ç—ã–π',
            'description': '–ü–∞—Ä–∞–ª–ª–µ–ª—å–Ω—ã–µ –≤—ã—á–∏—Å–ª–µ–Ω–∏—è –∏ –∏–∑–æ–ª—è—Ü–∏—è –ø–∞–º—è—Ç–∏',
            'theory': '''
## Isolates –≤ Dart

Isolate - –∏–∑–æ–ª–∏—Ä–æ–≤–∞–Ω–Ω–∞—è —Å—Ä–µ–¥–∞ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è —Å —Å–æ–±—Å—Ç–≤–µ–Ω–Ω–æ–π –ø–∞–º—è—Ç—å—é. –û—Å–Ω–æ–≤–∞ –º–Ω–æ–≥–æ–ø–æ—Ç–æ—á–Ω–æ—Å—Ç–∏ –≤ Dart.

### –ö–ª—é—á–µ–≤—ã–µ –æ—Å–æ–±–µ–Ω–Ω–æ—Å—Ç–∏:
- **–ò–∑–æ–ª—è—Ü–∏—è –ø–∞–º—è—Ç–∏** - isolates –Ω–µ –¥–µ–ª—è—Ç –ø–∞–º—è—Ç—å
- **–û–±–º–µ–Ω —Å–æ–æ–±—â–µ–Ω–∏—è–º–∏** - —á–µ—Ä–µ–∑ SendPort/ReceivePort
- **–ò—Å—Ç–∏–Ω–Ω—ã–π –ø–∞—Ä–∞–ª–ª–µ–ª–∏–∑–º** - –Ω–∞—Å—Ç–æ—è—â–∏–µ –ø–æ—Ç–æ–∫–∏ –û–°
- **–ë–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç—å** - –Ω–µ—Ç race conditions

### –°–æ–∑–¥–∞–Ω–∏–µ Isolate:
```dart
import 'dart:isolate';

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è isolate
void isolateEntry(SendPort sendPort) {
  // –¢—è–∂–µ–ª—ã–µ –≤—ã—á–∏—Å–ª–µ–Ω–∏—è
  int result = heavyComputation();
  sendPort.send(result);
}

// –ó–∞–ø—É—Å–∫ isolate
final receivePort = ReceivePort();
await Isolate.spawn(isolateEntry, receivePort.sendPort);
final result = await receivePort.first;
```

### –ü—Ä–∞–∫—Ç–∏—á–µ—Å–∫–∏–µ –ø—Ä–∏–º–µ–Ω–µ–Ω–∏—è:
- –û–±—Ä–∞–±–æ—Ç–∫–∞ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π
- –ü–∞—Ä—Å–∏–Ω–≥ –±–æ–ª—å—à–∏—Ö JSON —Ñ–∞–π–ª–æ–≤
- –ö—Ä–∏–ø—Ç–æ–≥—Ä–∞—Ñ–∏—á–µ—Å–∫–∏–µ –æ–ø–µ—Ä–∞—Ü–∏–∏
- –§–æ–Ω–æ–≤—ã–µ –∑–∞–¥–∞—á–∏

### Compute() helper:
```dart
import 'dart:isolate';

// –ü—Ä–æ—Å—Ç–æ–π —Å–ø–æ—Å–æ–± –∑–∞–ø—É—Å–∫–∞ —Ç—è–∂–µ–ª—ã—Ö –æ–ø–µ—Ä–∞—Ü–∏–π
int heavyTask(int number) {
  // –°–∏–º—É–ª—è—Ü–∏—è —Ç—è–∂–µ–ª–æ–π –∑–∞–¥–∞—á–∏
  return number * number;
}

final result = await compute(heavyTask, 1000000);
```
            ''',
            'task': '–°–æ–∑–¥–∞–π—Ç–µ —Å–∏—Å—Ç–µ–º—É –ø–∞—Ä–∞–ª–ª–µ–ª—å–Ω–æ–π –æ–±—Ä–∞–±–æ—Ç–∫–∏ –¥–∞–Ω–Ω—ã—Ö —Å –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ–º Isolates',
            'code_template': '''import 'dart:isolate';
import 'dart:math';

// –ó–∞–¥–∞—á–∞ –¥–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏ –≤ isolate
class ProcessingTask {
  final List<int> data;
  final String taskId;
  
  ProcessingTask(this.data, this.taskId);
}

// –†–µ–∑—É–ª—å—Ç–∞—Ç –æ–±—Ä–∞–±–æ—Ç–∫–∏
class ProcessingResult {
  final String taskId;
  final int sum;
  final double average;
  final int max;
  final int min;
  
  ProcessingResult(this.taskId, this.sum, this.average, this.max, this.min);
  
  @override
  String toString() => 'Task $taskId: sum=$sum, avg=${average.toStringAsFixed(2)}, max=$max, min=$min';
}

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è isolate - –æ–±—Ä–∞–±–æ—Ç–∫–∞ –¥–∞–Ω–Ω—ã—Ö
void dataProcessor(SendPort sendPort) {
  final receivePort = ReceivePort();
  sendPort.send(receivePort.sendPort);
  
  receivePort.listen((message) {
    if (message is ProcessingTask) {
      // –°–∏–º—É–ª—è—Ü–∏—è —Ç—è–∂–µ–ª–æ–π –æ–±—Ä–∞–±–æ—Ç–∫–∏
      final data = message.data;
      
      // –í—ã—á–∏—Å–ª–µ–Ω–∏—è
      int sum = data.reduce((a, b) => a + b);
      double average = sum / data.length;
      int max = data.reduce((a, b) => a > b ? a : b);
      int min = data.reduce((a, b) => a < b ? a : b);
      
      // –ò—Å–∫—É—Å—Å—Ç–≤–µ–Ω–Ω–∞—è –∑–∞–¥–µ—Ä–∂–∫–∞ –¥–ª—è –¥–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏–∏
      for (int i = 0; i < 1000000; i++) {
        math.sqrt(i);
      }
      
      final result = ProcessingResult(message.taskId, sum, average, max, min);
      sendPort.send(result);
    }
  });
}

// –ú–µ–Ω–µ–¥–∂–µ—Ä –ø–∞—Ä–∞–ª–ª–µ–ª—å–Ω–æ–π –æ–±—Ä–∞–±–æ—Ç–∫–∏
class ParallelProcessor {
  final List<Isolate> _isolates = [];
  final List<ReceivePort> _receivePorts = [];
  final List<SendPort> _sendPorts = [];
  
  // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è isolates
  Future<void> initialize(int isolateCount) async {
    print('üöÄ –°–æ–∑–¥–∞–Ω–∏–µ $isolateCount isolates...');
    
    for (int i = 0; i < isolateCount; i++) {
      final receivePort = ReceivePort();
      final isolate = await Isolate.spawn(dataProcessor, receivePort.sendPort);
      
      final sendPort = await receivePort.first as SendPort;
      
      _isolates.add(isolate);
      _receivePorts.add(receivePort);
      _sendPorts.add(sendPort);
      
      print('‚úÖ Isolate ${i + 1} –≥–æ—Ç–æ–≤');
    }
  }
  
  // –û–±—Ä–∞–±–æ—Ç–∫–∞ –∑–∞–¥–∞—á –ø–∞—Ä–∞–ª–ª–µ–ª—å–Ω–æ
  Future<List<ProcessingResult>> processTasks(List<ProcessingTask> tasks) async {
    print('\\nüìä –û–±—Ä–∞–±–æ—Ç–∫–∞ ${tasks.length} –∑–∞–¥–∞—á...');
    
    final futures = <Future<ProcessingResult>>[];
    
    for (int i = 0; i < tasks.length; i++) {
      final isolateIndex = i % _sendPorts.length;
      final sendPort = _sendPorts[isolateIndex];
      final receivePort = _receivePorts[isolateIndex];
      
      sendPort.send(tasks[i]);
      futures.add(receivePort.first.then((result) => result as ProcessingResult));
    }
    
    return await Future.wait(futures);
  }
  
  // –û—á–∏—Å—Ç–∫–∞ —Ä–µ—Å—É—Ä—Å–æ–≤
  void dispose() {
    for (final isolate in _isolates) {
      isolate.kill(priority: Isolate.immediate);
    }
    for (final port in _receivePorts) {
      port.close();
    }
    _isolates.clear();
    _receivePorts.clear();
    _sendPorts.clear();
  }
}

void main() async {
  print('=== –ü–ê–†–ê–õ–õ–ï–õ–¨–ù–ê–Ø –û–ë–†–ê–ë–û–¢–ö–ê –î–ê–ù–ù–´–• ===');
  
  final processor = ParallelProcessor();
  await processor.initialize(3); // 3 isolate
  
  // –°–æ–∑–¥–∞–µ–º —Ç–µ—Å—Ç–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ
  final tasks = <ProcessingTask>[];
  final random = Random();
  
  for (int i = 1; i <= 6; i++) {
    final data = List.generate(1000, (_) => random.nextInt(1000));
    tasks.add(ProcessingTask(data, 'T$i'));
  }
  
  final stopwatch = Stopwatch()..start();
  
  // –ü–∞—Ä–∞–ª–ª–µ–ª—å–Ω–∞—è –æ–±—Ä–∞–±–æ—Ç–∫–∞
  final results = await processor.processTasks(tasks);
  
  stopwatch.stop();
  
  print('\\nüìà –†–ï–ó–£–õ–¨–¢–ê–¢–´:');
  for (final result in results) {
    print('  $result');
  }
  
  print('\\n‚è±Ô∏è –í—Ä–µ–º—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è: ${stopwatch.elapsedMilliseconds}ms');
  print('üßÆ –û–±—Ä–∞–±–æ—Ç–∞–Ω–æ ${results.length} –∑–∞–¥–∞—á –ø–∞—Ä–∞–ª–ª–µ–ª—å–Ω–æ');
  
  processor.dispose();
  print('\\n‚ú® –í—Å–µ isolates –∑–∞–≤–µ—Ä—à–µ–Ω—ã');
}''',
            'expected_output': '=== –ü–ê–†–ê–õ–õ–ï–õ–¨–ù–ê–Ø –û–ë–†–ê–ë–û–¢–ö–ê –î–ê–ù–ù–´–• ===\\nüöÄ –°–æ–∑–¥–∞–Ω–∏–µ 3 isolates...\\n‚úÖ Isolate 1 –≥–æ—Ç–æ–≤\\n‚úÖ Isolate 2 –≥–æ—Ç–æ–≤\\n‚úÖ Isolate 3 –≥–æ—Ç–æ–≤\\n\\nüìä –û–±—Ä–∞–±–æ—Ç–∫–∞ 6 –∑–∞–¥–∞—á...\\n\\nüìà –†–ï–ó–£–õ–¨–¢–ê–¢–´:\\n  Task T1: sum=499500, avg=499.50, max=999, min=1\\n  Task T2: sum=501234, avg=501.23, max=998, min=2\\n  Task T3: sum=498765, avg=498.77, max=997, min=0\\n  Task T4: sum=502100, avg=502.10, max=999, min=3\\n  Task T5: sum=497890, avg=497.89, max=996, min=1\\n  Task T6: sum=503210, avg=503.21, max=998, min=4\\n\\n‚è±Ô∏è –í—Ä–µ–º—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è: 1250ms\\nüßÆ –û–±—Ä–∞–±–æ—Ç–∞–Ω–æ 6 –∑–∞–¥–∞—á –ø–∞—Ä–∞–ª–ª–µ–ª—å–Ω–æ\\n\\n‚ú® –í—Å–µ isolates –∑–∞–≤–µ—Ä—à–µ–Ω—ã',
            'hints': [
                'Isolate.spawn() —Å–æ–∑–¥–∞–µ—Ç –Ω–æ–≤—ã–π isolate',
                'SendPort/ReceivePort –¥–ª—è –æ–±–º–µ–Ω–∞ —Å–æ–æ–±—â–µ–Ω–∏—è–º–∏',
                'Isolates –Ω–µ –¥–µ–ª—è—Ç –ø–∞–º—è—Ç—å - —Ç–æ–ª—å–∫–æ —Å–æ–æ–±—â–µ–Ω–∏—è',
                '–ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ compute() –¥–ª—è –ø—Ä–æ—Å—Ç—ã—Ö –∑–∞–¥–∞—á'
            ]
        },
        {
            'id': 33,
            'title': 'Package Management –∏ Pub.dev',
            'category': '–ü—Ä–æ–¥–≤–∏–Ω—É—Ç—ã–µ –∫–æ–Ω—Ü–µ–ø—Ü–∏–∏', 
            'difficulty': '–°—Ä–µ–¥–Ω–∏–π',
            'description': '–†–∞–±–æ—Ç–∞ —Å –ø–∞–∫–µ—Ç–∞–º–∏ –∏ —É–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç—è–º–∏',
            'theory': '''
## Package Management –≤ Dart

–°–∏—Å—Ç–µ–º–∞ —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –ø–∞–∫–µ—Ç–∞–º–∏ —á–µ—Ä–µ–∑ pub.dev - —Ü–µ–Ω—Ç—Ä–∞–ª—å–Ω—ã–π —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏–π Dart –ø–∞–∫–µ—Ç–æ–≤.

### pubspec.yaml:
```yaml
name: my_project
description: –û–ø–∏—Å–∞–Ω–∏–µ –ø—Ä–æ–µ–∫—Ç–∞
version: 1.0.0

environment:
  sdk: '>=2.17.0 <4.0.0'

dependencies:
  http: ^0.13.5          # HTTP –∫–ª–∏–µ–Ω—Ç
  json_annotation: ^4.8.1  # JSON –∞–Ω–Ω–æ—Ç–∞—Ü–∏–∏
  
dev_dependencies:
  build_runner: ^2.3.3   # –ö–æ–¥–æ–≥–µ–Ω–µ—Ä–∞—Ü–∏—è
  json_serializable: ^6.6.2  # JSON —Å–µ—Ä–∏–∞–ª–∏–∑–∞—Ü–∏—è
  test: ^1.21.0          # –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ
```

### –û—Å–Ω–æ–≤–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã:
```bash
dart pub get        # –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π
dart pub upgrade    # –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –ø–∞–∫–µ—Ç–æ–≤
dart pub deps       # –ê–Ω–∞–ª–∏–∑ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π
dart pub publish    # –ü—É–±–ª–∏–∫–∞—Ü–∏—è –ø–∞–∫–µ—Ç–∞
```

### –°–æ–∑–¥–∞–Ω–∏–µ –ø–∞–∫–µ—Ç–∞:
```dart
// lib/my_package.dart
library my_package;

export 'src/core.dart';
export 'src/utils.dart';

// –ü—É–±–ª–∏—á–Ω—ã–π API –ø–∞–∫–µ—Ç–∞
```

### –°–µ–º–∞–Ω—Ç–∏—á–µ—Å–∫–æ–µ –≤–µ—Ä—Å–∏–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ:
- **MAJOR.MINOR.PATCH** (1.2.3)
- **^1.2.3** - —Å–æ–≤–º–µ—Å—Ç–∏–º—ã–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è (>=1.2.3 <2.0.0)
- **~1.2.3** - –º–∏–Ω–æ—Ä–Ω—ã–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è (>=1.2.3 <1.3.0)

### –õ—É—á—à–∏–µ –ø—Ä–∞–∫—Ç–∏–∫–∏:
- –ß–µ—Ç–∫–æ–µ –æ–ø–∏—Å–∞–Ω–∏–µ –≤ README.md
- –î–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏—è API
- –ü—Ä–∏–º–µ—Ä—ã –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è
- –°–µ–º–∞–Ω—Ç–∏—á–µ—Å–∫–æ–µ –≤–µ—Ä—Å–∏–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ
- –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –≤—Å–µ—Ö —Ñ—É–Ω–∫—Ü–∏–π
            ''',
            'task': '–°–æ–∑–¥–∞–π—Ç–µ —Å–æ–±—Å—Ç–≤–µ–Ω–Ω—ã–π –ø–∞–∫–µ—Ç –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å –≤–∞–ª—é—Ç–∞–º–∏ –∏ –¥–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏—é –µ–≥–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è',
            'code_template': '''// –°–æ–∑–¥–∞–µ–º –ø–∞–∫–µ—Ç –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å –≤–∞–ª—é—Ç–∞–º–∏
// lib/currency_converter.dart

/// –ü–∞–∫–µ—Ç –¥–ª—è –∫–æ–Ω–≤–µ—Ä—Ç–∞—Ü–∏–∏ –≤–∞–ª—é—Ç
library currency_converter;

import 'dart:math';

/// –ö–ª–∞—Å—Å –≤–∞–ª—é—Ç—ã
class Currency {
  final String code;
  final String symbol;
  final String name;
  
  const Currency(this.code, this.symbol, this.name);
  
  @override
  String toString() => '$name ($code)';
  
  @override
  bool operator ==(Object other) =>
      identical(this, other) ||
      other is Currency && code == other.code;
  
  @override
  int get hashCode => code.hashCode;
}

/// –ü—Ä–µ–¥–æ–ø—Ä–µ–¥–µ–ª–µ–Ω–Ω—ã–µ –≤–∞–ª—é—Ç—ã
class Currencies {
  static const Currency usd = Currency('USD', r'$', 'US Dollar');
  static const Currency eur = Currency('EUR', '‚Ç¨', 'Euro');
  static const Currency rub = Currency('RUB', '‚ÇΩ', 'Russian Ruble');
  static const Currency jpy = Currency('JPY', '¬•', 'Japanese Yen');
  static const Currency gbp = Currency('GBP', '¬£', 'British Pound');
  
  static const List<Currency> all = [usd, eur, rub, jpy, gbp];
}

/// –°—É–º–º–∞ –≤ –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–Ω–æ–π –≤–∞–ª—é—Ç–µ
class Money {
  final double amount;
  final Currency currency;
  
  const Money(this.amount, this.currency);
  
  /// –§–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–Ω—ã–π –≤—ã–≤–æ–¥
  String get formatted => '${currency.symbol}${amount.toStringAsFixed(2)}';
  
  @override
  String toString() => '$formatted ${currency.code}';
  
  /// –û–ø–µ—Ä–∞—Ü–∏–∏ —Å –¥–µ–Ω—å–≥–∞–º–∏ –≤ –æ–¥–Ω–æ–π –≤–∞–ª—é—Ç–µ
  Money operator +(Money other) {
    if (currency != other.currency) {
      throw ArgumentError('–ù–µ–ª—å–∑—è —Å–∫–ª–∞–¥—ã–≤–∞—Ç—å —Ä–∞–∑–Ω—ã–µ –≤–∞–ª—é—Ç—ã –Ω–∞–ø—Ä—è–º—É—é');
    }
    return Money(amount + other.amount, currency);
  }
  
  Money operator -(Money other) {
    if (currency != other.currency) {
      throw ArgumentError('–ù–µ–ª—å–∑—è –≤—ã—á–∏—Ç–∞—Ç—å —Ä–∞–∑–Ω—ã–µ –≤–∞–ª—é—Ç—ã –Ω–∞–ø—Ä—è–º—É—é');
    }
    return Money(amount - other.amount, currency);
  }
  
  Money operator *(double multiplier) => Money(amount * multiplier, currency);
  Money operator /(double divisor) => Money(amount / divisor, currency);
}

/// –ö–æ–Ω–≤–µ—Ä—Ç–µ—Ä –≤–∞–ª—é—Ç
class CurrencyConverter {
  final Map<String, double> _rates = {};
  Currency _baseCurrency = Currencies.usd;
  
  CurrencyConverter() {
    _initializeRates();
  }
  
  /// –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –∫—É—Ä—Å–æ–≤ (—Å–∏–º—É–ª—è—Ü–∏—è)
  void _initializeRates() {
    final random = Random();
    _rates['USD'] = 1.0; // –±–∞–∑–æ–≤–∞—è –≤–∞–ª—é—Ç–∞
    _rates['EUR'] = 0.85 + random.nextDouble() * 0.1;
    _rates['RUB'] = 75.0 + random.nextDouble() * 10;
    _rates['JPY'] = 110.0 + random.nextDouble() * 20;
    _rates['GBP'] = 0.73 + random.nextDouble() * 0.1;
  }
  
  /// –ü–æ–ª—É—á–∏—Ç—å –∫—É—Ä—Å –≤–∞–ª—é—Ç—ã
  double getRate(Currency currency) {
    return _rates[currency.code] ?? 1.0;
  }
  
  /// –ö–æ–Ω–≤–µ—Ä—Ç–∞—Ü–∏—è –º–µ–∂–¥—É –≤–∞–ª—é—Ç–∞–º–∏
  Money convert(Money money, Currency targetCurrency) {
    if (money.currency == targetCurrency) return money;
    
    // –ö–æ–Ω–≤–µ—Ä—Ç–∏—Ä—É–µ–º —á–µ—Ä–µ–∑ –±–∞–∑–æ–≤—É—é –≤–∞–ª—é—Ç—É
    final fromRate = getRate(money.currency);
    final toRate = getRate(targetCurrency);
    
    final baseAmount = money.amount / fromRate;
    final targetAmount = baseAmount * toRate;
    
    return Money(targetAmount, targetCurrency);
  }
  
  /// –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –∫—É—Ä—Å–∞ –≤–∞–ª—é—Ç—ã
  void updateRate(Currency currency, double rate) {
    _rates[currency.code] = rate;
  }
  
  /// –ü–æ–ª—É—á–∏—Ç—å –≤—Å–µ –¥–æ—Å—Ç—É–ø–Ω—ã–µ –∫—É—Ä—Å—ã
  Map<Currency, double> getAllRates() {
    final rates = <Currency, double>{};
    for (final currency in Currencies.all) {
      rates[currency] = getRate(currency);
    }
    return rates;
  }
}

/// –ü–æ—Ä—Ç—Ñ–µ–ª—å –≤–∞–ª—é—Ç
class CurrencyPortfolio {
  final Map<Currency, double> _holdings = {};
  final CurrencyConverter _converter;
  
  CurrencyPortfolio(this._converter);
  
  /// –î–æ–±–∞–≤–∏—Ç—å –≤–∞–ª—é—Ç—É –≤ –ø–æ—Ä—Ç—Ñ–µ–ª—å
  void addMoney(Money money) {
    _holdings[money.currency] = (_holdings[money.currency] ?? 0) + money.amount;
  }
  
  /// –ü–æ–ª—É—á–∏—Ç—å –±–∞–ª–∞–Ω—Å –≤ –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–π –≤–∞–ª—é—Ç–µ
  Money getBalance(Currency currency) {
    return Money(_holdings[currency] ?? 0, currency);
  }
  
  /// –û–±—â–∞—è —Å—Ç–æ–∏–º–æ—Å—Ç—å –ø–æ—Ä—Ç—Ñ–µ–ª—è –≤ –±–∞–∑–æ–≤–æ–π –≤–∞–ª—é—Ç–µ
  Money getTotalValue(Currency targetCurrency) {
    double totalValue = 0;
    
    for (final entry in _holdings.entries) {
      final money = Money(entry.value, entry.key);
      final converted = _converter.convert(money, targetCurrency);
      totalValue += converted.amount;
    }
    
    return Money(totalValue, targetCurrency);
  }
  
  /// –ü–æ–ª—É—á–∏—Ç—å –≤—Å–µ –∞–∫—Ç–∏–≤—ã
  List<Money> getAllHoldings() {
    return _holdings.entries
        .where((entry) => entry.value > 0)
        .map((entry) => Money(entry.value, entry.key))
        .toList();
  }
}

void main() {
  print('=== –°–ò–°–¢–ï–ú–ê –ö–û–ù–í–ï–†–¢–ê–¶–ò–ò –í–ê–õ–Æ–¢ ===\\n');
  
  final converter = CurrencyConverter();
  final portfolio = CurrencyPortfolio(converter);
  
  // –î–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏—è —Ä–∞–±–æ—Ç—ã —Å –≤–∞–ª—é—Ç–∞–º–∏
  print('üí∞ –î–æ—Å—Ç—É–ø–Ω—ã–µ –≤–∞–ª—é—Ç—ã:');
  for (final currency in Currencies.all) {
    final rate = converter.getRate(currency);
    print('  ${currency.toString().padRight(20)} –ö—É—Ä—Å: ${rate.toStringAsFixed(4)}');
  }
  
  print('\\nüîÑ –ö–æ–Ω–≤–µ—Ä—Ç–∞—Ü–∏—è –≤–∞–ª—é—Ç:');
  final money1 = Money(100, Currencies.usd);
  final money2 = converter.convert(money1, Currencies.eur);
  final money3 = converter.convert(money1, Currencies.rub);
  
  print('  $money1');
  print('  ‚Üì');
  print('  $money2');
  print('  $money3');
  
  // –†–∞–±–æ—Ç–∞ —Å –ø–æ—Ä—Ç—Ñ–µ–ª–µ–º
  print('\\nüìä –ü–æ—Ä—Ç—Ñ–µ–ª—å –≤–∞–ª—é—Ç:');
  portfolio.addMoney(Money(1000, Currencies.usd));
  portfolio.addMoney(Money(500, Currencies.eur));
  portfolio.addMoney(Money(50000, Currencies.rub));
  portfolio.addMoney(Money(10000, Currencies.jpy));
  
  final holdings = portfolio.getAllHoldings();
  for (final money in holdings) {
    print('  ${money.toString().padRight(25)} (${money.currency.name})');
  }
  
  final totalInUsd = portfolio.getTotalValue(Currencies.usd);
  final totalInEur = portfolio.getTotalValue(Currencies.eur);
  
  print('\\nüíº –û–±—â–∞—è —Å—Ç–æ–∏–º–æ—Å—Ç—å –ø–æ—Ä—Ç—Ñ–µ–ª—è:');
  print('  –í –¥–æ–ª–ª–∞—Ä–∞—Ö: $totalInUsd');
  print('  –í –µ–≤—Ä–æ: $totalInEur');
  
  // –ú–∞—Ç–µ–º–∞—Ç–∏—á–µ—Å–∫–∏–µ –æ–ø–µ—Ä–∞—Ü–∏–∏
  print('\\nüßÆ –û–ø–µ—Ä–∞—Ü–∏–∏ —Å –¥–µ–Ω—å–≥–∞–º–∏:');
  final salary = Money(5000, Currencies.usd);
  final bonus = Money(1000, Currencies.usd);
  final total = salary + bonus;
  final tax = total * 0.13; // 13% –Ω–∞–ª–æ–≥
  final netIncome = total - tax;
  
  print('  –ó–∞—Ä–ø–ª–∞—Ç–∞: $salary');
  print('  –ë–æ–Ω—É—Å: $bonus');
  print('  –í—Å–µ–≥–æ: $total');
  print('  –ù–∞–ª–æ–≥ (13%): $tax');
  print('  –ö –ø–æ–ª—É—á–µ–Ω–∏—é: $netIncome');
  
  print('\\n‚ú® –î–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏—è –ø–∞–∫–µ—Ç–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞');
}''',
            'expected_output': '=== –°–ò–°–¢–ï–ú–ê –ö–û–ù–í–ï–†–¢–ê–¶–ò–ò –í–ê–õ–Æ–¢ ===\\n\\nüí∞ –î–æ—Å—Ç—É–ø–Ω—ã–µ –≤–∞–ª—é—Ç—ã:\\n  US Dollar (USD)      –ö—É—Ä—Å: 1.0000\\n  Euro (EUR)           –ö—É—Ä—Å: 0.8756\\n  Russian Ruble (RUB)  –ö—É—Ä—Å: 78.4521\\n  Japanese Yen (JPY)   –ö—É—Ä—Å: 125.7834\\n  British Pound (GBP)  –ö—É—Ä—Å: 0.7654\\n\\nüîÑ –ö–æ–Ω–≤–µ—Ä—Ç–∞—Ü–∏—è –≤–∞–ª—é—Ç:\\n  $100.00 USD\\n  ‚Üì\\n  ‚Ç¨87.56 EUR\\n  ‚ÇΩ7845.21 RUB\\n\\nüìä –ü–æ—Ä—Ç—Ñ–µ–ª—å –≤–∞–ª—é—Ç:\\n  $1000.00 USD             (US Dollar)\\n  ‚Ç¨500.00 EUR              (Euro)\\n  ‚ÇΩ50000.00 RUB            (Russian Ruble)\\n  ¬•10000.00 JPY            (Japanese Yen)\\n\\nüíº –û–±—â–∞—è —Å—Ç–æ–∏–º–æ—Å—Ç—å –ø–æ—Ä—Ç—Ñ–µ–ª—è:\\n  –í –¥–æ–ª–ª–∞—Ä–∞—Ö: $2208.32 USD\\n  –í –µ–≤—Ä–æ: ‚Ç¨1934.15 EUR\\n\\nüßÆ –û–ø–µ—Ä–∞—Ü–∏–∏ —Å –¥–µ–Ω—å–≥–∞–º–∏:\\n  –ó–∞—Ä–ø–ª–∞—Ç–∞: $5000.00 USD\\n  –ë–æ–Ω—É—Å: $1000.00 USD\\n  –í—Å–µ–≥–æ: $6000.00 USD\\n  –ù–∞–ª–æ–≥ (13%): $780.00 USD\\n  –ö –ø–æ–ª—É—á–µ–Ω–∏—é: $5220.00 USD\\n\\n‚ú® –î–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏—è –ø–∞–∫–µ—Ç–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞',
            'hints': [
                'pubspec.yaml –æ–ø—Ä–µ–¥–µ–ª—è–µ—Ç –º–µ—Ç–∞–¥–∞–Ω–Ω—ã–µ –∏ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏',
                'library –∏ export –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –ø—É–±–ª–∏—á–Ω–æ–≥–æ API',
                '–°–µ–º–∞–Ω—Ç–∏—á–µ—Å–∫–æ–µ –≤–µ—Ä—Å–∏–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ –¥–ª—è —Å–æ–≤–º–µ—Å—Ç–∏–º–æ—Å—Ç–∏',
                '–î–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏—è –∏ –ø—Ä–∏–º–µ—Ä—ã - –≤–∞–∂–Ω–∞—è —á–∞—Å—Ç—å –ø–∞–∫–µ—Ç–∞'
            ]
        }
    ]
    return jsonify(lessons_data)

# API –¥–ª—è —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è –ø—Ä–æ–≥—Ä–µ—Å—Å–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
@app.route('/api/save_progress', methods=['POST'])
@login_required
def save_progress():
    try:
        data = request.json
        course_id = data.get('course_id')
        lesson_id = data.get('lesson_id')
        completed = data.get('completed', False)
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —Å—É—â–µ—Å—Ç–≤—É–µ—Ç –ª–∏ —É–∂–µ –∑–∞–ø–∏—Å—å –æ –ø—Ä–æ–≥—Ä–µ—Å—Å–µ
        progress = UserProgress.query.filter_by(
            user_id=current_user.id, 
            course_id=course_id, 
            lesson_id=lesson_id
        ).first()
        
        if progress:
            # –û–±–Ω–æ–≤–ª—è–µ–º —Å—É—â–µ—Å—Ç–≤—É—é—â—É—é –∑–∞–ø–∏—Å—å
            progress.completed = completed
        else:
            # –°–æ–∑–¥–∞–µ–º –Ω–æ–≤—É—é –∑–∞–ø–∏—Å—å
            progress = UserProgress(
                user_id=current_user.id,
                course_id=course_id,
                lesson_id=lesson_id,
                completed=completed
            )
            db.session.add(progress)
        
        db.session.commit()
        
        return jsonify({
            'success': True,
            'message': '–ü—Ä–æ–≥—Ä–µ—Å—Å —Å–æ—Ö—Ä–∞–Ω–µ–Ω'
        })
    except Exception as e:
        db.session.rollback()
        return jsonify({
            'success': False,
            'error': f'–û—à–∏–±–∫–∞ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è –ø—Ä–æ–≥—Ä–µ—Å—Å–∞: {str(e)}'
        })

# API –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –ø—Ä–æ–≥—Ä–µ—Å—Å–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
@app.route('/api/get_progress')
@login_required
def get_progress():
    try:
        # –ü–æ–ª—É—á–∞–µ–º –≤–µ—Å—å –ø—Ä–æ–≥—Ä–µ—Å—Å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        user_progress = UserProgress.query.filter_by(user_id=current_user.id).all()
        
        # –ü—Ä–µ–æ–±—Ä–∞–∑—É–µ–º –≤ —Å–ø–∏—Å–æ–∫ —Å–ª–æ–≤–∞—Ä–µ–π
        progress_list = []
        for progress in user_progress:
            progress_list.append({
                'course_id': progress.course_id,
                'lesson_id': progress.lesson_id,
                'completed': progress.completed,
                'completed_at': progress.completed_at.isoformat() if progress.completed_at else None
            })
        
        return jsonify({
            'success': True,
            'progress': progress_list
        })
    except Exception as e:
        return jsonify({
            'success': False,
            'error': f'–û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è –ø—Ä–æ–≥—Ä–µ—Å—Å–∞: {str(e)}'
        })

# –§—É–Ω–∫—Ü–∏–∏ –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å –¥–æ—Å—Ç–∏–∂–µ–Ω–∏—è–º–∏
def init_achievements():
    """–ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—ã—Ö –¥–æ—Å—Ç–∏–∂–µ–Ω–∏–π"""
    achievements_data = [
        # –î–æ—Å—Ç–∏–∂–µ–Ω–∏—è –∑–∞ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —É—Ä–æ–∫–æ–≤
        {'name': '–ü–µ—Ä–≤—ã–µ —à–∞–≥–∏', 'description': '–ó–∞–≤–µ—Ä—à–∏—Ç–µ –ø–µ—Ä–≤—ã–π —É—Ä–æ–∫', 'icon': 'üå±', 
         'category': '–ü—Ä–æ–≥—Ä–µ—Å—Å', 'requirement_type': 'lessons_count', 'requirement_value': 1, 'points': 10},
        {'name': '–ù–∞—á–∏–Ω–∞—é—â–∏–π', 'description': '–ó–∞–≤–µ—Ä—à–∏—Ç–µ 5 —É—Ä–æ–∫–æ–≤', 'icon': 'üìö', 
         'category': '–ü—Ä–æ–≥—Ä–µ—Å—Å', 'requirement_type': 'lessons_count', 'requirement_value': 5, 'points': 25},
        {'name': '–£—á–µ–Ω–∏–∫', 'description': '–ó–∞–≤–µ—Ä—à–∏—Ç–µ 10 —É—Ä–æ–∫–æ–≤', 'icon': 'üéì', 
         'category': '–ü—Ä–æ–≥—Ä–µ—Å—Å', 'requirement_type': 'lessons_count', 'requirement_value': 10, 'points': 50},
        {'name': '–ü—Ä–æ–¥–≤–∏–Ω—É—Ç—ã–π', 'description': '–ó–∞–≤–µ—Ä—à–∏—Ç–µ 20 —É—Ä–æ–∫–æ–≤', 'icon': '‚≠ê', 
         'category': '–ü—Ä–æ–≥—Ä–µ—Å—Å', 'requirement_type': 'lessons_count', 'requirement_value': 20, 'points': 100},
        {'name': '–ú–∞—Å—Ç–µ—Ä Dart', 'description': '–ó–∞–≤–µ—Ä—à–∏—Ç–µ –≤—Å–µ 33 —É—Ä–æ–∫–∞', 'icon': 'üëë', 
         'category': '–ü—Ä–æ–≥—Ä–µ—Å—Å', 'requirement_type': 'lessons_count', 'requirement_value': 33, 'points': 200},
        
        # –î–æ—Å—Ç–∏–∂–µ–Ω–∏—è –∑–∞ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏
        {'name': '–û—Å–Ω–æ–≤—ã –æ—Å–≤–æ–µ–Ω—ã', 'description': '–ó–∞–≤–µ—Ä—à–∏—Ç–µ –≤—Å–µ —É—Ä–æ–∫–∏ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ "–û—Å–Ω–æ–≤—ã"', 'icon': 'üî∞', 
         'category': '–ö–∞—Ç–µ–≥–æ—Ä–∏–∏', 'requirement_type': 'category_complete', 'requirement_value': 1, 'points': 30},
        {'name': '–ú–∞—Å—Ç–µ—Ä —Ü–∏–∫–ª–æ–≤', 'description': '–ó–∞–≤–µ—Ä—à–∏—Ç–µ –≤—Å–µ —É—Ä–æ–∫–∏ –ø–æ —Ü–∏–∫–ª–∞–º', 'icon': 'üîÑ', 
         'category': '–ö–∞—Ç–µ–≥–æ—Ä–∏–∏', 'requirement_type': 'category_complete', 'requirement_value': 2, 'points': 40},
        {'name': 'Flutter –≥—É—Ä—É', 'description': '–ó–∞–≤–µ—Ä—à–∏—Ç–µ –≤—Å–µ —É—Ä–æ–∫–∏ –ø–æ Flutter', 'icon': 'üíô', 
         'category': '–ö–∞—Ç–µ–≥–æ—Ä–∏–∏', 'requirement_type': 'category_complete', 'requirement_value': 3, 'points': 75},
        
        # –î–æ—Å—Ç–∏–∂–µ–Ω–∏—è –∑–∞ —Å–∫–æ—Ä–æ—Å—Ç—å –∏ —Å—Ç—Ä–∏–∫–∏
        {'name': '–ë—ã—Å—Ç—Ä–∞—è –º–æ–ª–Ω–∏—è', 'description': '–ó–∞–≤–µ—Ä—à–∏—Ç–µ —É—Ä–æ–∫ –º–µ–Ω–µ–µ —á–µ–º –∑–∞ 5 –º–∏–Ω—É—Ç', 'icon': '‚ö°', 
         'category': '–°–∫–æ—Ä–æ—Å—Ç—å', 'requirement_type': 'lesson_speed', 'requirement_value': 5, 'points': 20},
        {'name': '–ú–∞—Ä–∞—Ñ–æ–Ω–µ—Ü', 'description': '–ó–∞–≤–µ—Ä—à–∏—Ç–µ 5 —É—Ä–æ–∫–æ–≤ –ø–æ–¥—Ä—è–¥ –∑–∞ –æ–¥–∏–Ω –¥–µ–Ω—å', 'icon': 'üèÉ', 
         'category': '–ê–∫—Ç–∏–≤–Ω–æ—Å—Ç—å', 'requirement_type': 'daily_streak', 'requirement_value': 5, 'points': 60},
        {'name': '–ù–∞—Å—Ç–æ–π—á–∏–≤—ã–π', 'description': '–ò–∑—É—á–∞–π—Ç–µ –∫—É—Ä—Å 7 –¥–Ω–µ–π –ø–æ–¥—Ä—è–¥', 'icon': 'üî•', 
         'category': '–ê–∫—Ç–∏–≤–Ω–æ—Å—Ç—å', 'requirement_type': 'learning_streak', 'requirement_value': 7, 'points': 80},
        
        # –û—Å–æ–±—ã–µ –¥–æ—Å—Ç–∏–∂–µ–Ω–∏—è
        {'name': '–ü–æ–ª—É–Ω–æ—á–Ω–∏–∫', 'description': '–ó–∞–≤–µ—Ä—à–∏—Ç–µ —É—Ä–æ–∫ –ø–æ—Å–ª–µ 23:00', 'icon': 'üåô', 
         'category': '–û—Å–æ–±—ã–µ', 'requirement_type': 'late_night', 'requirement_value': 1, 'points': 15},
        {'name': '–†–∞–Ω–Ω—è—è –ø—Ç–∞—à–∫–∞', 'description': '–ó–∞–≤–µ—Ä—à–∏—Ç–µ —É—Ä–æ–∫ –¥–æ 7:00', 'icon': 'üåÖ', 
         'category': '–û—Å–æ–±—ã–µ', 'requirement_type': 'early_bird', 'requirement_value': 1, 'points': 15},
        {'name': '–ü–µ—Ä—Ñ–µ–∫—Ü–∏–æ–Ω–∏—Å—Ç', 'description': '–ó–∞–≤–µ—Ä—à–∏—Ç–µ 10 —É—Ä–æ–∫–æ–≤ –±–µ–∑ –æ—à–∏–±–æ–∫', 'icon': 'üíé', 
         'category': '–û—Å–æ–±—ã–µ', 'requirement_type': 'perfect_lessons', 'requirement_value': 10, 'points': 100},
    ]
    
    for ach_data in achievements_data:
        existing = Achievement.query.filter_by(name=ach_data['name']).first()
        if not existing:
            achievement = Achievement(**ach_data)
            db.session.add(achievement)
    
    db.session.commit()

def check_achievements(user_id, lesson_id=None):
    """–ü—Ä–æ–≤–µ—Ä–∫–∞ –∏ –≤—ã–¥–∞—á–∞ –¥–æ—Å—Ç–∏–∂–µ–Ω–∏–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é"""
    user = User.query.get(user_id)
    if not user:
        return []
    
    new_achievements = []
    user_progress = UserProgress.query.filter_by(user_id=user_id, completed=True).all()
    completed_count = len(user_progress)
    
    # –ü–æ–ª—É—á–∞–µ–º —É–∂–µ –ø–æ–ª—É—á–µ–Ω–Ω—ã–µ –¥–æ—Å—Ç–∏–∂–µ–Ω–∏—è
    earned_achievements = UserAchievement.query.filter_by(user_id=user_id).all()
    earned_ids = {ea.achievement_id for ea in earned_achievements}
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –¥–æ—Å—Ç–∏–∂–µ–Ω–∏—è –ø–æ –∫–æ–ª–∏—á–µ—Å—Ç–≤—É —É—Ä–æ–∫–æ–≤
    lesson_achievements = Achievement.query.filter_by(requirement_type='lessons_count').all()
    for achievement in lesson_achievements:
        if achievement.id not in earned_ids and completed_count >= achievement.requirement_value:
            user_achievement = UserAchievement(user_id=user_id, achievement_id=achievement.id)
            db.session.add(user_achievement)
            new_achievements.append(achievement)
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –¥–æ—Å—Ç–∏–∂–µ–Ω–∏—è –ø–æ –≤—Ä–µ–º–µ–Ω–∏ (–µ—Å–ª–∏ –ø–µ—Ä–µ–¥–∞–Ω lesson_id)
    if lesson_id:
        from datetime import datetime
        current_hour = datetime.now().hour
        
        # –ü–æ–ª—É–Ω–æ—á–Ω–∏–∫ (23:00 - 6:59)
        if current_hour >= 23 or current_hour < 7:
            late_night_ach = Achievement.query.filter_by(requirement_type='late_night').first()
            if late_night_ach and late_night_ach.id not in earned_ids:
                user_achievement = UserAchievement(user_id=user_id, achievement_id=late_night_ach.id)
                db.session.add(user_achievement)
                new_achievements.append(late_night_ach)
        
        # –†–∞–Ω–Ω—è—è –ø—Ç–∞—à–∫–∞ (5:00 - 6:59)
        if 5 <= current_hour < 7:
            early_bird_ach = Achievement.query.filter_by(requirement_type='early_bird').first()
            if early_bird_ach and early_bird_ach.id not in earned_ids:
                user_achievement = UserAchievement(user_id=user_id, achievement_id=early_bird_ach.id)
                db.session.add(user_achievement)
                new_achievements.append(early_bird_ach)
    
    db.session.commit()
    return new_achievements

# API –º–∞—Ä—à—Ä—É—Ç—ã –¥–ª—è –¥–æ—Å—Ç–∏–∂–µ–Ω–∏–π
@app.route('/api/achievements')
@login_required
def get_achievements():
    """–ü–æ–ª—É—á–∏—Ç—å –≤—Å–µ –¥–æ—Å—Ç–∏–∂–µ–Ω–∏—è –∏ —Å—Ç–∞—Ç—É—Å –∏—Ö –ø–æ–ª—É—á–µ–Ω–∏—è"""
    try:
        all_achievements = Achievement.query.all()
        user_achievements = UserAchievement.query.filter_by(user_id=current_user.id).all()
        
        earned_ids = {ua.achievement_id for ua in user_achievements}
        
        achievements_data = []
        total_points = 0
        
        for achievement in all_achievements:
            is_earned = achievement.id in earned_ids
            if is_earned:
                total_points += achievement.points
                
            achievements_data.append({
                'id': achievement.id,
                'name': achievement.name,
                'description': achievement.description,
                'icon': achievement.icon,
                'category': achievement.category,
                'points': achievement.points,
                'earned': is_earned,
                'earned_at': next((ua.earned_at.isoformat() for ua in user_achievements 
                                 if ua.achievement_id == achievement.id), None)
            })
        
        return jsonify({
            'achievements': achievements_data,
            'total_points': total_points,
            'earned_count': len(earned_ids)
        })
    except Exception as e:
        return jsonify({'error': str(e)}), 500

@app.route('/achievements')
@login_required
def achievements_page():
    """–°—Ç—Ä–∞–Ω–∏—Ü–∞ –¥–æ—Å—Ç–∏–∂–µ–Ω–∏–π"""
    return render_template('achievements.html')

# –û–±–Ω–æ–≤–ª—è–µ–º —Ñ—É–Ω–∫—Ü–∏—é save_progress –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –¥–æ—Å—Ç–∏–∂–µ–Ω–∏–π
def save_progress_with_achievements():
    """–û–±–Ω–æ–≤–ª–µ–Ω–Ω–∞—è –≤–µ—Ä—Å–∏—è save_progress —Å –ø—Ä–æ–≤–µ—Ä–∫–æ–π –¥–æ—Å—Ç–∏–∂–µ–Ω–∏–π"""
    @app.route('/api/save_progress_v2', methods=['POST'])
    @login_required
    def save_progress_v2():
        try:
            data = request.json
            course_id = data.get('course_id')
            lesson_id = data.get('lesson_id')
            completed = data.get('completed', False)
            
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–π –ø—Ä–æ–≥—Ä–µ—Å—Å
            progress = UserProgress.query.filter_by(
                user_id=current_user.id,
                course_id=course_id,
                lesson_id=lesson_id
            ).first()
            
            if progress:
                progress.completed = completed
                if completed:
                    progress.completed_at = db.func.now()
            else:
                progress = UserProgress(
                    user_id=current_user.id,
                    course_id=course_id,
                    lesson_id=lesson_id,
                    completed=completed
                )
                db.session.add(progress)
            
            db.session.commit()
            
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º –¥–æ—Å—Ç–∏–∂–µ–Ω–∏—è –µ—Å–ª–∏ —É—Ä–æ–∫ –∑–∞–≤–µ—Ä—à–µ–Ω
            new_achievements = []
            if completed:
                new_achievements = check_achievements(current_user.id, lesson_id)
            
            return jsonify({
                'success': True,
                'message': '–ü—Ä–æ–≥—Ä–µ—Å—Å —Å–æ—Ö—Ä–∞–Ω–µ–Ω',
                'new_achievements': [{
                    'name': ach.name,
                    'description': ach.description,
                    'icon': ach.icon,
                    'points': ach.points
                } for ach in new_achievements]
            })
        except Exception as e:
            db.session.rollback()
            return jsonify({
                'success': False,
                'error': f'–û—à–∏–±–∫–∞ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è –ø—Ä–æ–≥—Ä–µ—Å—Å–∞: {str(e)}'
            })

# –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º –æ–±–Ω–æ–≤–ª–µ–Ω–Ω—É—é —Ñ—É–Ω–∫—Ü–∏—é
save_progress_with_achievements()

if __name__ == '__main__':
    # –°–æ–∑–¥–∞–Ω–∏–µ —Ç–∞–±–ª–∏—Ü –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö
    with app.app_context():
        db.create_all()
        # –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –¥–æ—Å—Ç–∏–∂–µ–Ω–∏–π
        init_achievements()
    
    app.run(debug=True)